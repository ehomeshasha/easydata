<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0052)http://www.verypdf.com/ -->
<html>
<head>
<title>pg_0113</title>

<style>
<!-- 
select {font-size:12px;}
A:link {text-decoration: none; color: blue}
A:visited {text-decoration: none; color: purple}
A:active {text-decoration: red}
A:hover {text-decoration: underline; color:red}
-->
</style>
<script TYPE="text/javascript"> 
<!-- hide 
function killerrors()
{ 
return true; 
} 
window.onerror = killerrors; 
// --> 
</script>
<style type="text/css">
<!--
.ft0{font-style:normal;font-weight:normal;font-size:16px;font-family:Times New Roman;color:#000000;}
.ft1{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft2{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#008000;}
.ft3{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#000000;}
.ft4{font-style:normal;font-weight:bold;font-size:13px;font-family:Arial;color:#010100;}
.ft5{font-style:normal;font-weight:normal;font-size:13px;font-family:Times New Roman;color:#000000;}
.ft6{font-style:normal;font-weight:bold;font-size:18px;font-family:Arial;color:#800000;}
-->
</style>
</head>
<body vlink="#FFFFFF" link="#FFFFFF" bgcolor="#ffffff">

<script TYPE="text/javascript">
var currentpos,timer; 
function initialize() 
{ 
timer=setInterval("scrollwindow()",10);
} 
function sc(){
clearInterval(timer); 
}
function scrollwindow() 
{ 
currentpos=document.body.scrollTop; 
window.scroll(0,++currentpos); 
if (currentpos != document.body.scrollTop) 
sc();
} 
document.onmousedown=sc
document.ondblclick=initialize
</script>
<div style="position:absolute;top:0;left:0"><img width="826" height="1169" src="pg_0113.jpg" ALT=""></div>
<div style="position:absolute;top:1102;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1102;left:391"><span class="ft0"> - 113 -</span></div>
<div style="position:absolute;top:81;left:90"><span class="ft1">it's a useful tool in a surprising number of situations. Like an ordinary queue, a priority </span></div>
<div style="position:absolute;top:97;left:90"><span class="ft1">queue has a front and a rear, and items are removed from the front. However, in a priority </span></div>
<div style="position:absolute;top:112;left:90"><span class="ft1">queue, items are ordered by key value, so that the item with the lowest key (or in some </span></div>
<div style="position:absolute;top:128;left:90"><span class="ft1">implementations the highest key) is always at the front. Items are inserted in the proper </span></div>
<div style="position:absolute;top:144;left:90"><span class="ft1">position to maintain the order.</span></div>
<div style="position:absolute;top:141;left:273"><span class="ft0"> </span></div>
<div style="position:absolute;top:145;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:164;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:209;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:180;left:90"><span class="ft1"> Here's how the mail sorting analogy applies to a priority queue. Every time the postman </span></div>
<div style="position:absolute;top:196;left:90"><span class="ft1">hands you a letter, you insert it into your pile of pending letters according to its priority. If </span></div>
<div style="position:absolute;top:212;left:90"><span class="ft1">it must be answered immediately (the phone company is about to disconnect your </span></div>
<div style="position:absolute;top:227;left:90"><span class="ft1">modem line), it goes on top, while if it can wait for a leisurely answer (a letter from your </span></div>
<div style="position:absolute;top:243;left:90"><span class="ft1">Aunt Mabel), it goes on the bottom.</span></div>
<div style="position:absolute;top:240;left:306"><span class="ft0"> </span></div>
<div style="position:absolute;top:209;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:244;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:263;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:292;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:279;left:90"><span class="ft1"> When you have time to answer your mail, you start by taking the letter off the top (the </span></div>
<div style="position:absolute;top:295;left:90"><span class="ft1">front of the queue), thus ensuring that the most important letters are answered first. This </span></div>
<div style="position:absolute;top:311;left:90"><span class="ft1">is shown in Figure 4.10.</span></div>
<div style="position:absolute;top:308;left:237"><span class="ft0"> </span></div>
<div style="position:absolute;top:292;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:311;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:330;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:359;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:346;left:90"><span class="ft1"> Like stacks and queues, priority queues are often used as programmer's tools. We'll see </span></div>
<div style="position:absolute;top:362;left:90"><span class="ft1">one used in finding something called a minimum spanning tree for a graph, in </span></div>
<div style="position:absolute;top:362;left:568"><span class="ft2">Chapter </span></div>
<div style="position:absolute;top:378;left:90"><span class="ft2">14, &quot;Weighted Graphs.</span></div>
<div style="position:absolute;top:378;left:230"><span class="ft3">&quot;</span></div>
<div style="position:absolute;top:375;left:235"><span class="ft0"> </span></div>
<div style="position:absolute;top:359;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:378;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:397;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:530;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:651;left:438"><span class="ft0">  </span></div>
<div style="position:absolute;top:530;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:651;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:670;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:686;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:686;left:136"><span class="ft4"> Figure 4.10:  Letters in a priority queue</span></div>
<div style="position:absolute;top:683;left:379"><span class="ft0"> </span></div>
<div style="position:absolute;top:686;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:708;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:707;left:136"><span class="ft5">  </span></div>
<div style="position:absolute;top:707;left:640"><span class="ft5">  </span></div>
<div style="position:absolute;top:709;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:728;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:765;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:744;left:90"><span class="ft1"> Also, like ordinary queues, priority queues are used in various ways in certain computer </span></div>
<div style="position:absolute;top:760;left:90"><span class="ft1">systems. In a preemptive multitasking operating system, for example, programs may be </span></div>
<div style="position:absolute;top:776;left:90"><span class="ft1">placed in a priority queue so the highest-priority program is the next one to receive a </span></div>
<div style="position:absolute;top:791;left:90"><span class="ft1">time-slice that allows it to execute.</span></div>
<div style="position:absolute;top:788;left:301"><span class="ft0"> </span></div>
<div style="position:absolute;top:765;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:792;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:811;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:856;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:827;left:90"><span class="ft1"> In many situations you want access to the item with the lowest key value (which might </span></div>
<div style="position:absolute;top:843;left:90"><span class="ft1">represent the cheapest or shortest way to do something). Thus the item with the smallest </span></div>
<div style="position:absolute;top:859;left:90"><span class="ft1">key has the highest priority. Somewhat arbitrarily, we'll assume that's the case in this </span></div>
<div style="position:absolute;top:875;left:90"><span class="ft1">discussion, although there are other situations in which the highest key has the highest </span></div>
<div style="position:absolute;top:890;left:90"><span class="ft1">priority.</span></div>
<div style="position:absolute;top:887;left:136"><span class="ft0"> </span></div>
<div style="position:absolute;top:856;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:891;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:910;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:963;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:926;left:90"><span class="ft1"> Besides providing quick access to the item with the smallest key, you also want a priority </span></div>
<div style="position:absolute;top:942;left:90"><span class="ft1">queue to provide fairly quick insertion. For this reason, priority queues are, as we noted </span></div>
<div style="position:absolute;top:958;left:90"><span class="ft1">earlier, often implemented with a data structure called a heap. We'll look at heaps in </span></div>
<div style="position:absolute;top:974;left:90"><span class="ft2">Chapter 12</span></div>
<div style="position:absolute;top:974;left:159"><span class="ft3">. In this chapter, we'll show a priority queue implemented by a simple array. </span></div>
<div style="position:absolute;top:990;left:90"><span class="ft3">This implementation suffers from slow insertion, but it's simpler and is appropriate when </span></div>
<div style="position:absolute;top:1005;left:90"><span class="ft3">the number of items isn't high or insertion speed isn't critical.</span></div>
<div style="position:absolute;top:1002;left:461"><span class="ft0"> </span></div>
<div style="position:absolute;top:963;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:1006;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1025;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:1041;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1040;left:90"><span class="ft6"> The PriorityQ Workshop Applet</span></div>
<div style="position:absolute;top:1042;left:369"><span class="ft0"> </span></div>
<div style="position:absolute;top:1041;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:1046;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1065;left:80"><span class="ft0"> </span></div>
<script TYPE="text/javascript">
			var currentZoom = parent.ltop.currentZoom;
			if(currentZoom != undefined)
				document.body.style.zoom=currentZoom/100;
			</script>
</body>
</html>