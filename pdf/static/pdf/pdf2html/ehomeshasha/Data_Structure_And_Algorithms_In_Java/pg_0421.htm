<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0052)http://www.verypdf.com/ -->
<html>
<head>
<title>pg_0421</title>

<style>
<!-- 
select {font-size:12px;}
A:link {text-decoration: none; color: blue}
A:visited {text-decoration: none; color: purple}
A:active {text-decoration: red}
A:hover {text-decoration: underline; color:red}
-->
</style>
<script TYPE="text/javascript"> 
<!-- hide 
function killerrors()
{ 
return true; 
} 
window.onerror = killerrors; 
// --> 
</script>
<style type="text/css">
<!--
.ft0{font-style:normal;font-weight:normal;font-size:16px;font-family:Times New Roman;color:#000000;}
.ft1{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft2{font-style:normal;font-weight:normal;font-size:13px;font-family:Times New Roman;color:#010100;}
.ft3{font-style:normal;font-weight:bold;font-size:18px;font-family:Arial;color:#800000;}
-->
</style>
</head>
<body vlink="#FFFFFF" link="#FFFFFF" bgcolor="#ffffff">

<script TYPE="text/javascript">
var currentpos,timer; 
function initialize() 
{ 
timer=setInterval("scrollwindow()",10);
} 
function sc(){
clearInterval(timer); 
}
function scrollwindow() 
{ 
currentpos=document.body.scrollTop; 
window.scroll(0,++currentpos); 
if (currentpos != document.body.scrollTop) 
sc();
} 
document.onmousedown=sc
document.ondblclick=initialize
</script>
<div style="position:absolute;top:0;left:0"><img width="826" height="1169" src="pg_0421.jpg" ALT=""></div>
<div style="position:absolute;top:1102;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1102;left:391"><span class="ft0"> - 421 -</span></div>
<div style="position:absolute;top:81;left:90"><span class="ft1">has at least one child. Within the loop we check if there is a right child (there may be only </span></div>
<div style="position:absolute;top:97;left:90"><span class="ft1">a left) and if so, compare the children's keys, setting </span></div>
<div style="position:absolute;top:97;left:413"><span class="ft2">largerChild</span></div>
<div style="position:absolute;top:97;left:505"><span class="ft1"> appropriately.</span></div>
<div style="position:absolute;top:94;left:593"><span class="ft0"> </span></div>
<div style="position:absolute;top:98;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:117;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:140;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:133;left:90"><span class="ft1"> Then we check if the key of the original node (now in </span></div>
<div style="position:absolute;top:133;left:418"><span class="ft2">top</span></div>
<div style="position:absolute;top:133;left:443"><span class="ft1">) is greater than that of </span></div>
<div style="position:absolute;top:151;left:90"><span class="ft2">largerChild</span></div>
<div style="position:absolute;top:151;left:182"><span class="ft1">; if so, the trickle-down process is complete and we exit the loop.</span></div>
<div style="position:absolute;top:148;left:578"><span class="ft0"> </span></div>
<div style="position:absolute;top:140;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:151;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:171;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:186;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:185;left:113"><span class="ft2"> public void trickleDown(int index)</span></div>
<div style="position:absolute;top:182;left:396"><span class="ft0"> </span></div>
<div style="position:absolute;top:186;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:190;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:205;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:205;left:113"><span class="ft2">    {</span></div>
<div style="position:absolute;top:202;left:147"><span class="ft0"> </span></div>
<div style="position:absolute;top:205;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:209;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:224;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:224;left:113"><span class="ft2">    int largerChild;</span></div>
<div style="position:absolute;top:221;left:272"><span class="ft0"> </span></div>
<div style="position:absolute;top:224;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:228;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:243;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:243;left:113"><span class="ft2">    Node top = heapArray[index];       // save root</span></div>
<div style="position:absolute;top:240;left:530"><span class="ft0"> </span></div>
<div style="position:absolute;top:243;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:247;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:263;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:262;left:113"><span class="ft2">    while(index &lt; currentSize/2)       // while node has at</span></div>
<div style="position:absolute;top:259;left:596"><span class="ft0">   </span></div>
<div style="position:absolute;top:266;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:282;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:281;left:113"><span class="ft2">       {                               //    least one child,</span></div>
<div style="position:absolute;top:278;left:613"><span class="ft0">   </span></div>
<div style="position:absolute;top:286;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:301;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:300;left:113"><span class="ft2">       int leftChild = 2*index+1;</span></div>
<div style="position:absolute;top:297;left:380"><span class="ft0"> </span></div>
<div style="position:absolute;top:301;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:305;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:320;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:320;left:113"><span class="ft2">       int rightChild = leftChild+1;</span></div>
<div style="position:absolute;top:317;left:405"><span class="ft0"> </span></div>
<div style="position:absolute;top:320;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:324;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:339;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:339;left:113"><span class="ft2">                                       // find larger child</span></div>
<div style="position:absolute;top:336;left:596"><span class="ft0">   </span></div>
<div style="position:absolute;top:343;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:358;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:358;left:113"><span class="ft2">       if(rightChild &lt; currentSize &amp;&amp;  // (rightChild exists.)</span></div>
<div style="position:absolute;top:355;left:621"><span class="ft0">   </span></div>
<div style="position:absolute;top:362;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:378;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:377;left:113"><span class="ft2">                           heapArray[leftChild].iData &lt;</span></div>
<div style="position:absolute;top:374;left:563"><span class="ft0"> </span></div>
<div style="position:absolute;top:378;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:381;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:397;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:396;left:113"><span class="ft2">                           heapArray[rightChild].iData)</span></div>
<div style="position:absolute;top:393;left:563"><span class="ft0"> </span></div>
<div style="position:absolute;top:397;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:401;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:416;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:415;left:113"><span class="ft2">          largerChild = rightChild;</span></div>
<div style="position:absolute;top:412;left:396"><span class="ft0"> </span></div>
<div style="position:absolute;top:416;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:420;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:435;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:435;left:113"><span class="ft2">       else</span></div>
<div style="position:absolute;top:432;left:197"><span class="ft0"> </span></div>
<div style="position:absolute;top:435;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:439;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:454;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:454;left:113"><span class="ft2">          largerChild = leftChild;</span></div>
<div style="position:absolute;top:451;left:388"><span class="ft0"> </span></div>
<div style="position:absolute;top:454;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:458;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:473;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:473;left:113"><span class="ft2">                                       // top &gt;= largerChild.</span></div>
<div style="position:absolute;top:470;left:613"><span class="ft0">   </span></div>
<div style="position:absolute;top:477;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:493;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:492;left:113"><span class="ft2">       if(top.iData &gt;= heapArray[largerChild].iData)</span></div>
<div style="position:absolute;top:489;left:538"><span class="ft0"> </span></div>
<div style="position:absolute;top:493;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:496;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:512;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:511;left:113"><span class="ft2">          break;</span></div>
<div style="position:absolute;top:508;left:238"><span class="ft0"> </span></div>
<div style="position:absolute;top:512;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:516;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:531;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:530;left:113"><span class="ft2">                                       // shift child up</span></div>
<div style="position:absolute;top:527;left:571"><span class="ft0"> </span></div>
<div style="position:absolute;top:531;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:535;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:550;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:550;left:113"><span class="ft2">       heapArray[index] = heapArray[largerChild];</span></div>
<div style="position:absolute;top:547;left:513"><span class="ft0"> </span></div>
<div style="position:absolute;top:550;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:554;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:569;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:569;left:113"><span class="ft2">       index = largerChild;            // go down</span></div>
<div style="position:absolute;top:566;left:513"><span class="ft0"> </span></div>
<div style="position:absolute;top:569;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:573;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:588;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:588;left:113"><span class="ft2">       }  // end while</span></div>
<div style="position:absolute;top:585;left:288"><span class="ft0"> </span></div>
<div style="position:absolute;top:588;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:592;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:608;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:607;left:113"><span class="ft2">    heapArray[index] = top;            // index &lt;- root</span></div>
<div style="position:absolute;top:604;left:563"><span class="ft0"> </span></div>
<div style="position:absolute;top:608;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:611;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:630;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:646;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:645;left:113"><span class="ft2">    }  // end trickleDown()</span></div>
<div style="position:absolute;top:642;left:330"><span class="ft0"> </span></div>
<div style="position:absolute;top:646;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:650;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:669;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:692;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:685;left:90"><span class="ft1"> On exiting the loop we need only restore the node stored in </span></div>
<div style="position:absolute;top:685;left:458"><span class="ft2">top</span></div>
<div style="position:absolute;top:685;left:483"><span class="ft1"> to its appropriate </span></div>
<div style="position:absolute;top:702;left:90"><span class="ft1">position, pointed to by </span></div>
<div style="position:absolute;top:702;left:229"><span class="ft2">index</span></div>
<div style="position:absolute;top:702;left:271"><span class="ft1">.</span></div>
<div style="position:absolute;top:699;left:275"><span class="ft0"> </span></div>
<div style="position:absolute;top:692;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:703;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:722;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:739;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:738;left:90"><span class="ft3"> Key Change</span></div>
<div style="position:absolute;top:740;left:199"><span class="ft0"> </span></div>
<div style="position:absolute;top:739;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:744;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:763;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:794;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:780;left:90"><span class="ft1"> Once we've created the </span></div>
<div style="position:absolute;top:780;left:240"><span class="ft2">trickleDown()</span></div>
<div style="position:absolute;top:780;left:348"><span class="ft1"> and </span></div>
<div style="position:absolute;top:780;left:379"><span class="ft2">trickleUp()</span></div>
<div style="position:absolute;top:780;left:470"><span class="ft1"> methods, it's easy to </span></div>
<div style="position:absolute;top:796;left:90"><span class="ft1">implement an algorithm to change the priority (the key) of a node and then trickle it up or </span></div>
<div style="position:absolute;top:813;left:90"><span class="ft1">down to its proper position. The </span></div>
<div style="position:absolute;top:813;left:288"><span class="ft2">change()</span></div>
<div style="position:absolute;top:813;left:355"><span class="ft1"> method accomplishes this:</span></div>
<div style="position:absolute;top:810;left:522"><span class="ft0"> </span></div>
<div style="position:absolute;top:794;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:814;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:833;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:848;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:848;left:113"><span class="ft2"> public boolean change(int index, int newValue)</span></div>
<div style="position:absolute;top:845;left:496"><span class="ft0"> </span></div>
<div style="position:absolute;top:848;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:852;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:867;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:867;left:113"><span class="ft2">    {</span></div>
<div style="position:absolute;top:864;left:147"><span class="ft0"> </span></div>
<div style="position:absolute;top:867;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:871;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:886;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:886;left:113"><span class="ft2">    if(index&lt;0 || index&gt;=currentSize)</span></div>
<div style="position:absolute;top:883;left:413"><span class="ft0"> </span></div>
<div style="position:absolute;top:886;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:890;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:906;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:905;left:113"><span class="ft2">       return false;</span></div>
<div style="position:absolute;top:902;left:272"><span class="ft0"> </span></div>
<div style="position:absolute;top:906;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:909;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:925;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:924;left:113"><span class="ft2">    int oldValue = heapArray[index].iData;  // remember old</span></div>
<div style="position:absolute;top:921;left:596"><span class="ft0">   </span></div>
<div style="position:absolute;top:929;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:944;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:943;left:113"><span class="ft2">    heapArray[index].iData = newValue;  // change to new</span></div>
<div style="position:absolute;top:940;left:571"><span class="ft0"> </span></div>
<div style="position:absolute;top:944;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:948;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:963;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:963;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:967;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:982;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:982;left:113"><span class="ft2">    if(oldValue &lt; newValue)             // if raised,</span></div>
<div style="position:absolute;top:979;left:546"><span class="ft0"> </span></div>
<div style="position:absolute;top:982;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:986;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1001;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1001;left:113"><span class="ft2">       trickleUp(index);                // trickle it up</span></div>
<div style="position:absolute;top:998;left:571"><span class="ft0"> </span></div>
<div style="position:absolute;top:1001;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:1005;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1021;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1020;left:113"><span class="ft2">    else                                // if lowered,</span></div>
<div style="position:absolute;top:1017;left:555"><span class="ft0"> </span></div>
<div style="position:absolute;top:1021;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:1024;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1040;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1039;left:113"><span class="ft2">       trickleDown(index);              // trickle it down</span></div>
<div style="position:absolute;top:1036;left:588"><span class="ft0"> </span></div>
<div style="position:absolute;top:1040;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:1044;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1059;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1058;left:113"><span class="ft2">    return true;</span></div>
<div style="position:absolute;top:1055;left:238"><span class="ft0"> </span></div>
<div style="position:absolute;top:1059;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:1063;left:79"><span class="ft0"> </span></div>
<script TYPE="text/javascript">
			var currentZoom = parent.ltop.currentZoom;
			if(currentZoom != undefined)
				document.body.style.zoom=currentZoom/100;
			</script>
</body>
</html>