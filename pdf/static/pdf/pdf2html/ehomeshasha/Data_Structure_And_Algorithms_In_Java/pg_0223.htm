<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0052)http://www.verypdf.com/ -->
<html>
<head>
<title>pg_0223</title>

<style>
<!-- 
select {font-size:12px;}
A:link {text-decoration: none; color: blue}
A:visited {text-decoration: none; color: purple}
A:active {text-decoration: red}
A:hover {text-decoration: underline; color:red}
-->
</style>
<script TYPE="text/javascript"> 
<!-- hide 
function killerrors()
{ 
return true; 
} 
window.onerror = killerrors; 
// --> 
</script>
<style type="text/css">
<!--
.ft0{font-style:normal;font-weight:normal;font-size:16px;font-family:Times New Roman;color:#000000;}
.ft1{font-style:normal;font-weight:normal;font-size:13px;font-family:Times New Roman;color:#010100;}
.ft2{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft3{font-style:normal;font-weight:bold;font-size:16px;font-family:Verdana;color:#000000;}
.ft4{font-style:normal;font-weight:bold;font-size:18px;font-family:Arial;color:#000080;}
.ft5{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#008000;}
.ft6{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#000000;}
.ft7{font-style:normal;font-weight:normal;font-size:11px;font-family:Times New Roman;color:#000000;}
.ft8{font-style:normal;font-weight:bold;font-size:18px;font-family:Arial;color:#800000;}
-->
</style>
</head>
<body vlink="#FFFFFF" link="#FFFFFF" bgcolor="#ffffff">

<script TYPE="text/javascript">
var currentpos,timer; 
function initialize() 
{ 
timer=setInterval("scrollwindow()",10);
} 
function sc(){
clearInterval(timer); 
}
function scrollwindow() 
{ 
currentpos=document.body.scrollTop; 
window.scroll(0,++currentpos); 
if (currentpos != document.body.scrollTop) 
sc();
} 
document.onmousedown=sc
document.ondblclick=initialize
</script>
<div style="position:absolute;top:0;left:0"><img width="826" height="1169" src="pg_0223.jpg" ALT=""></div>
<div style="position:absolute;top:1102;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1102;left:391"><span class="ft0"> - 223 -</span></div>
<div style="position:absolute;top:80;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:80;left:113"><span class="ft1">       Move bottom disk 2 from B to C</span></div>
<div style="position:absolute;top:77;left:413"><span class="ft0"> </span></div>
<div style="position:absolute;top:80;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:84;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:99;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:99;left:113"><span class="ft1">       Enter (1 disk): s=A, i=B, d=C</span></div>
<div style="position:absolute;top:96;left:405"><span class="ft0"> </span></div>
<div style="position:absolute;top:99;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:103;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:118;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:118;left:113"><span class="ft1">          Base case: move disk 1 from A to C</span></div>
<div style="position:absolute;top:115;left:471"><span class="ft0"> </span></div>
<div style="position:absolute;top:118;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:122;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:138;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:137;left:113"><span class="ft1">       Return (1 disk)</span></div>
<div style="position:absolute;top:134;left:288"><span class="ft0"> </span></div>
<div style="position:absolute;top:138;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:141;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:157;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:156;left:113"><span class="ft1">    Return (2 disks)</span></div>
<div style="position:absolute;top:153;left:272"><span class="ft0"> </span></div>
<div style="position:absolute;top:157;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:161;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:176;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:175;left:113"><span class="ft1"> Return (3 disks)</span></div>
<div style="position:absolute;top:172;left:247"><span class="ft0"> </span></div>
<div style="position:absolute;top:176;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:180;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:199;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:229;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:215;left:90"><span class="ft2"> If you study this output along with the source code for </span></div>
<div style="position:absolute;top:215;left:422"><span class="ft1">doTower()</span></div>
<div style="position:absolute;top:215;left:497"><span class="ft2">, it should become clear </span></div>
<div style="position:absolute;top:232;left:90"><span class="ft2">exactly how the method works. It's amazing that such a small amount of code can solve </span></div>
<div style="position:absolute;top:248;left:90"><span class="ft2">such a seemingly complicated problem.</span></div>
<div style="position:absolute;top:245;left:334"><span class="ft0"> </span></div>
<div style="position:absolute;top:248;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:265;left:79"><span class="ft3"> </span></div>
<div style="position:absolute;top:284;left:79"><span class="ft4">Mergesort</span></div>
<div style="position:absolute;top:286;left:169"><span class="ft0"> </span></div>
<div style="position:absolute;top:285;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:290;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:309;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:374;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:325;left:90"><span class="ft2"> Our final example of recursion is the mergesort. This is a much more efficient sorting </span></div>
<div style="position:absolute;top:341;left:90"><span class="ft2">technique than those we saw in</span></div>
<div style="position:absolute;top:341;left:284"><span class="ft5"> Chapter 3, &quot;Simple Sorting,&quot;</span></div>
<div style="position:absolute;top:341;left:461"><span class="ft6"> at least in terms of speed. </span></div>
<div style="position:absolute;top:359;left:90"><span class="ft6">While the bubble, insertion, and selection sorts take O(N</span></div>
<div style="position:absolute;top:354;left:437"><span class="ft7">2</span></div>
<div style="position:absolute;top:359;left:443"><span class="ft6">) time, the mergesort is </span></div>
<div style="position:absolute;top:376;left:90"><span class="ft6">O(N*logN). The graph in </span></div>
<div style="position:absolute;top:376;left:244"><span class="ft5">Figure 2.9</span></div>
<div style="position:absolute;top:376;left:307"><span class="ft6"> (in </span></div>
<div style="position:absolute;top:376;left:330"><span class="ft2">Chapter 2</span></div>
<div style="position:absolute;top:376;left:391"><span class="ft6">) shows how much faster this is. For </span></div>
<div style="position:absolute;top:394;left:90"><span class="ft6">example, if N (the number of items to be sorted) is 10,000, then N</span></div>
<div style="position:absolute;top:389;left:493"><span class="ft7">2</span></div>
<div style="position:absolute;top:394;left:499"><span class="ft6"> is 100,000,000, while </span></div>
<div style="position:absolute;top:411;left:90"><span class="ft6">N*logN is only 40,000. If sorting this many items required 40 seconds with the mergesort, </span></div>
<div style="position:absolute;top:427;left:90"><span class="ft6">it would take almost 28 hours for the insertion sort.</span></div>
<div style="position:absolute;top:424;left:401"><span class="ft0"> </span></div>
<div style="position:absolute;top:374;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:427;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:446;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:468;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:462;left:90"><span class="ft2"> The mergesort is also fairly easy to implement. It's conceptually easier than quicksort and </span></div>
<div style="position:absolute;top:478;left:90"><span class="ft2">the Shell short, which we'll encounter in the </span></div>
<div style="position:absolute;top:478;left:360"><span class="ft5">next chapter.</span></div>
<div style="position:absolute;top:475;left:440"><span class="ft0"> </span></div>
<div style="position:absolute;top:468;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:478;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:497;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:527;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:513;left:90"><span class="ft2"> The downside of the mergesort is that it requires an additional array in memory, equal in </span></div>
<div style="position:absolute;top:529;left:90"><span class="ft2">size to the one being sorted. If your original array barely fits in memory, the mergesort </span></div>
<div style="position:absolute;top:545;left:90"><span class="ft2">won't work. However, if you have enough space, it's a good choice.</span></div>
<div style="position:absolute;top:542;left:502"><span class="ft0"> </span></div>
<div style="position:absolute;top:527;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:545;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:564;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:581;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:580;left:90"><span class="ft8"> Merging Two Sorted Arrays</span></div>
<div style="position:absolute;top:582;left:335"><span class="ft0"> </span></div>
<div style="position:absolute;top:581;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:586;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:605;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:643;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:621;left:90"><span class="ft2"> The heart of the mergesort algorithm is the merging of two already sorted arrays. Merging </span></div>
<div style="position:absolute;top:637;left:90"><span class="ft2">two sorted arrays A and B creates a third array, C, that contains all the elements of A and </span></div>
<div style="position:absolute;top:653;left:90"><span class="ft2">B, also arranged in sorted order. We'll examine the merging process first; later we'll see </span></div>
<div style="position:absolute;top:669;left:90"><span class="ft2">how it's used in sorting.</span></div>
<div style="position:absolute;top:666;left:234"><span class="ft0"> </span></div>
<div style="position:absolute;top:643;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:669;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:688;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:718;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:704;left:90"><span class="ft2"> Imagine two sorted arrays. They don't need to be the same size. Let's say array A has 4 </span></div>
<div style="position:absolute;top:720;left:90"><span class="ft2">elements and array B has 6. They will be merged into an array C that starts with 10 </span></div>
<div style="position:absolute;top:736;left:90"><span class="ft2">empty cells. Figure 6.14 shows how this looks.</span></div>
<div style="position:absolute;top:733;left:376"><span class="ft0"> </span></div>
<div style="position:absolute;top:718;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:736;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:755;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:793;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:771;left:90"><span class="ft2"> In the figure, the circled numbers indicate the order in which elements are transferred </span></div>
<div style="position:absolute;top:787;left:90"><span class="ft2">from A and B to C. Table 6.3 shows the comparisons necessary to determine which </span></div>
<div style="position:absolute;top:803;left:90"><span class="ft2">element will be copied. The steps in the table correspond to the steps in the figure. </span></div>
<div style="position:absolute;top:819;left:90"><span class="ft2">Following each comparison, the smaller element is copied to A.</span></div>
<div style="position:absolute;top:816;left:478"><span class="ft0"> </span></div>
<div style="position:absolute;top:793;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:819;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:838;left:80"><span class="ft0"> </span></div>
<script TYPE="text/javascript">
			var currentZoom = parent.ltop.currentZoom;
			if(currentZoom != undefined)
				document.body.style.zoom=currentZoom/100;
			</script>
</body>
</html>