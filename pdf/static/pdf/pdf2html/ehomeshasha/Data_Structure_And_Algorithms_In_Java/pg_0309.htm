<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0052)http://www.verypdf.com/ -->
<html>
<head>
<title>pg_0309</title>

<style>
<!-- 
select {font-size:12px;}
A:link {text-decoration: none; color: blue}
A:visited {text-decoration: none; color: purple}
A:active {text-decoration: red}
A:hover {text-decoration: underline; color:red}
-->
</style>
<script TYPE="text/javascript"> 
<!-- hide 
function killerrors()
{ 
return true; 
} 
window.onerror = killerrors; 
// --> 
</script>
<style type="text/css">
<!--
.ft0{font-style:normal;font-weight:normal;font-size:16px;font-family:Times New Roman;color:#000000;}
.ft1{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft2{font-style:normal;font-weight:bold;font-size:13px;font-family:Arial;color:#010100;}
.ft3{font-style:normal;font-weight:normal;font-size:13px;font-family:Times New Roman;color:#000000;}
.ft4{font-style:normal;font-weight:normal;font-size:13px;font-family:Times New Roman;color:#010100;}
.ft5{font-style:normal;font-weight:bold;font-size:16px;font-family:Verdana;color:#000000;}
.ft6{font-style:normal;font-weight:bold;font-size:18px;font-family:Arial;color:#000080;}
-->
</style>
</head>
<body vlink="#FFFFFF" link="#FFFFFF" bgcolor="#ffffff">

<script TYPE="text/javascript">
var currentpos,timer; 
function initialize() 
{ 
timer=setInterval("scrollwindow()",10);
} 
function sc(){
clearInterval(timer); 
}
function scrollwindow() 
{ 
currentpos=document.body.scrollTop; 
window.scroll(0,++currentpos); 
if (currentpos != document.body.scrollTop) 
sc();
} 
document.onmousedown=sc
document.ondblclick=initialize
</script>
<div style="position:absolute;top:0;left:0"><img width="826" height="1169" src="pg_0309.jpg" ALT=""></div>
<div style="position:absolute;top:1102;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1102;left:391"><span class="ft0"> - 309 -</span></div>
<div style="position:absolute;top:81;left:90"><span class="ft1">The position of the node in the array corresponds to its position in the tree. The node at </span></div>
<div style="position:absolute;top:97;left:90"><span class="ft1">index 0 is the root, the node at index 1 is the root's left child, and so on, progressing from </span></div>
<div style="position:absolute;top:112;left:90"><span class="ft1">left to right along each level of the tree. This is shown in Figure 8.21.</span></div>
<div style="position:absolute;top:109;left:510"><span class="ft0"> </span></div>
<div style="position:absolute;top:113;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:132;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:247;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:352;left:454"><span class="ft0">  </span></div>
<div style="position:absolute;top:247;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:352;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:371;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:386;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:387;left:136"><span class="ft2"> Figure 8.21:  Tree represented by an array</span></div>
<div style="position:absolute;top:384;left:402"><span class="ft0"> </span></div>
<div style="position:absolute;top:386;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:409;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:407;left:136"><span class="ft3">  </span></div>
<div style="position:absolute;top:407;left:640"><span class="ft3">  </span></div>
<div style="position:absolute;top:409;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:428;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:467;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:444;left:90"><span class="ft1"> Every position in the tree, whether it represents an existing node or not, corresponds to a </span></div>
<div style="position:absolute;top:460;left:90"><span class="ft1">cell in the array. Adding a node at a given position in the tree means inserting the node </span></div>
<div style="position:absolute;top:476;left:90"><span class="ft1">into the equivalent cell in the array. Cells representing tree positions with no nodes are </span></div>
<div style="position:absolute;top:493;left:90"><span class="ft1">filled with zero or </span></div>
<div style="position:absolute;top:493;left:198"><span class="ft4">null</span></div>
<div style="position:absolute;top:493;left:232"><span class="ft1">.</span></div>
<div style="position:absolute;top:490;left:236"><span class="ft0"> </span></div>
<div style="position:absolute;top:467;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:493;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:513;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:543;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:528;left:90"><span class="ft1"> With this scheme, a node's children and parent can be found by applying some simple </span></div>
<div style="position:absolute;top:545;left:90"><span class="ft1">arithmetic to the node's index number in the array. If a node's index number is </span></div>
<div style="position:absolute;top:545;left:572"><span class="ft4">index</span></div>
<div style="position:absolute;top:545;left:613"><span class="ft1">, </span></div>
<div style="position:absolute;top:562;left:90"><span class="ft1">then this node's left child is</span></div>
<div style="position:absolute;top:559;left:256"><span class="ft0"> </span></div>
<div style="position:absolute;top:543;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:562;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:581;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:596;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:596;left:113"><span class="ft4"> 2*index + 1</span></div>
<div style="position:absolute;top:593;left:205"><span class="ft0"> </span></div>
<div style="position:absolute;top:596;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:600;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:619;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:635;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:635;left:90"><span class="ft1"> its right child is</span></div>
<div style="position:absolute;top:632;left:181"><span class="ft0"> </span></div>
<div style="position:absolute;top:635;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:638;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:658;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:673;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:672;left:113"><span class="ft4"> 2*index + 2</span></div>
<div style="position:absolute;top:669;left:205"><span class="ft0"> </span></div>
<div style="position:absolute;top:673;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:677;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:696;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:711;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:712;left:90"><span class="ft1"> and its parent is</span></div>
<div style="position:absolute;top:709;left:188"><span class="ft0"> </span></div>
<div style="position:absolute;top:711;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:715;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:734;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:750;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:749;left:113"><span class="ft4"> (index-1) / 2</span></div>
<div style="position:absolute;top:746;left:222"><span class="ft0"> </span></div>
<div style="position:absolute;top:750;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:753;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:772;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:795;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:789;left:90"><span class="ft1"> (where the '</span></div>
<div style="position:absolute;top:789;left:162"><span class="ft4">/</span></div>
<div style="position:absolute;top:789;left:171"><span class="ft1">' character indicates integer division with no remainder). You can check this </span></div>
<div style="position:absolute;top:806;left:90"><span class="ft1">out by looking at the figure.</span></div>
<div style="position:absolute;top:803;left:257"><span class="ft0"> </span></div>
<div style="position:absolute;top:795;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:806;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:825;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:863;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:841;left:90"><span class="ft1"> In most situations, representing a tree with an array isn't very efficient. Unfilled nodes and </span></div>
<div style="position:absolute;top:857;left:90"><span class="ft1">deleted nodes leave holes in the array, wasting memory. Even worse, when deletion of a </span></div>
<div style="position:absolute;top:873;left:90"><span class="ft1">node involves moving subtrees, every node in the subtree must be moved to its new </span></div>
<div style="position:absolute;top:889;left:90"><span class="ft1">location in the array, which is time-consuming in large trees.</span></div>
<div style="position:absolute;top:886;left:459"><span class="ft0"> </span></div>
<div style="position:absolute;top:863;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:889;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:908;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:954;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:924;left:90"><span class="ft1"> However, if deletions aren't allowed, then the array representation may be useful, </span></div>
<div style="position:absolute;top:940;left:90"><span class="ft1">especially if obtaining memory for each node dynamically is, for some reason, too time-</span></div>
<div style="position:absolute;top:956;left:90"><span class="ft1">consuming. The array representation may also be useful in special situations. The tree in </span></div>
<div style="position:absolute;top:972;left:90"><span class="ft1">the Workshop applet, for example, is represented internally as an array to make it easy to </span></div>
<div style="position:absolute;top:988;left:90"><span class="ft1">map the nodes from the array to fixed locations on the screen display.</span></div>
<div style="position:absolute;top:985;left:519"><span class="ft0"> </span></div>
<div style="position:absolute;top:988;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1005;left:79"><span class="ft5"> </span></div>
<div style="position:absolute;top:1024;left:79"><span class="ft6">Duplicate Keys</span></div>
<div style="position:absolute;top:1026;left:213"><span class="ft0"> </span></div>
<div style="position:absolute;top:1025;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:1030;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1049;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:1064;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1065;left:90"><span class="ft1"> A</span></div>
<div style="position:absolute;top:1065;left:100"><span class="ft1">s in other data structures, the problem of duplicate keys must be addressed. In the code </span></div>
<div style="position:absolute;top:1064;left:640"><span class="ft0"> </span></div>
<script TYPE="text/javascript">
			var currentZoom = parent.ltop.currentZoom;
			if(currentZoom != undefined)
				document.body.style.zoom=currentZoom/100;
			</script>
</body>
</html>