<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0052)http://www.verypdf.com/ -->
<html>
<head>
<title>pg_0256</title>

<style>
<!-- 
select {font-size:12px;}
A:link {text-decoration: none; color: blue}
A:visited {text-decoration: none; color: purple}
A:active {text-decoration: red}
A:hover {text-decoration: underline; color:red}
-->
</style>
<script TYPE="text/javascript"> 
<!-- hide 
function killerrors()
{ 
return true; 
} 
window.onerror = killerrors; 
// --> 
</script>
<style type="text/css">
<!--
.ft0{font-style:normal;font-weight:normal;font-size:16px;font-family:Times New Roman;color:#000000;}
.ft1{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft2{font-style:normal;font-weight:normal;font-size:13px;font-family:Times New Roman;color:#010100;}
.ft3{font-style:normal;font-weight:bold;font-size:16px;font-family:Arial;color:#010100;}
.ft4{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#008000;}
.ft5{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#000000;}
.ft6{font-style:italic;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
-->
</style>
</head>
<body vlink="#FFFFFF" link="#FFFFFF" bgcolor="#ffffff">

<script TYPE="text/javascript">
var currentpos,timer; 
function initialize() 
{ 
timer=setInterval("scrollwindow()",10);
} 
function sc(){
clearInterval(timer); 
}
function scrollwindow() 
{ 
currentpos=document.body.scrollTop; 
window.scroll(0,++currentpos); 
if (currentpos != document.body.scrollTop) 
sc();
} 
document.onmousedown=sc
document.ondblclick=initialize
</script>
<div style="position:absolute;top:0;left:0"><img width="826" height="1169" src="pg_0256.jpg" ALT=""></div>
<div style="position:absolute;top:1102;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1102;left:391"><span class="ft0"> - 256 -</span></div>
<div style="position:absolute;top:104;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:81;left:90"><span class="ft1"> The first </span></div>
<div style="position:absolute;top:81;left:144"><span class="ft2">while</span></div>
<div style="position:absolute;top:81;left:186"><span class="ft1"> loop exits when an item larger than </span></div>
<div style="position:absolute;top:81;left:409"><span class="ft2">pivot</span></div>
<div style="position:absolute;top:81;left:451"><span class="ft1"> is found; the second loop </span></div>
<div style="position:absolute;top:98;left:90"><span class="ft1">exits when an item smaller than </span></div>
<div style="position:absolute;top:98;left:289"><span class="ft2">pivot</span></div>
<div style="position:absolute;top:98;left:330"><span class="ft1"> is found. When both these loops exit, both </span></div>
<div style="position:absolute;top:115;left:90"><span class="ft2">leftPtr</span></div>
<div style="position:absolute;top:115;left:149"><span class="ft1"> and </span></div>
<div style="position:absolute;top:115;left:179"><span class="ft2">rightPtr</span></div>
<div style="position:absolute;top:115;left:246"><span class="ft1"> point to items that are in the wrong part of the array, so these </span></div>
<div style="position:absolute;top:132;left:90"><span class="ft1">items are swapped.</span></div>
<div style="position:absolute;top:129;left:211"><span class="ft0"> </span></div>
<div style="position:absolute;top:104;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:132;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:151;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:199;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:167;left:90"><span class="ft1"> After the swap, the two pointers continue on, again stopping at items that are in the </span></div>
<div style="position:absolute;top:184;left:90"><span class="ft1">wrong part of the array and swapping them. All this activity is nested in an outer </span></div>
<div style="position:absolute;top:184;left:582"><span class="ft2">while</span></div>
<div style="position:absolute;top:184;left:624"><span class="ft1"> </span></div>
<div style="position:absolute;top:201;left:90"><span class="ft1">loop, as can be seen in the </span></div>
<div style="position:absolute;top:201;left:260"><span class="ft2">partitionIt()</span></div>
<div style="position:absolute;top:201;left:368"><span class="ft1"> method in Listing 7.2. When the two </span></div>
<div style="position:absolute;top:218;left:90"><span class="ft1">pointers eventually meet, the partitioning process is complete and this outer </span></div>
<div style="position:absolute;top:218;left:558"><span class="ft2">while</span></div>
<div style="position:absolute;top:218;left:600"><span class="ft1"> loop </span></div>
<div style="position:absolute;top:235;left:90"><span class="ft1">exits.</span></div>
<div style="position:absolute;top:232;left:123"><span class="ft0"> </span></div>
<div style="position:absolute;top:199;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:235;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:254;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:300;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:270;left:90"><span class="ft1"> You can watch the pointers in action when you run the Partition Workshop applet with </span></div>
<div style="position:absolute;top:286;left:90"><span class="ft1">100 bars. These pointers, represented by blue arrows, start at opposite ends of the array </span></div>
<div style="position:absolute;top:302;left:90"><span class="ft1">and move toward each other, stopping and swapping as they go. The bars between them </span></div>
<div style="position:absolute;top:318;left:90"><span class="ft1">are unpartitioned; those they've already passed over are partitioned. When they meet, </span></div>
<div style="position:absolute;top:334;left:90"><span class="ft1">the entire array is partitioned. </span></div>
<div style="position:absolute;top:331;left:274"><span class="ft0"> </span></div>
<div style="position:absolute;top:300;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:334;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:353;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:368;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:369;left:90"><span class="ft3"> Handling Unusual Data</span></div>
<div style="position:absolute;top:369;left:273"><span class="ft0"> </span></div>
<div style="position:absolute;top:368;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:372;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:391;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:430;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:407;left:90"><span class="ft1"> If we were sure that there was a data item at the right end of the array that was smaller </span></div>
<div style="position:absolute;top:424;left:90"><span class="ft1">than the pivot value, and an item at the left end that was larger, the simplified </span></div>
<div style="position:absolute;top:424;left:567"><span class="ft2">while</span></div>
<div style="position:absolute;top:424;left:608"><span class="ft1"> </span></div>
<div style="position:absolute;top:440;left:90"><span class="ft1">loops previously shown would work fine. Unfortunately, the algorithm may be called upon </span></div>
<div style="position:absolute;top:456;left:90"><span class="ft1">to partition data that isn't so well organized.</span></div>
<div style="position:absolute;top:453;left:356"><span class="ft0"> </span></div>
<div style="position:absolute;top:430;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:457;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:476;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:515;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:492;left:90"><span class="ft1"> If all the data is smaller than the pivot value, for example, the </span></div>
<div style="position:absolute;top:492;left:468"><span class="ft2">leftPtr</span></div>
<div style="position:absolute;top:492;left:526"><span class="ft1"> variable will go all </span></div>
<div style="position:absolute;top:509;left:90"><span class="ft1">the way across the array, looking in vain for a larger item, and fall off the right end, </span></div>
<div style="position:absolute;top:525;left:90"><span class="ft1">creating an </span></div>
<div style="position:absolute;top:525;left:163"><span class="ft2">array index out of bounds</span></div>
<div style="position:absolute;top:525;left:371"><span class="ft1"> exception. A similar fate will befall </span></div>
<div style="position:absolute;top:542;left:90"><span class="ft2">rightPtr</span></div>
<div style="position:absolute;top:542;left:157"><span class="ft1"> if all the data is larger than the pivot value.</span></div>
<div style="position:absolute;top:539;left:421"><span class="ft0"> </span></div>
<div style="position:absolute;top:515;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:543;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:562;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:593;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:579;left:90"><span class="ft1"> To avoid these problems, extra tests must be placed in the </span></div>
<div style="position:absolute;top:579;left:454"><span class="ft2">while</span></div>
<div style="position:absolute;top:579;left:496"><span class="ft1"> loops to check for the </span></div>
<div style="position:absolute;top:596;left:90"><span class="ft1">ends of the array: </span></div>
<div style="position:absolute;top:596;left:202"><span class="ft2">leftPtr&lt;right</span></div>
<div style="position:absolute;top:596;left:310"><span class="ft1"> in the first loop, and </span></div>
<div style="position:absolute;top:596;left:439"><span class="ft2">rightPtr&gt;left</span></div>
<div style="position:absolute;top:596;left:552"><span class="ft1"> in the second. </span></div>
<div style="position:absolute;top:613;left:90"><span class="ft1">This can be seen in context in Listing 7.2.</span></div>
<div style="position:absolute;top:610;left:345"><span class="ft0"> </span></div>
<div style="position:absolute;top:593;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:613;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:632;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:662;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:648;left:90"><span class="ft1"> In the section on</span></div>
<div style="position:absolute;top:648;left:192"><span class="ft4"> quicksort</span></div>
<div style="position:absolute;top:648;left:252"><span class="ft5">, we'll see that a clever pivot-selection process can eliminate </span></div>
<div style="position:absolute;top:664;left:90"><span class="ft5">these end-of-array tests. Eliminating code from inner loops is always a good idea if you </span></div>
<div style="position:absolute;top:680;left:90"><span class="ft5">want to make a program run faster.</span></div>
<div style="position:absolute;top:677;left:306"><span class="ft0"> </span></div>
<div style="position:absolute;top:662;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:680;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:699;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:714;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:715;left:90"><span class="ft3"> Delicate Code</span></div>
<div style="position:absolute;top:715;left:200"><span class="ft0"> </span></div>
<div style="position:absolute;top:714;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:718;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:737;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:776;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:754;left:90"><span class="ft1"> The code in the </span></div>
<div style="position:absolute;top:754;left:190"><span class="ft2">while</span></div>
<div style="position:absolute;top:754;left:232"><span class="ft1"> loops is rather delicate. For example, you might be tempted to </span></div>
<div style="position:absolute;top:771;left:90"><span class="ft1">remove the increment operators from the inner </span></div>
<div style="position:absolute;top:771;left:381"><span class="ft2">while</span></div>
<div style="position:absolute;top:771;left:422"><span class="ft1"> loops and use them to replace the </span></div>
<div style="position:absolute;top:788;left:90"><span class="ft1">nop statements. (Nop refers to a statement consisting only of a semicolon, and means no </span></div>
<div style="position:absolute;top:804;left:90"><span class="ft6">operation.) For example, you might try to change this:</span></div>
<div style="position:absolute;top:801;left:419"><span class="ft0"> </span></div>
<div style="position:absolute;top:776;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:804;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:823;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:838;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:838;left:113"><span class="ft2"> while(leftPtr &lt; right &amp;&amp; theArray[++leftPtr] &lt; pivot)</span></div>
<div style="position:absolute;top:835;left:555"><span class="ft0"> </span></div>
<div style="position:absolute;top:838;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:842;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:857;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:857;left:113"><span class="ft2">    ;  // (nop)</span></div>
<div style="position:absolute;top:854;left:230"><span class="ft0"> </span></div>
<div style="position:absolute;top:857;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:861;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:880;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:896;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:896;left:90"><span class="ft1"> to this:</span></div>
<div style="position:absolute;top:893;left:131"><span class="ft0"> </span></div>
<div style="position:absolute;top:896;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:900;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:919;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:934;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:934;left:113"><span class="ft2"> while(leftPtr &lt; right &amp;&amp; theArray[leftPtr] &lt; pivot)</span></div>
<div style="position:absolute;top:931;left:538"><span class="ft0"> </span></div>
<div style="position:absolute;top:934;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:938;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:953;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:953;left:113"><span class="ft2">    ++leftPtr;</span></div>
<div style="position:absolute;top:950;left:222"><span class="ft0"> </span></div>
<div style="position:absolute;top:953;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:957;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:976;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:1008;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:993;left:90"><span class="ft1"> and similarly for the other inner </span></div>
<div style="position:absolute;top:993;left:285"><span class="ft2">while</span></div>
<div style="position:absolute;top:993;left:327"><span class="ft1"> loop. This would make it possible for the initial </span></div>
<div style="position:absolute;top:1010;left:90"><span class="ft1">values of the pointers to be </span></div>
<div style="position:absolute;top:1010;left:261"><span class="ft2">left</span></div>
<div style="position:absolute;top:1010;left:294"><span class="ft1"> and </span></div>
<div style="position:absolute;top:1010;left:325"><span class="ft2">right</span></div>
<div style="position:absolute;top:1010;left:367"><span class="ft1">, which is somewhat clearer than </span></div>
<div style="position:absolute;top:1010;left:572"><span class="ft2">left-1</span></div>
<div style="position:absolute;top:1010;left:622"><span class="ft1"> </span></div>
<div style="position:absolute;top:1027;left:90"><span class="ft1">and </span></div>
<div style="position:absolute;top:1027;left:117"><span class="ft2">right+1</span></div>
<div style="position:absolute;top:1027;left:176"><span class="ft1">.</span></div>
<div style="position:absolute;top:1024;left:179"><span class="ft0"> </span></div>
<div style="position:absolute;top:1008;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:1028;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1047;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:1062;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1063;left:90"><span class="ft1"> However, these changes result in the pointers being incremented only when the condition </span></div>
<div style="position:absolute;top:1062;left:640"><span class="ft0"> </span></div>
<script TYPE="text/javascript">
			var currentZoom = parent.ltop.currentZoom;
			if(currentZoom != undefined)
				document.body.style.zoom=currentZoom/100;
			</script>
</body>
</html>