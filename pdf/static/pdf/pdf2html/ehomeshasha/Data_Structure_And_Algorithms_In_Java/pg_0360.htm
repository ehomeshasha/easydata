<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0052)http://www.verypdf.com/ -->
<html>
<head>
<title>pg_0360</title>

<style>
<!-- 
select {font-size:12px;}
A:link {text-decoration: none; color: blue}
A:visited {text-decoration: none; color: purple}
A:active {text-decoration: red}
A:hover {text-decoration: underline; color:red}
-->
</style>
<script TYPE="text/javascript"> 
<!-- hide 
function killerrors()
{ 
return true; 
} 
window.onerror = killerrors; 
// --> 
</script>
<style type="text/css">
<!--
.ft0{font-style:normal;font-weight:normal;font-size:16px;font-family:Times New Roman;color:#000000;}
.ft1{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft2{font-style:italic;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft3{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#000000;}
.ft4{font-style:normal;font-weight:bold;font-size:13px;font-family:Arial;color:#010100;}
.ft5{font-style:normal;font-weight:normal;font-size:13px;font-family:Times New Roman;color:#000000;}
.ft6{font-style:normal;font-weight:bold;font-size:18px;font-family:Arial;color:#800000;}
-->
</style>
</head>
<body vlink="#FFFFFF" link="#FFFFFF" bgcolor="#ffffff">

<script TYPE="text/javascript">
var currentpos,timer; 
function initialize() 
{ 
timer=setInterval("scrollwindow()",10);
} 
function sc(){
clearInterval(timer); 
}
function scrollwindow() 
{ 
currentpos=document.body.scrollTop; 
window.scroll(0,++currentpos); 
if (currentpos != document.body.scrollTop) 
sc();
} 
document.onmousedown=sc
document.ondblclick=initialize
</script>
<div style="position:absolute;top:0;left:0"><img width="826" height="1169" src="pg_0360.jpg" ALT=""></div>
<div style="position:absolute;top:1102;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1102;left:391"><span class="ft0"> - 360 -</span></div>
<div style="position:absolute;top:81;left:90"><span class="ft1">simplify the drive control mechanism, data is stored on the disk in chunks called blocks, </span></div>
<div style="position:absolute;top:97;left:90"><span class="ft2">p</span></div>
<div style="position:absolute;top:97;left:98"><span class="ft2">ages, allocation units, or some other name, depending on the system. We'll call them </span></div>
<div style="position:absolute;top:112;left:90"><span class="ft1">blocks.</span></div>
<div style="position:absolute;top:109;left:133"><span class="ft0"> </span></div>
<div style="position:absolute;top:113;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:132;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:177;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:148;left:90"><span class="ft1"> The disk drive always reads or writes a minimum of one block of data at a time. Block </span></div>
<div style="position:absolute;top:164;left:90"><span class="ft1">size varies, depending on the operating system, the size of the disk drive, and other </span></div>
<div style="position:absolute;top:180;left:90"><span class="ft1">factors, but it is usually a power of 2. For our phone book example, let's assume a block </span></div>
<div style="position:absolute;top:196;left:90"><span class="ft1">size of 8,192 bytes (2e13). Thus our phone book database will require 256,000,000 bytes </span></div>
<div style="position:absolute;top:212;left:90"><span class="ft1">divided by 8,192 bytes per block, which is 31,250 blocks.</span></div>
<div style="position:absolute;top:209;left:439"><span class="ft0"> </span></div>
<div style="position:absolute;top:177;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:212;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:231;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:276;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:247;left:90"><span class="ft1"> Your software is most efficient when it specifies a read or write operation that's a multiple </span></div>
<div style="position:absolute;top:263;left:90"><span class="ft1">of the block size. If you ask to read 100 bytes, the system will read one block, 8,192 </span></div>
<div style="position:absolute;top:279;left:90"><span class="ft1">bytes, and throw away all but 100. Or if you ask to read 8,200 bytes, it will read two </span></div>
<div style="position:absolute;top:295;left:90"><span class="ft1">blocks, or 16,384 bytes, and throw away almost half of them. By organizing your software </span></div>
<div style="position:absolute;top:311;left:90"><span class="ft1">so that it works with a block of data at a time you can optimize its performance.</span></div>
<div style="position:absolute;top:308;left:574"><span class="ft0"> </span></div>
<div style="position:absolute;top:276;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:311;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:330;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:359;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:346;left:90"><span class="ft1"> Assuming our phone book record size of 512 bytes, you can store 16 records in a block </span></div>
<div style="position:absolute;top:362;left:90"><span class="ft1">(8,192 divided by 512), as shown in Figure 10.17</span></div>
<div style="position:absolute;top:362;left:391"><span class="ft3">. Thus for maximum efficiency it's </span></div>
<div style="position:absolute;top:378;left:90"><span class="ft3">important to read 16 records at a time (or multiples of this number).</span></div>
<div style="position:absolute;top:375;left:502"><span class="ft0"> </span></div>
<div style="position:absolute;top:359;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:378;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:397;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:529;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:650;left:454"><span class="ft0">  </span></div>
<div style="position:absolute;top:529;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:650;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:669;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:685;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:685;left:136"><span class="ft4"> Figure 10.17:  Blocks and records</span></div>
<div style="position:absolute;top:682;left:348"><span class="ft0"> </span></div>
<div style="position:absolute;top:685;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:708;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:706;left:136"><span class="ft5">  </span></div>
<div style="position:absolute;top:706;left:640"><span class="ft5">  </span></div>
<div style="position:absolute;top:708;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:727;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:748;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:743;left:90"><span class="ft1"> Notice that it's also useful to make your record size a multiple of 2. That way an integral </span></div>
<div style="position:absolute;top:759;left:90"><span class="ft1">number of them will always fit in a block.</span></div>
<div style="position:absolute;top:756;left:338"><span class="ft0"> </span></div>
<div style="position:absolute;top:748;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:759;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:778;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:816;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:794;left:90"><span class="ft1"> Of course the sizes shown in our phone book example for records, blocks, and so on are </span></div>
<div style="position:absolute;top:810;left:90"><span class="ft1">only illustrative; they will vary widely depending on the number and size of records and </span></div>
<div style="position:absolute;top:826;left:90"><span class="ft1">other software and hardware constraints. Blocks containing hundreds of records are </span></div>
<div style="position:absolute;top:842;left:90"><span class="ft1">common, and records may be much larger or smaller than 512 bytes.</span></div>
<div style="position:absolute;top:839;left:515"><span class="ft0"> </span></div>
<div style="position:absolute;top:816;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:842;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:861;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:899;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:877;left:90"><span class="ft1"> Once the read-write head is positioned as described earlier, reading a block is fairly fast, </span></div>
<div style="position:absolute;top:893;left:90"><span class="ft1">requiring only a few milliseconds. Thus a disk access to read or write a block is not very </span></div>
<div style="position:absolute;top:909;left:90"><span class="ft1">dependent on the size of the block. It follows that the larger the block, the more efficiently </span></div>
<div style="position:absolute;top:925;left:90"><span class="ft1">you can read or write a single record (assuming you use all the records in the block).</span></div>
<div style="position:absolute;top:922;left:609"><span class="ft0"> </span></div>
<div style="position:absolute;top:899;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:925;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:944;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:960;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:959;left:90"><span class="ft6"> Sequential Ordering</span></div>
<div style="position:absolute;top:961;left:269"><span class="ft0"> </span></div>
<div style="position:absolute;top:960;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:966;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:985;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:1014;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1001;left:90"><span class="ft1"> One way to arrange the phone book data in the disk file would be to order all the records </span></div>
<div style="position:absolute;top:1016;left:90"><span class="ft1">according to some key, say alphabetically by last name. The record for Joseph Aardvark </span></div>
<div style="position:absolute;top:1032;left:90"><span class="ft1">would come first, and so on. This is shown in Figure 10.18.</span></div>
<div style="position:absolute;top:1029;left:451"><span class="ft0"> </span></div>
<div style="position:absolute;top:1014;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:1033;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1052;left:80"><span class="ft0"> </span></div>
<script TYPE="text/javascript">
			var currentZoom = parent.ltop.currentZoom;
			if(currentZoom != undefined)
				document.body.style.zoom=currentZoom/100;
			</script>
</body>
</html>