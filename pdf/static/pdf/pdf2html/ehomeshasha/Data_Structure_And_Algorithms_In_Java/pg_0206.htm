<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0052)http://www.verypdf.com/ -->
<html>
<head>
<title>pg_0206</title>

<style>
<!-- 
select {font-size:12px;}
A:link {text-decoration: none; color: blue}
A:visited {text-decoration: none; color: purple}
A:active {text-decoration: red}
A:hover {text-decoration: underline; color:red}
-->
</style>
<script TYPE="text/javascript"> 
<!-- hide 
function killerrors()
{ 
return true; 
} 
window.onerror = killerrors; 
// --> 
</script>
<style type="text/css">
<!--
.ft0{font-style:normal;font-weight:normal;font-size:16px;font-family:Times New Roman;color:#000000;}
.ft1{font-style:normal;font-weight:bold;font-size:13px;font-family:Arial;color:#010100;}
.ft2{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft3{font-style:normal;font-weight:normal;font-size:13px;font-family:Times New Roman;color:#010100;}
.ft4{font-style:normal;font-weight:normal;font-size:13px;font-family:Times New Roman;color:#000000;}
.ft5{font-style:normal;font-weight:bold;font-size:18px;font-family:Arial;color:#800000;}
-->
</style>
</head>
<body vlink="#FFFFFF" link="#FFFFFF" bgcolor="#ffffff">

<script TYPE="text/javascript">
var currentpos,timer; 
function initialize() 
{ 
timer=setInterval("scrollwindow()",10);
} 
function sc(){
clearInterval(timer); 
}
function scrollwindow() 
{ 
currentpos=document.body.scrollTop; 
window.scroll(0,++currentpos); 
if (currentpos != document.body.scrollTop) 
sc();
} 
document.onmousedown=sc
document.ondblclick=initialize
</script>
<div style="position:absolute;top:0;left:0"><img width="826" height="1169" src="pg_0206.jpg" ALT=""></div>
<div style="position:absolute;top:1102;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1102;left:391"><span class="ft0"> - 206 -</span></div>
<div style="position:absolute;top:253;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:430;left:287"><span class="ft0">  </span></div>
<div style="position:absolute;top:253;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:430;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:449;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:465;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:466;left:136"><span class="ft1"> Figure 6.4:  The recursive </span></div>
<div style="position:absolute;top:466;left:302"><span class="ft3">triangle() </span></div>
<div style="position:absolute;top:466;left:394"><span class="ft2">method</span></div>
<div style="position:absolute;top:463;left:440"><span class="ft0"> </span></div>
<div style="position:absolute;top:465;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:488;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:486;left:136"><span class="ft4">  </span></div>
<div style="position:absolute;top:486;left:640"><span class="ft4">  </span></div>
<div style="position:absolute;top:488;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:507;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:524;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:523;left:90"><span class="ft5"> Characteristics of Recursive Methods</span></div>
<div style="position:absolute;top:525;left:426"><span class="ft0"> </span></div>
<div style="position:absolute;top:524;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:529;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:548;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:570;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:564;left:90"><span class="ft2"> Although it's short, the </span></div>
<div style="position:absolute;top:564;left:231"><span class="ft3">triangle()</span></div>
<div style="position:absolute;top:564;left:314"><span class="ft2"> method possesses the key features common to all </span></div>
<div style="position:absolute;top:581;left:90"><span class="ft2">recursive routines:</span></div>
<div style="position:absolute;top:578;left:204"><span class="ft0"> </span></div>
<div style="position:absolute;top:570;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:581;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:600;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:615;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:616;left:90"><span class="ft2"> .</span></div>
<div style="position:absolute;top:613;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:616;left:107"><span class="ft2">It calls itself.</span></div>
<div style="position:absolute;top:613;left:183"><span class="ft0"> </span></div>
<div style="position:absolute;top:615;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:619;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:638;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:654;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:654;left:90"><span class="ft2"> .</span></div>
<div style="position:absolute;top:651;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:654;left:107"><span class="ft2">When it calls itself, it does so to solve a smaller problem.</span></div>
<div style="position:absolute;top:651;left:455"><span class="ft0"> </span></div>
<div style="position:absolute;top:654;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:658;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:677;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:698;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:693;left:90"><span class="ft2"> .</span></div>
<div style="position:absolute;top:690;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:693;left:107"><span class="ft2">There's some version of the problem that is simple enough that the routine can solve </span></div>
<div style="position:absolute;top:709;left:107"><span class="ft2">it, and return, without calling itself.</span></div>
<div style="position:absolute;top:706;left:317"><span class="ft0"> </span></div>
<div style="position:absolute;top:698;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:709;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:728;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:774;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:744;left:90"><span class="ft2"> In each successive call of a recursive method to itself, the argument becomes smaller (or </span></div>
<div style="position:absolute;top:760;left:90"><span class="ft2">perhaps a range described by multiple arguments becomes smaller), reflecting the fact </span></div>
<div style="position:absolute;top:776;left:90"><span class="ft2">that the problem has become &quot;smaller&quot; or easier. When the argument or range reaches a </span></div>
<div style="position:absolute;top:792;left:90"><span class="ft2">certain minimum size, a condition is triggered and the method returns without calling </span></div>
<div style="position:absolute;top:808;left:90"><span class="ft2">itself.</span></div>
<div style="position:absolute;top:805;left:123"><span class="ft0"> </span></div>
<div style="position:absolute;top:774;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:808;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:827;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:843;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:842;left:90"><span class="ft5"> Is Recursion Efficient.</span></div>
<div style="position:absolute;top:844;left:293"><span class="ft0"> </span></div>
<div style="position:absolute;top:843;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:848;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:868;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:905;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:883;left:90"><span class="ft2"> Calling a method involves certain overhead. Control must be transferred from the location </span></div>
<div style="position:absolute;top:899;left:90"><span class="ft2">of the call to the beginning of the method. In addition, the arguments to the method, and </span></div>
<div style="position:absolute;top:915;left:90"><span class="ft2">the address to which the method should return, must be pushed onto an internal stack so </span></div>
<div style="position:absolute;top:931;left:90"><span class="ft2">that the method can access the argument values and know where to return.</span></div>
<div style="position:absolute;top:928;left:554"><span class="ft0"> </span></div>
<div style="position:absolute;top:905;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:932;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:951;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:998;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:967;left:90"><span class="ft2"> In the case of the </span></div>
<div style="position:absolute;top:967;left:201"><span class="ft3">triangle()</span></div>
<div style="position:absolute;top:967;left:284"><span class="ft2"> method, it's probable that, as a result of this overhead, </span></div>
<div style="position:absolute;top:984;left:90"><span class="ft2">the </span></div>
<div style="position:absolute;top:984;left:113"><span class="ft3">while</span></div>
<div style="position:absolute;top:984;left:155"><span class="ft2"> loop approach executes more quickly than the recursive approach. The </span></div>
<div style="position:absolute;top:1001;left:90"><span class="ft2">penalty may not be significant, but if there are a large number of method calls as a result </span></div>
<div style="position:absolute;top:1017;left:90"><span class="ft2">of a recursive method, it might be desirable to eliminate the recursion. We'll talk about </span></div>
<div style="position:absolute;top:1033;left:90"><span class="ft2">this more at the end of this chapter.</span></div>
<div style="position:absolute;top:1030;left:308"><span class="ft0"> </span></div>
<div style="position:absolute;top:998;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:1033;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1052;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:1067;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1068;left:90"><span class="ft2"> Another inefficiency is that memory is used to store all the intermediate arguments and </span></div>
<div style="position:absolute;top:1067;left:640"><span class="ft0">  </span></div>
<script TYPE="text/javascript">
			var currentZoom = parent.ltop.currentZoom;
			if(currentZoom != undefined)
				document.body.style.zoom=currentZoom/100;
			</script>
</body>
</html>