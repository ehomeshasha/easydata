<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0052)http://www.verypdf.com/ -->
<html>
<head>
<title>pg_0091</title>

<style>
<!-- 
select {font-size:12px;}
A:link {text-decoration: none; color: blue}
A:visited {text-decoration: none; color: purple}
A:active {text-decoration: red}
A:hover {text-decoration: underline; color:red}
-->
</style>
<script TYPE="text/javascript"> 
<!-- hide 
function killerrors()
{ 
return true; 
} 
window.onerror = killerrors; 
// --> 
</script>
<style type="text/css">
<!--
.ft0{font-style:normal;font-weight:normal;font-size:16px;font-family:Times New Roman;color:#000000;}
.ft1{font-style:normal;font-weight:bold;font-size:13px;font-family:Arial;color:#010100;}
.ft2{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft3{font-style:normal;font-weight:normal;font-size:13px;font-family:Times New Roman;color:#000000;}
.ft4{font-style:italic;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft5{font-style:normal;font-weight:bold;font-size:18px;font-family:Arial;color:#800000;}
-->
</style>
</head>
<body vlink="#FFFFFF" link="#FFFFFF" bgcolor="#ffffff">

<script TYPE="text/javascript">
var currentpos,timer; 
function initialize() 
{ 
timer=setInterval("scrollwindow()",10);
} 
function sc(){
clearInterval(timer); 
}
function scrollwindow() 
{ 
currentpos=document.body.scrollTop; 
window.scroll(0,++currentpos); 
if (currentpos != document.body.scrollTop) 
sc();
} 
document.onmousedown=sc
document.ondblclick=initialize
</script>
<div style="position:absolute;top:0;left:0"><img width="826" height="1169" src="pg_0091.jpg" ALT=""></div>
<div style="position:absolute;top:1102;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1102;left:395"><span class="ft0"> - 91 -</span></div>
<div style="position:absolute;top:198;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:320;left:391"><span class="ft0">  </span></div>
<div style="position:absolute;top:198;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:320;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:339;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:354;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:355;left:136"><span class="ft1"> Figure 4.1:  A stack of letters</span></div>
<div style="position:absolute;top:352;left:317"><span class="ft0"> </span></div>
<div style="position:absolute;top:354;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:377;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:376;left:136"><span class="ft3">  </span></div>
<div style="position:absolute;top:376;left:640"><span class="ft3">  </span></div>
<div style="position:absolute;top:377;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:396;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:466;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:412;left:90"><span class="ft2"> Another stack analogy is the tasks you perform during a typical workday. You're busy on </span></div>
<div style="position:absolute;top:428;left:90"><span class="ft2">a long-term project (A), but you're interrupted by a coworker asking you for temporary </span></div>
<div style="position:absolute;top:444;left:90"><span class="ft2">help with another project (B). While you're working on B, someone in accounting stops by </span></div>
<div style="position:absolute;top:460;left:90"><span class="ft2">for a meeting about travel expenses (C), and during this meeting you get an emergency </span></div>
<div style="position:absolute;top:476;left:90"><span class="ft2">call from someone in sales and spend a few minutes troubleshooting a bulky product (D). </span></div>
<div style="position:absolute;top:492;left:90"><span class="ft2">When you're done with call D, you resume meeting C; when you're done with C, you </span></div>
<div style="position:absolute;top:508;left:90"><span class="ft2">resume project B, and when you're done with B you can (finally!) get back to project A. </span></div>
<div style="position:absolute;top:524;left:90"><span class="ft2">Lower priority projects are &quot;stacked up&quot; waiting for you to return to them.</span></div>
<div style="position:absolute;top:521;left:534"><span class="ft0"> </span></div>
<div style="position:absolute;top:466;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:524;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:543;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:581;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:559;left:90"><span class="ft2"> Placing a data item on the top of the stack is called pushing it. Removing it from the top </span></div>
<div style="position:absolute;top:575;left:90"><span class="ft2">of the stack is called popping it. These are the primary stack operations. A stack is said to </span></div>
<div style="position:absolute;top:591;left:90"><span class="ft2">be a Last-In-First-Out (LIFO) storage mechanism, because the last item inserted is the </span></div>
<div style="position:absolute;top:607;left:90"><span class="ft2">first one to be removed. </span></div>
<div style="position:absolute;top:604;left:240"><span class="ft0"> </span></div>
<div style="position:absolute;top:581;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:607;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:626;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:643;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:642;left:90"><span class="ft5"> The Stack Workshop Applet</span></div>
<div style="position:absolute;top:644;left:339"><span class="ft0"> </span></div>
<div style="position:absolute;top:643;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:648;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:667;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:689;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:683;left:90"><span class="ft2"> Let's use the Stack Workshop applet to get an idea how stacks work. When you start up </span></div>
<div style="position:absolute;top:699;left:90"><span class="ft2">the applet, you'll see four buttons: New, Push, Pop, and Peek, as shown in Figure 4.2.</span></div>
<div style="position:absolute;top:696;left:619"><span class="ft0">   </span></div>
<div style="position:absolute;top:699;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:718;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:764;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:734;left:90"><span class="ft2"> The Stack Workshop applet is based on an array, so you'll see an array of data items. </span></div>
<div style="position:absolute;top:750;left:90"><span class="ft2">Although it's based on an array, a stack restricts access, so you can't access it as you </span></div>
<div style="position:absolute;top:766;left:90"><span class="ft2">would an array. In fact, the concept of a stack and the underlying data structure used to </span></div>
<div style="position:absolute;top:782;left:90"><span class="ft2">implement it are quite separate. As we noted earlier, stacks can also be implemented by </span></div>
<div style="position:absolute;top:798;left:90"><span class="ft2">other kinds of storage structures, such as linked lists.</span></div>
<div style="position:absolute;top:795;left:416"><span class="ft0"> </span></div>
<div style="position:absolute;top:764;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:798;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:817;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:920;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1012;left:376"><span class="ft0">  </span></div>
<div style="position:absolute;top:920;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:1012;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1031;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:1047;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1047;left:136"><span class="ft1"> Figure 4.2:  The Stack Workshop applet</span></div>
<div style="position:absolute;top:1044;left:385"><span class="ft0"> </span></div>
<div style="position:absolute;top:1047;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:1070;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:1068;left:136"><span class="ft3">  </span></div>
<div style="position:absolute;top:1068;left:640"><span class="ft3">  </span></div>
<div style="position:absolute;top:1070;left:79"><span class="ft0"> </span></div>
<script TYPE="text/javascript">
			var currentZoom = parent.ltop.currentZoom;
			if(currentZoom != undefined)
				document.body.style.zoom=currentZoom/100;
			</script>
</body>
</html>