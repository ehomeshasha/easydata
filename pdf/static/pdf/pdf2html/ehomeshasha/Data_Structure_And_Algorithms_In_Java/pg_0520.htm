<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0052)http://www.verypdf.com/ -->
<html>
<head>
<title>pg_0520</title>

<style>
<!-- 
select {font-size:12px;}
A:link {text-decoration: none; color: blue}
A:visited {text-decoration: none; color: purple}
A:active {text-decoration: red}
A:hover {text-decoration: underline; color:red}
-->
</style>
<script TYPE="text/javascript"> 
<!-- hide 
function killerrors()
{ 
return true; 
} 
window.onerror = killerrors; 
// --> 
</script>
<style type="text/css">
<!--
.ft0{font-style:normal;font-weight:normal;font-size:16px;font-family:Times New Roman;color:#000000;}
.ft1{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft2{font-style:normal;font-weight:bold;font-size:18px;font-family:Arial;color:#800000;}
.ft3{font-style:normal;font-weight:bold;font-size:13px;font-family:Arial;color:#010100;}
.ft4{font-style:normal;font-weight:normal;font-size:13px;font-family:Times New Roman;color:#000000;}
.ft5{font-style:normal;font-weight:bold;font-size:18px;font-family:Arial;color:#000080;}
.ft6{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#008000;}
.ft7{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#000000;}
-->
</style>
</head>
<body vlink="#FFFFFF" link="#FFFFFF" bgcolor="#ffffff">

<script TYPE="text/javascript">
var currentpos,timer; 
function initialize() 
{ 
timer=setInterval("scrollwindow()",10);
} 
function sc(){
clearInterval(timer); 
}
function scrollwindow() 
{ 
currentpos=document.body.scrollTop; 
window.scroll(0,++currentpos); 
if (currentpos != document.body.scrollTop) 
sc();
} 
document.onmousedown=sc
document.ondblclick=initialize
</script>
<div style="position:absolute;top:0;left:0"><img width="826" height="1169" src="pg_0520.jpg" ALT=""></div>
<div style="position:absolute;top:1102;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1102;left:391"><span class="ft0"> - 520 -</span></div>
<div style="position:absolute;top:110;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:81;left:90"><span class="ft1"> B-trees are multiway trees, commonly used in external storage, in which nodes </span></div>
<div style="position:absolute;top:97;left:90"><span class="ft1">correspond to blocks on the disk. As in other trees, the algorithms find their way down the </span></div>
<div style="position:absolute;top:112;left:90"><span class="ft1">tree, reading one block at each level. B-trees provide searching, insertion, and deletion of </span></div>
<div style="position:absolute;top:128;left:90"><span class="ft1">records in O(logN) time. This is quite fast and works even for very large files. However, </span></div>
<div style="position:absolute;top:144;left:90"><span class="ft1">the programming is not trivial.</span></div>
<div style="position:absolute;top:141;left:272"><span class="ft0"> </span></div>
<div style="position:absolute;top:110;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:145;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:164;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:180;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:179;left:90"><span class="ft2"> Hashing</span></div>
<div style="position:absolute;top:181;left:164"><span class="ft0"> </span></div>
<div style="position:absolute;top:180;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:185;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:204;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:234;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:220;left:90"><span class="ft1"> If it's acceptable to use about twice as much external storage as a file would normally </span></div>
<div style="position:absolute;top:236;left:90"><span class="ft1">take, then external hashing might be a good choice. It has the same access time as </span></div>
<div style="position:absolute;top:252;left:90"><span class="ft1">indexed files, O(1), but can handle larger files.</span></div>
<div style="position:absolute;top:249;left:374"><span class="ft0"> </span></div>
<div style="position:absolute;top:234;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:252;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:271;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:293;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:287;left:90"><span class="ft1"> Figure 15.2 shows, rather impressionistically, these choices for external storage </span></div>
<div style="position:absolute;top:303;left:90"><span class="ft1">structures.</span></div>
<div style="position:absolute;top:300;left:155"><span class="ft0"> </span></div>
<div style="position:absolute;top:293;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:303;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:323;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:448;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:562;left:287"><span class="ft0">  </span></div>
<div style="position:absolute;top:448;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:562;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:581;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:597;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:597;left:136"><span class="ft3"> Figure 15.2:  Relationship of external storage choices</span></div>
<div style="position:absolute;top:594;left:468"><span class="ft0"> </span></div>
<div style="position:absolute;top:597;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:620;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:618;left:136"><span class="ft4">  </span></div>
<div style="position:absolute;top:618;left:640"><span class="ft4">  </span></div>
<div style="position:absolute;top:620;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:639;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:655;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:654;left:90"><span class="ft2"> Virtual Memory</span></div>
<div style="position:absolute;top:656;left:226"><span class="ft0"> </span></div>
<div style="position:absolute;top:655;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:661;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:680;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:701;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:696;left:90"><span class="ft1"> Sometimes you can let your operating system's virtual memory capabilities (if it has them) </span></div>
<div style="position:absolute;top:712;left:90"><span class="ft1">solve disk access problems with little programming effort on your part.</span></div>
<div style="position:absolute;top:709;left:519"><span class="ft0"> </span></div>
<div style="position:absolute;top:701;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:712;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:731;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:760;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:747;left:90"><span class="ft1"> If you read a file that's too big to fit in main memory, the virtual memory system will read </span></div>
<div style="position:absolute;top:763;left:90"><span class="ft1">in that part of the file that fits and store the  rest on the disk. As you access different parts </span></div>
<div style="position:absolute;top:779;left:90"><span class="ft1">of the file, they will be read from the disk automatically and placed in memory.</span></div>
<div style="position:absolute;top:776;left:567"><span class="ft0"> </span></div>
<div style="position:absolute;top:760;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:779;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:798;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:828;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:814;left:90"><span class="ft1"> You can apply internal algorithms to the entire file just as if it were all in memory at the </span></div>
<div style="position:absolute;top:830;left:90"><span class="ft1">same time, and let the operating system worry about reading the appropriate part of the </span></div>
<div style="position:absolute;top:846;left:90"><span class="ft1">file if it isn't in memory already.</span></div>
<div style="position:absolute;top:843;left:280"><span class="ft0"> </span></div>
<div style="position:absolute;top:828;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:846;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:865;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:911;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:881;left:90"><span class="ft1"> Of course operation will be much slower than when the entire file is in memory, but this </span></div>
<div style="position:absolute;top:897;left:90"><span class="ft1">would also be true if you dealt with the file block by block using one of the external-storage </span></div>
<div style="position:absolute;top:913;left:90"><span class="ft1">algorithms. It may be worth simply ignoring the fact that a file does not fit in memory, and </span></div>
<div style="position:absolute;top:929;left:90"><span class="ft1">see how well your algorithms work with the help of virtual memory. Especially for files that </span></div>
<div style="position:absolute;top:945;left:90"><span class="ft1">aren't much larger than the available memory, this may be an easy solution.</span></div>
<div style="position:absolute;top:942;left:556"><span class="ft0">  </span></div>
<div style="position:absolute;top:945;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:960;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:981;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:980;left:90"><span class="ft5"> Onward</span></div>
<div style="position:absolute;top:982;left:160"><span class="ft0"> </span></div>
<div style="position:absolute;top:981;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:986;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1005;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:1042;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1021;left:90"><span class="ft1"> We've come to the end of our survey of data structures and algorithms. The subject is </span></div>
<div style="position:absolute;top:1037;left:90"><span class="ft1">large and complex, so no one book can make you an expert, but we hope this book has </span></div>
<div style="position:absolute;top:1053;left:90"><span class="ft1">made it easy for you to learn about the fundamentals. </span></div>
<div style="position:absolute;top:1053;left:422"><span class="ft6">Appendix B, &quot;Further Reading,</span></div>
<div style="position:absolute;top:1053;left:610"><span class="ft7">&quot; </span></div>
<div style="position:absolute;top:1068;left:90"><span class="ft7">contains suggestions for further study.</span></div>
<div style="position:absolute;top:1065;left:325"><span class="ft0"> </span></div>
<div style="position:absolute;top:1042;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:1069;left:79"><span class="ft0"> </span></div>
<script TYPE="text/javascript">
			var currentZoom = parent.ltop.currentZoom;
			if(currentZoom != undefined)
				document.body.style.zoom=currentZoom/100;
			</script>
</body>
</html>