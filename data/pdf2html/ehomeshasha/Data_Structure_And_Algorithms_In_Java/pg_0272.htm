<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0052)http://www.verypdf.com/ -->
<html>
<head>
<title>pg_0272</title>

<style>
<!-- 
select {font-size:12px;}
A:link {text-decoration: none; color: blue}
A:visited {text-decoration: none; color: purple}
A:active {text-decoration: red}
A:hover {text-decoration: underline; color:red}
-->
</style>
<script TYPE="text/javascript"> 
<!-- hide 
function killerrors()
{ 
return true; 
} 
window.onerror = killerrors; 
// --> 
</script>
<style type="text/css">
<!--
.ft0{font-style:normal;font-weight:normal;font-size:16px;font-family:Times New Roman;color:#000000;}
.ft1{font-style:normal;font-weight:normal;font-size:13px;font-family:Times New Roman;color:#010100;}
.ft2{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft3{font-style:normal;font-weight:bold;font-size:16px;font-family:Arial;color:#010100;}
.ft4{font-style:normal;font-weight:bold;font-size:18px;font-family:Arial;color:#800000;}
.ft5{font-style:italic;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft6{font-style:normal;font-weight:bold;font-size:13px;font-family:Arial;color:#800000;}
-->
</style>
</head>
<body vlink="#FFFFFF" link="#FFFFFF" bgcolor="#ffffff">

<script TYPE="text/javascript">
var currentpos,timer; 
function initialize() 
{ 
timer=setInterval("scrollwindow()",10);
} 
function sc(){
clearInterval(timer); 
}
function scrollwindow() 
{ 
currentpos=document.body.scrollTop; 
window.scroll(0,++currentpos); 
if (currentpos != document.body.scrollTop) 
sc();
} 
document.onmousedown=sc
document.ondblclick=initialize
</script>
<div style="position:absolute;top:0;left:0"><img width="826" height="1169" src="pg_0272.jpg" ALT=""></div>
<div style="position:absolute;top:1102;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1102;left:391"><span class="ft0"> - 272 -</span></div>
<div style="position:absolute;top:80;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:80;left:113"><span class="ft1">       arr.display();                // display them again</span></div>
<div style="position:absolute;top:77;left:588"><span class="ft0"> </span></div>
<div style="position:absolute;top:80;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:84;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:99;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:99;left:113"><span class="ft1">       }  // end main()</span></div>
<div style="position:absolute;top:96;left:297"><span class="ft0"> </span></div>
<div style="position:absolute;top:99;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:103;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:122;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:138;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:137;left:113"><span class="ft1">    }  // end class QuickSort2App</span></div>
<div style="position:absolute;top:134;left:380"><span class="ft0"> </span></div>
<div style="position:absolute;top:138;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:141;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:160;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:207;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:177;left:90"><span class="ft2"> This program uses another new method, </span></div>
<div style="position:absolute;top:177;left:343"><span class="ft1">manualSort()</span></div>
<div style="position:absolute;top:177;left:443"><span class="ft2">, to sort subarrays of 3 or fewer </span></div>
<div style="position:absolute;top:194;left:90"><span class="ft2">elements. It returns immediately if the subarray is 1 cell (or less), swaps the cells if </span></div>
<div style="position:absolute;top:210;left:90"><span class="ft2">necessary if the range is 2, and sorts 3 cells if the range is 3. </span></div>
<div style="position:absolute;top:210;left:467"><span class="ft1">The recQuickSort()</span></div>
<div style="position:absolute;top:210;left:617"><span class="ft2"> </span></div>
<div style="position:absolute;top:227;left:90"><span class="ft2">routine can't be used to sort ranges of 2 or 3 because median partitioning requires at </span></div>
<div style="position:absolute;top:243;left:90"><span class="ft2">least 4 cells.</span></div>
<div style="position:absolute;top:240;left:167"><span class="ft0"> </span></div>
<div style="position:absolute;top:207;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:243;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:262;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:285;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:278;left:90"><span class="ft2"> The </span></div>
<div style="position:absolute;top:278;left:118"><span class="ft1">main()</span></div>
<div style="position:absolute;top:278;left:168"><span class="ft2"> routine and the output of </span></div>
<div style="position:absolute;top:278;left:326"><span class="ft1">quickSort2.java</span></div>
<div style="position:absolute;top:278;left:451"><span class="ft2"> are similar to those of </span></div>
<div style="position:absolute;top:296;left:90"><span class="ft1">quickSort1.java</span></div>
<div style="position:absolute;top:296;left:215"><span class="ft2">.</span></div>
<div style="position:absolute;top:293;left:219"><span class="ft0"> </span></div>
<div style="position:absolute;top:285;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:296;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:315;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:331;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:331;left:90"><span class="ft3"> The quickSort2 Workshop Applet</span></div>
<div style="position:absolute;top:331;left:353"><span class="ft0"> </span></div>
<div style="position:absolute;top:331;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:335;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:354;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:408;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:370;left:90"><span class="ft2"> The quickSort2 Workshop applet demonstrates the quicksort algorithm using median-of-</span></div>
<div style="position:absolute;top:386;left:90"><span class="ft2">three partitioning. This applet is similar to the quickSort1 Workshop applet, but starts off </span></div>
<div style="position:absolute;top:402;left:90"><span class="ft2">sorting the first, center, and left elements of each subarray and selecting the median of </span></div>
<div style="position:absolute;top:418;left:90"><span class="ft2">these as the pivot value. At least, it does this if the array size is greater than 3. If the </span></div>
<div style="position:absolute;top:434;left:90"><span class="ft2">subarray is 2 or 3 units, the applet simply  sorts it &quot;by hand&quot; without partitioning or </span></div>
<div style="position:absolute;top:450;left:90"><span class="ft2">recursive calls.</span></div>
<div style="position:absolute;top:447;left:182"><span class="ft0"> </span></div>
<div style="position:absolute;top:408;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:450;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:469;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:499;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:485;left:90"><span class="ft2"> Notice the dramatic improvement in performance when the applet is used to sort 100 </span></div>
<div style="position:absolute;top:501;left:90"><span class="ft2">inversely ordered bars. No longer is every subarray partitioned into 1 cell and N¨C1 cells; </span></div>
<div style="position:absolute;top:517;left:90"><span class="ft2">instead, the subarrays are partitioned roughly in half.</span></div>
<div style="position:absolute;top:514;left:414"><span class="ft0"> </span></div>
<div style="position:absolute;top:499;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:517;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:536;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:566;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:552;left:90"><span class="ft2"> Other than this improvement for ordered data, the quickSort2 Workshop applet produces </span></div>
<div style="position:absolute;top:568;left:90"><span class="ft2">results similar to quickSort1. It is no faster when sorting random data; it's advantages </span></div>
<div style="position:absolute;top:584;left:90"><span class="ft2">become evident only when sorting ordered data.</span></div>
<div style="position:absolute;top:581;left:387"><span class="ft0"> </span></div>
<div style="position:absolute;top:566;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:584;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:603;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:620;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:619;left:90"><span class="ft4"> Handling Small Partitions</span></div>
<div style="position:absolute;top:621;left:317"><span class="ft0"> </span></div>
<div style="position:absolute;top:620;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:625;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:644;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:681;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:660;left:90"><span class="ft2"> If you use the median-of-three partitioning method, it follows that the quicksort algorithm </span></div>
<div style="position:absolute;top:676;left:90"><span class="ft2">won't work for partitions of three or fewer items. The number 3 in this case is called a </span></div>
<div style="position:absolute;top:692;left:90"><span class="ft5">cutoff point. In the previous examples we sorted subarrays of 2 or 3 items by hand. Is this </span></div>
<div style="position:absolute;top:708;left:90"><span class="ft2">the best way.</span></div>
<div style="position:absolute;top:705;left:176"><span class="ft0"> </span></div>
<div style="position:absolute;top:681;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:708;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:727;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:742;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:742;left:90"><span class="ft3"> Using an Insertion Sort for Small Partitions</span></div>
<div style="position:absolute;top:742;left:431"><span class="ft0"> </span></div>
<div style="position:absolute;top:742;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:746;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:765;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:819;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:781;left:90"><span class="ft2"> Another option for dealing with small partitions is to use the insertion sort. When you do </span></div>
<div style="position:absolute;top:797;left:90"><span class="ft2">this, you aren't restricted to a cutoff of 3. You can set the cutoff to 10, 20, or any other </span></div>
<div style="position:absolute;top:813;left:90"><span class="ft2">number. It's interesting to experiment with different values of the cutoff to see where the </span></div>
<div style="position:absolute;top:829;left:90"><span class="ft2">best performance lies. Knuth (see the bibliography) recommends a cutoff of 9. However, </span></div>
<div style="position:absolute;top:845;left:90"><span class="ft2">the optimum number depends on your computer, operating system, compiler (or </span></div>
<div style="position:absolute;top:861;left:90"><span class="ft2">interpreter), and so on.</span></div>
<div style="position:absolute;top:858;left:231"><span class="ft0"> </span></div>
<div style="position:absolute;top:819;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:861;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:880;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:902;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:896;left:90"><span class="ft2"> The </span></div>
<div style="position:absolute;top:896;left:118"><span class="ft1">quickSort3.java</span></div>
<div style="position:absolute;top:896;left:243"><span class="ft2"> program, shown in Listing 7.5, uses an insertion sort to handle </span></div>
<div style="position:absolute;top:913;left:90"><span class="ft2">subarrays of fewer than 10 cells.</span></div>
<div style="position:absolute;top:910;left:290"><span class="ft0"> </span></div>
<div style="position:absolute;top:902;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:913;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:932;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:948;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:948;left:90"><span class="ft6"> Listing 7.5 The quickSort3.java Program</span></div>
<div style="position:absolute;top:945;left:355"><span class="ft0"> </span></div>
<div style="position:absolute;top:948;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:952;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:971;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:986;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:986;left:113"><span class="ft1"> // quickSort3.java</span></div>
<div style="position:absolute;top:983;left:263"><span class="ft0"> </span></div>
<div style="position:absolute;top:986;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:990;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1005;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1005;left:113"><span class="ft1"> // demonstrates quick sort; uses insertion sort for cleanup</span></div>
<div style="position:absolute;top:1002;left:605"><span class="ft0">   </span></div>
<div style="position:absolute;top:1009;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1024;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1024;left:113"><span class="ft1"> // to run this program: C&gt;java QuickSort3App</span></div>
<div style="position:absolute;top:1021;left:480"><span class="ft0"> </span></div>
<div style="position:absolute;top:1024;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:1028;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1044;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1043;left:110"><span class="ft1"> ////////////////////////////////////////////////////////////////</span></div>
<div style="position:absolute;top:1040;left:643"><span class="ft0"> </span></div>
<div style="position:absolute;top:1044;left:643"><span class="ft0"> </span></div>
<div style="position:absolute;top:1047;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1063;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1062;left:113"><span class="ft1"> class ArrayIns</span></div>
<div style="position:absolute;top:1059;left:230"><span class="ft0"> </span></div>
<div style="position:absolute;top:1063;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:1067;left:79"><span class="ft0"> </span></div>
<script TYPE="text/javascript">
			var currentZoom = parent.ltop.currentZoom;
			if(currentZoom != undefined)
				document.body.style.zoom=currentZoom/100;
			</script>
</body>
</html>