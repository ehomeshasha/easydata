<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0052)http://www.verypdf.com/ -->
<html>
<head>
<title>pg_0358</title>

<style>
<!-- 
select {font-size:12px;}
A:link {text-decoration: none; color: blue}
A:visited {text-decoration: none; color: purple}
A:active {text-decoration: red}
A:hover {text-decoration: underline; color:red}
-->
</style>
<script TYPE="text/javascript"> 
<!-- hide 
function killerrors()
{ 
return true; 
} 
window.onerror = killerrors; 
// --> 
</script>
<style type="text/css">
<!--
.ft0{font-style:normal;font-weight:normal;font-size:16px;font-family:Times New Roman;color:#000000;}
.ft1{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft2{font-style:normal;font-weight:normal;font-size:10px;font-family:Arial;color:#ff00ff;}
.ft3{font-style:normal;font-weight:bold;font-size:18px;font-family:Arial;color:#800000;}
.ft4{font-style:normal;font-weight:normal;font-size:13px;font-family:Times New Roman;color:#010100;}
.ft5{font-style:normal;font-weight:bold;font-size:16px;font-family:Verdana;color:#000000;}
.ft6{font-style:normal;font-weight:bold;font-size:18px;font-family:Arial;color:#000080;}
.ft7{font-style:italic;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
-->
</style>
</head>
<body vlink="#FFFFFF" link="#FFFFFF" bgcolor="#ffffff">

<script TYPE="text/javascript">
var currentpos,timer; 
function initialize() 
{ 
timer=setInterval("scrollwindow()",10);
} 
function sc(){
clearInterval(timer); 
}
function scrollwindow() 
{ 
currentpos=document.body.scrollTop; 
window.scroll(0,++currentpos); 
if (currentpos != document.body.scrollTop) 
sc();
} 
document.onmousedown=sc
document.ondblclick=initialize
</script>
<div style="position:absolute;top:0;left:0"><img width="826" height="1169" src="pg_0358.jpg" ALT=""></div>
<div style="position:absolute;top:1102;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1102;left:391"><span class="ft0"> - 358 -</span></div>
<div style="position:absolute;top:81;left:90"><span class="ft1">per node. The result is a search time proportional to M*log</span></div>
<div style="position:absolute;top:84;left:448"><span class="ft2">4</span></div>
<div style="position:absolute;top:81;left:454"><span class="ft1">N.</span></div>
<div style="position:absolute;top:78;left:468"><span class="ft0"> </span></div>
<div style="position:absolute;top:81;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:100;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:130;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:116;left:90"><span class="ft1"> Some nodes contain 1 item, some 2, and some 3. If we estimate that the average is 2, </span></div>
<div style="position:absolute;top:132;left:90"><span class="ft1">search times will be proportional to 2*log</span></div>
<div style="position:absolute;top:135;left:340"><span class="ft2">4</span></div>
<div style="position:absolute;top:132;left:345"><span class="ft1">N. This is a small constant number that can be </span></div>
<div style="position:absolute;top:148;left:90"><span class="ft1">ignored in Big O notation.</span></div>
<div style="position:absolute;top:145;left:247"><span class="ft0"> </span></div>
<div style="position:absolute;top:130;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:148;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:167;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:197;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:183;left:90"><span class="ft1"> Thus, for 2-3-4 trees the increased number of items per node tends to cancel out the </span></div>
<div style="position:absolute;top:199;left:90"><span class="ft1">decreased height of the tree. The search times for a 2-3-4 tree and for a balanced binary </span></div>
<div style="position:absolute;top:215;left:90"><span class="ft1">tree such as a red-black tree are approximately equal, and are both O(logN).</span></div>
<div style="position:absolute;top:212;left:561"><span class="ft0"> </span></div>
<div style="position:absolute;top:197;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:215;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:234;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:250;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:249;left:90"><span class="ft3"> Storage Requirements</span></div>
<div style="position:absolute;top:251;left:290"><span class="ft0"> </span></div>
<div style="position:absolute;top:250;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:256;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:275;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:329;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:291;left:90"><span class="ft1"> Each node in a 2-3-4 tree contains storage for three references to data items and four </span></div>
<div style="position:absolute;top:307;left:90"><span class="ft1">references to its children. This space may be in the form of arrays, as shown in </span></div>
<div style="position:absolute;top:323;left:90"><span class="ft4">tree234.java</span></div>
<div style="position:absolute;top:323;left:190"><span class="ft1">, or of individual variables. Not all this storage is used. A node with only </span></div>
<div style="position:absolute;top:340;left:90"><span class="ft1">one data item will waste two thirds of the space for data and half the space for children. A </span></div>
<div style="position:absolute;top:356;left:90"><span class="ft1">node with two data items will waste one third of the space for data and one quarter of the </span></div>
<div style="position:absolute;top:372;left:90"><span class="ft1">space for children; to put it another way, it will use 5/7 of the available space.</span></div>
<div style="position:absolute;top:369;left:562"><span class="ft0"> </span></div>
<div style="position:absolute;top:329;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:372;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:391;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:413;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:407;left:90"><span class="ft1"> If we take two data items per node as the average utilization, about 2/7 of the available </span></div>
<div style="position:absolute;top:423;left:90"><span class="ft1">storage is wasted.</span></div>
<div style="position:absolute;top:420;left:202"><span class="ft0"> </span></div>
<div style="position:absolute;top:413;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:423;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:442;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:472;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:458;left:90"><span class="ft1"> One might imagine using linked lists instead of arrays to hold the child and data </span></div>
<div style="position:absolute;top:474;left:90"><span class="ft1">references, but the overhead of the linked list compared with an array, for only 3 or 4 </span></div>
<div style="position:absolute;top:490;left:90"><span class="ft1">items, would probably not make this a worthwhile approach.</span></div>
<div style="position:absolute;top:487;left:458"><span class="ft0"> </span></div>
<div style="position:absolute;top:472;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:490;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:509;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:547;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:525;left:90"><span class="ft1"> Because they're balanced, red-black trees contain few nodes that have only one child, so </span></div>
<div style="position:absolute;top:541;left:90"><span class="ft1">almost all the storage for child references is used. Also, every node contains the </span></div>
<div style="position:absolute;top:557;left:90"><span class="ft1">maximum number of data items, which is 1. This makes red-black trees more efficient </span></div>
<div style="position:absolute;top:573;left:90"><span class="ft1">than 2-3-4 trees in terms of memory usage.</span></div>
<div style="position:absolute;top:570;left:357"><span class="ft0"> </span></div>
<div style="position:absolute;top:547;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:573;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:592;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:638;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:608;left:90"><span class="ft1"> In Java, which stores references to objects instead of the objects themselves, this </span></div>
<div style="position:absolute;top:624;left:90"><span class="ft1">difference in storage between 2-3-4 trees and red-black trees may not be important, and </span></div>
<div style="position:absolute;top:640;left:90"><span class="ft1">the programming is certainly simpler for 2-3-4 trees. However, in languages that don't use </span></div>
<div style="position:absolute;top:656;left:90"><span class="ft1">references this way, the difference in storage efficiency between red-black trees and 2-3-4 </span></div>
<div style="position:absolute;top:672;left:90"><span class="ft1">trees may be significant.</span></div>
<div style="position:absolute;top:669;left:240"><span class="ft0"> </span></div>
<div style="position:absolute;top:672;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:689;left:79"><span class="ft5"> </span></div>
<div style="position:absolute;top:709;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:708;left:90"><span class="ft6"> External Storage</span></div>
<div style="position:absolute;top:710;left:239"><span class="ft0"> </span></div>
<div style="position:absolute;top:709;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:714;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:733;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:771;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:749;left:90"><span class="ft1"> 2-3-4 trees are an example of multiway trees, which have more than two children and </span></div>
<div style="position:absolute;top:765;left:90"><span class="ft1">more than one data item. Another kind of multiway tree, the B-tree, is useful when data </span></div>
<div style="position:absolute;top:781;left:90"><span class="ft1">resides in external storage. External storage typically refers to some kind of disk system, </span></div>
<div style="position:absolute;top:797;left:90"><span class="ft1">such as the hard disk found in most desktop computers or servers.</span></div>
<div style="position:absolute;top:794;left:499"><span class="ft0"> </span></div>
<div style="position:absolute;top:771;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:797;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:816;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:854;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:832;left:90"><span class="ft1"> In this section we'll begin by describing various aspects of external file handling. We'll talk </span></div>
<div style="position:absolute;top:848;left:90"><span class="ft1">about a simple approach to organizing external data: sequential ordering. Finally we'll </span></div>
<div style="position:absolute;top:864;left:90"><span class="ft1">discuss B-trees and explain why they work so well with disk files. We'll finish with another </span></div>
<div style="position:absolute;top:880;left:90"><span class="ft1">approach to external storage, indexing, which can be used alone or with a B-tree.</span></div>
<div style="position:absolute;top:877;left:589"><span class="ft0"> </span></div>
<div style="position:absolute;top:854;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:880;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:899;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:921;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:915;left:90"><span class="ft1"> We'll also touch on other aspects of external storage, such as searching techniques. In </span></div>
<div style="position:absolute;top:931;left:90"><span class="ft1">the next chapter we'll mention a different approach to external storage: hashing.</span></div>
<div style="position:absolute;top:928;left:580"><span class="ft0"> </span></div>
<div style="position:absolute;top:921;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:931;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:950;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:988;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:966;left:90"><span class="ft1"> The details of external storage techniques are dependent on the operating system, </span></div>
<div style="position:absolute;top:982;left:90"><span class="ft1">language, and even the hardware used in a particular installation. As a consequence, our </span></div>
<div style="position:absolute;top:998;left:90"><span class="ft1">discussion in this section will be considerably more general than for most topics in this </span></div>
<div style="position:absolute;top:1014;left:90"><span class="ft1">book.</span></div>
<div style="position:absolute;top:1011;left:124"><span class="ft0"> </span></div>
<div style="position:absolute;top:988;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:1014;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1033;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:1050;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1049;left:90"><span class="ft3"> Accessing External Data</span></div>
<div style="position:absolute;top:1051;left:309"><span class="ft0"> </span></div>
<div style="position:absolute;top:1050;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:1055;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1074;left:80"><span class="ft0"> </span></div>
<script TYPE="text/javascript">
			var currentZoom = parent.ltop.currentZoom;
			if(currentZoom != undefined)
				document.body.style.zoom=currentZoom/100;
			</script>
</body>
</html>