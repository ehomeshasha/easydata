<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0052)http://www.verypdf.com/ -->
<html>
<head>
<title>pg_0312</title>

<style>
<!-- 
select {font-size:12px;}
A:link {text-decoration: none; color: blue}
A:visited {text-decoration: none; color: purple}
A:active {text-decoration: red}
A:hover {text-decoration: underline; color:red}
-->
</style>
<script TYPE="text/javascript"> 
<!-- hide 
function killerrors()
{ 
return true; 
} 
window.onerror = killerrors; 
// --> 
</script>
<style type="text/css">
<!--
.ft0{font-style:normal;font-weight:normal;font-size:16px;font-family:Times New Roman;color:#000000;}
.ft1{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft2{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#008000;}
.ft3{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#000000;}
.ft4{font-style:normal;font-weight:bold;font-size:16px;font-family:Verdana;color:#000000;}
.ft5{font-style:normal;font-weight:bold;font-size:18px;font-family:Arial;color:#000080;}
.ft6{font-style:normal;font-weight:bold;font-size:18px;font-family:Arial;color:#800000;}
.ft7{font-style:italic;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft8{font-style:normal;font-weight:bold;font-size:13px;font-family:Arial;color:#010100;}
.ft9{font-style:normal;font-weight:normal;font-size:13px;font-family:Times New Roman;color:#000000;}
-->
</style>
</head>
<body vlink="#FFFFFF" link="#FFFFFF" bgcolor="#ffffff">

<script TYPE="text/javascript">
var currentpos,timer; 
function initialize() 
{ 
timer=setInterval("scrollwindow()",10);
} 
function sc(){
clearInterval(timer); 
}
function scrollwindow() 
{ 
currentpos=document.body.scrollTop; 
window.scroll(0,++currentpos); 
if (currentpos != document.body.scrollTop) 
sc();
} 
document.onmousedown=sc
document.ondblclick=initialize
</script>
<div style="position:absolute;top:0;left:0"><img width="826" height="1169" src="pg_0312.jpg" ALT=""></div>
<div style="position:absolute;top:1102;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1102;left:391"><span class="ft0"> - 312 -</span></div>
<div style="position:absolute;top:102;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:81;left:90"><span class="ft1"> There are other ways to ensure that trees are balanced. We'll mention some at the end of </span></div>
<div style="position:absolute;top:97;left:90"><span class="ft1">this chapter, and examine one, the 2-3-4 tree, in</span></div>
<div style="position:absolute;top:97;left:386"><span class="ft2"> Chapter 10, &quot;2-3-4 Tables and External </span></div>
<div style="position:absolute;top:112;left:90"><span class="ft2">Storage.</span></div>
<div style="position:absolute;top:112;left:143"><span class="ft3">&quot; However, the red-black tree is in most cases the most efficient balanced tree, at </span></div>
<div style="position:absolute;top:128;left:90"><span class="ft3">least when data is stored in memory as opposed to external files.</span></div>
<div style="position:absolute;top:125;left:490"><span class="ft0"> </span></div>
<div style="position:absolute;top:129;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:145;left:79"><span class="ft4"> </span></div>
<div style="position:absolute;top:164;left:79"><span class="ft5">Our Approach to the Discussion</span></div>
<div style="position:absolute;top:166;left:366"><span class="ft0"> </span></div>
<div style="position:absolute;top:165;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:170;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:189;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:235;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:205;left:90"><span class="ft1"> We'll explain insertion into red-black trees a little differently than we have explained </span></div>
<div style="position:absolute;top:221;left:90"><span class="ft1">insertion into other data structures. Red-black trees are not trivial to understand. Because </span></div>
<div style="position:absolute;top:237;left:90"><span class="ft1">of this and also because of a multiplicity of symmetrical cases (for left or right children, </span></div>
<div style="position:absolute;top:253;left:90"><span class="ft1">and inside or outside grandchildren) the actual code is more lengthy and complex than </span></div>
<div style="position:absolute;top:269;left:90"><span class="ft1">one might expect. It's therefore hard to learn about the algorithm by examining code.</span></div>
<div style="position:absolute;top:266;left:609"><span class="ft0"> </span></div>
<div style="position:absolute;top:235;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:269;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:289;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:305;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:304;left:90"><span class="ft6"> Conceptual</span></div>
<div style="position:absolute;top:306;left:192"><span class="ft0"> </span></div>
<div style="position:absolute;top:305;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:310;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:329;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:375;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:345;left:90"><span class="ft1"> For this reason, we're going to concentrate on conceptual understanding rather than </span></div>
<div style="position:absolute;top:361;left:90"><span class="ft1">coding details. In this we will be aided by the RBTree Workshop applet. We'll describe </span></div>
<div style="position:absolute;top:377;left:90"><span class="ft1">how you can work in partnership with the applet to insert new nodes into a tree. Including </span></div>
<div style="position:absolute;top:393;left:90"><span class="ft1">a human in the insertion routine certainly slows it down, but it also makes it easier for the </span></div>
<div style="position:absolute;top:409;left:90"><span class="ft1">human to understand how the process works.</span></div>
<div style="position:absolute;top:406;left:371"><span class="ft0"> </span></div>
<div style="position:absolute;top:375;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:409;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:428;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:466;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:444;left:90"><span class="ft1"> Searching works the same way in a red-black tree as it does in an ordinary binary tree. </span></div>
<div style="position:absolute;top:460;left:90"><span class="ft1">On the other hand, insertion and deletion, while based on the algorithms in an ordinary </span></div>
<div style="position:absolute;top:476;left:90"><span class="ft1">tree, are extensively modified. Accordingly, in this chapter we'll be concentrating on the </span></div>
<div style="position:absolute;top:492;left:90"><span class="ft1">insertion process.</span></div>
<div style="position:absolute;top:489;left:199"><span class="ft0"> </span></div>
<div style="position:absolute;top:466;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:492;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:511;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:528;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:527;left:90"><span class="ft6"> Top-Down Insertion</span></div>
<div style="position:absolute;top:529;left:266"><span class="ft0"> </span></div>
<div style="position:absolute;top:528;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:533;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:552;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:582;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:568;left:90"><span class="ft1"> In this chapter, the approach to insertion that we'll discuss is called top-down insertion. </span></div>
<div style="position:absolute;top:584;left:90"><span class="ft1">This means that some structural changes may be made to the tree as the search routine </span></div>
<div style="position:absolute;top:600;left:90"><span class="ft1">descends the tree looking for the place to insert the node.</span></div>
<div style="position:absolute;top:597;left:444"><span class="ft0"> </span></div>
<div style="position:absolute;top:582;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:600;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:619;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:649;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:635;left:90"><span class="ft1"> Another approach is bottom-up insertion. This involves finding the place to insert the node </span></div>
<div style="position:absolute;top:651;left:90"><span class="ft1">and then working back up through the tree making structural changes. Bottom-up insertion </span></div>
<div style="position:absolute;top:667;left:90"><span class="ft1">is less efficient because two passes must be made through the tree.</span></div>
<div style="position:absolute;top:664;left:508"><span class="ft0"> </span></div>
<div style="position:absolute;top:667;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:684;left:79"><span class="ft4"> </span></div>
<div style="position:absolute;top:703;left:79"><span class="ft5">Balanced and Unbalanced Trees</span></div>
<div style="position:absolute;top:705;left:367"><span class="ft0"> </span></div>
<div style="position:absolute;top:704;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:709;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:728;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:774;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:744;left:90"><span class="ft1"> Before we begin our investigation of red-black trees, let's review how trees become </span></div>
<div style="position:absolute;top:760;left:90"><span class="ft1">unbalanced. Fire up the Tree Workshop applet from</span></div>
<div style="position:absolute;top:760;left:408"><span class="ft2"> Chapter 8, &quot;Binary Trees,</span></div>
<div style="position:absolute;top:760;left:568"><span class="ft3">&quot; (not this </span></div>
<div style="position:absolute;top:776;left:90"><span class="ft3">chapter's RBTree applet). Use the Fill button to create a tree with only one node. Then </span></div>
<div style="position:absolute;top:792;left:90"><span class="ft3">insert a series of nodes whose keys are in either ascending or descending order. The </span></div>
<div style="position:absolute;top:808;left:90"><span class="ft3">result will be something like that in </span></div>
<div style="position:absolute;top:808;left:305"><span class="ft1">Figure 9.1</span></div>
<div style="position:absolute;top:808;left:367"><span class="ft3">.</span></div>
<div style="position:absolute;top:805;left:371"><span class="ft0"> </span></div>
<div style="position:absolute;top:774;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:808;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:827;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:916;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:993;left:324"><span class="ft0">  </span></div>
<div style="position:absolute;top:916;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:993;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1012;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:1027;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1028;left:136"><span class="ft8"> Figure 9.1:  Items inserted in ascending order</span></div>
<div style="position:absolute;top:1025;left:419"><span class="ft0"> </span></div>
<div style="position:absolute;top:1027;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:1050;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:1048;left:136"><span class="ft9">  </span></div>
<div style="position:absolute;top:1048;left:640"><span class="ft9">  </span></div>
<div style="position:absolute;top:1050;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1069;left:80"><span class="ft0"> </span></div>
<script TYPE="text/javascript">
			var currentZoom = parent.ltop.currentZoom;
			if(currentZoom != undefined)
				document.body.style.zoom=currentZoom/100;
			</script>
</body>
</html>