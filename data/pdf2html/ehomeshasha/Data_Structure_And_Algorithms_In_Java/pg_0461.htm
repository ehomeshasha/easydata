<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0052)http://www.verypdf.com/ -->
<html>
<head>
<title>pg_0461</title>

<style>
<!-- 
select {font-size:12px;}
A:link {text-decoration: none; color: blue}
A:visited {text-decoration: none; color: purple}
A:active {text-decoration: red}
A:hover {text-decoration: underline; color:red}
-->
</style>
<script TYPE="text/javascript"> 
<!-- hide 
function killerrors()
{ 
return true; 
} 
window.onerror = killerrors; 
// --> 
</script>
<style type="text/css">
<!--
.ft0{font-style:normal;font-weight:normal;font-size:16px;font-family:Times New Roman;color:#000000;}
.ft1{font-style:normal;font-weight:normal;font-size:13px;font-family:Times New Roman;color:#000000;}
.ft2{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft3{font-style:normal;font-weight:normal;font-size:13px;font-family:Times New Roman;color:#010100;}
.ft4{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#008000;}
.ft5{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#000000;}
.ft6{font-style:normal;font-weight:bold;font-size:18px;font-family:Arial;color:#800000;}
-->
</style>
</head>
<body vlink="#FFFFFF" link="#FFFFFF" bgcolor="#ffffff">

<script TYPE="text/javascript">
var currentpos,timer; 
function initialize() 
{ 
timer=setInterval("scrollwindow()",10);
} 
function sc(){
clearInterval(timer); 
}
function scrollwindow() 
{ 
currentpos=document.body.scrollTop; 
window.scroll(0,++currentpos); 
if (currentpos != document.body.scrollTop) 
sc();
} 
document.onmousedown=sc
document.ondblclick=initialize
</script>
<div style="position:absolute;top:0;left:0"><img width="826" height="1169" src="pg_0461.jpg" ALT=""></div>
<div style="position:absolute;top:1102;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1102;left:391"><span class="ft0"> - 461 -</span></div>
<div style="position:absolute;top:84;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:82;left:136"><span class="ft1">  </span></div>
<div style="position:absolute;top:82;left:640"><span class="ft1">  </span></div>
<div style="position:absolute;top:84;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:103;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:141;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:119;left:90"><span class="ft2"> There are many possible minimum spanning trees for a given set of vertices. Figure </span></div>
<div style="position:absolute;top:135;left:90"><span class="ft2">13.10-b shows edges AB, BC, CD, and DE, but edges AC, CE, ED, and DB would do just </span></div>
<div style="position:absolute;top:151;left:90"><span class="ft2">as well. The arithmetically inclined will note that the number of edges E in a minimum </span></div>
<div style="position:absolute;top:167;left:90"><span class="ft2">spanning tree is always one less than the number of vertices V:</span></div>
<div style="position:absolute;top:164;left:479"><span class="ft0"> </span></div>
<div style="position:absolute;top:141;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:167;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:186;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:201;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:202;left:113"><span class="ft3"> E = V ¨C 1</span></div>
<div style="position:absolute;top:199;left:167"><span class="ft0"> </span></div>
<div style="position:absolute;top:201;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:205;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:224;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:254;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:240;left:90"><span class="ft2"> Remember that we're not worried here about the length of the edges. We're not trying to </span></div>
<div style="position:absolute;top:256;left:90"><span class="ft2">find a minimum physical length, just the minimum number of edges. (This will change </span></div>
<div style="position:absolute;top:272;left:90"><span class="ft2">when we talk about weighted graphs in the </span></div>
<div style="position:absolute;top:272;left:357"><span class="ft4">next chapter.</span></div>
<div style="position:absolute;top:272;left:437"><span class="ft5">)</span></div>
<div style="position:absolute;top:269;left:442"><span class="ft0"> </span></div>
<div style="position:absolute;top:254;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:272;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:291;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:321;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:307;left:90"><span class="ft2"> The algorithm for creating the minimum spanning tree is almost identical to that used for </span></div>
<div style="position:absolute;top:323;left:90"><span class="ft2">searching. It can be based on either the depth-first search or the breadth-first search. In </span></div>
<div style="position:absolute;top:339;left:90"><span class="ft2">our example we'll use the depth-first-search.</span></div>
<div style="position:absolute;top:336;left:362"><span class="ft0"> </span></div>
<div style="position:absolute;top:321;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:339;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:358;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:405;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:374;left:90"><span class="ft2"> It turns out that by executing the depth-first search and recording the edges you've </span></div>
<div style="position:absolute;top:390;left:90"><span class="ft2">traveled to make the search, you automatically create a minimum spanning tree. The only </span></div>
<div style="position:absolute;top:407;left:90"><span class="ft2">difference between the minimum spanning tree method </span></div>
<div style="position:absolute;top:407;left:433"><span class="ft3">mst()</span></div>
<div style="position:absolute;top:407;left:475"><span class="ft2">, which we'll see in a </span></div>
<div style="position:absolute;top:424;left:90"><span class="ft2">moment, and the depth-first search method </span></div>
<div style="position:absolute;top:424;left:360"><span class="ft3">dfs()</span></div>
<div style="position:absolute;top:424;left:401"><span class="ft2">, which we saw earlier, is that </span></div>
<div style="position:absolute;top:424;left:586"><span class="ft3">mst()</span></div>
<div style="position:absolute;top:424;left:627"><span class="ft2"> </span></div>
<div style="position:absolute;top:441;left:90"><span class="ft2">must somehow record the edges traveled.</span></div>
<div style="position:absolute;top:438;left:349"><span class="ft0"> </span></div>
<div style="position:absolute;top:405;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:441;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:460;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:477;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:476;left:90"><span class="ft6"> GraphN Workshop Applet</span></div>
<div style="position:absolute;top:478;left:319"><span class="ft0"> </span></div>
<div style="position:absolute;top:477;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:482;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:501;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:562;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:517;left:90"><span class="ft2"> Repeatedly clicking the Tree button in the GraphN Workshop algorithm will create a </span></div>
<div style="position:absolute;top:533;left:90"><span class="ft2">minimum spanning tree for any graph you create. Try it out with various graphs. You'll </span></div>
<div style="position:absolute;top:549;left:90"><span class="ft2">see that the algorithm follows the same steps as when using the DFS button to do a </span></div>
<div style="position:absolute;top:565;left:90"><span class="ft2">search. When using Tree, however, the appropriate edge is darkened when the algorithm </span></div>
<div style="position:absolute;top:580;left:90"><span class="ft2">assigns it to the minimum spanning tree. When it's finished, the applet removes all the </span></div>
<div style="position:absolute;top:596;left:90"><span class="ft2">non-darkened lines, leaving only the minimum spanning tree. A final button press </span></div>
<div style="position:absolute;top:612;left:90"><span class="ft2">restores the original graph, in case you want to use it again.</span></div>
<div style="position:absolute;top:609;left:457"><span class="ft0"> </span></div>
<div style="position:absolute;top:562;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:613;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:632;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:648;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:647;left:90"><span class="ft6"> Java Code for the Minimum Spanning Tree</span></div>
<div style="position:absolute;top:649;left:470"><span class="ft0"> </span></div>
<div style="position:absolute;top:648;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:653;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:672;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:688;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:689;left:90"><span class="ft2"> Here's the code for the </span></div>
<div style="position:absolute;top:689;left:234"><span class="ft3">mst()</span></div>
<div style="position:absolute;top:689;left:276"><span class="ft2"> method:</span></div>
<div style="position:absolute;top:686;left:330"><span class="ft0"> </span></div>
<div style="position:absolute;top:688;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:692;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:711;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:726;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:726;left:113"><span class="ft3"> while( !theStack.isEmpty() )       // until stack empty</span></div>
<div style="position:absolute;top:723;left:571"><span class="ft0"> </span></div>
<div style="position:absolute;top:726;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:730;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:745;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:745;left:113"><span class="ft3">    {                               // get stack top</span></div>
<div style="position:absolute;top:742;left:538"><span class="ft0"> </span></div>
<div style="position:absolute;top:745;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:749;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:764;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:764;left:113"><span class="ft3">    int currentVertex = theStack.peek();</span></div>
<div style="position:absolute;top:761;left:438"><span class="ft0"> </span></div>
<div style="position:absolute;top:764;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:768;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:784;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:783;left:113"><span class="ft3">    // get next unvisited neighbor</span></div>
<div style="position:absolute;top:780;left:388"><span class="ft0"> </span></div>
<div style="position:absolute;top:784;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:787;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:803;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:802;left:113"><span class="ft3">    int v = getAdjUnvisitedVertex(currentVertex);</span></div>
<div style="position:absolute;top:799;left:513"><span class="ft0"> </span></div>
<div style="position:absolute;top:803;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:807;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:822;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:821;left:113"><span class="ft3">    if(v == -1)                     // if no more neighbors</span></div>
<div style="position:absolute;top:818;left:596"><span class="ft0">   </span></div>
<div style="position:absolute;top:826;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:841;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:841;left:113"><span class="ft3">       theStack.pop();              //    pop it away</span></div>
<div style="position:absolute;top:838;left:546"><span class="ft0"> </span></div>
<div style="position:absolute;top:841;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:845;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:860;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:860;left:113"><span class="ft3">    else                            // got a neighbor</span></div>
<div style="position:absolute;top:857;left:546"><span class="ft0"> </span></div>
<div style="position:absolute;top:860;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:864;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:879;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:879;left:113"><span class="ft3">       {</span></div>
<div style="position:absolute;top:876;left:172"><span class="ft0"> </span></div>
<div style="position:absolute;top:879;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:883;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:899;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:898;left:113"><span class="ft3">       vertexList[v].wasVisited = true;  // mark it</span></div>
<div style="position:absolute;top:895;left:530"><span class="ft0"> </span></div>
<div style="position:absolute;top:899;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:902;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:918;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:917;left:113"><span class="ft3">       theStack.push(v);                 // push it</span></div>
<div style="position:absolute;top:914;left:530"><span class="ft0"> </span></div>
<div style="position:absolute;top:918;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:922;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:937;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:936;left:113"><span class="ft3">                                    // display edge</span></div>
<div style="position:absolute;top:933;left:530"><span class="ft0"> </span></div>
<div style="position:absolute;top:937;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:941;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:956;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:956;left:113"><span class="ft3">       displayVertex(currentVertex);     // from currentV</span></div>
<div style="position:absolute;top:953;left:580"><span class="ft0"> </span></div>
<div style="position:absolute;top:956;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:960;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:975;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:975;left:113"><span class="ft3">       displayVertex(v);                 // to v</span></div>
<div style="position:absolute;top:972;left:505"><span class="ft0"> </span></div>
<div style="position:absolute;top:975;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:979;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:994;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:994;left:113"><span class="ft3">       System.out.print(&quot; &quot;);</span></div>
<div style="position:absolute;top:991;left:347"><span class="ft0"> </span></div>
<div style="position:absolute;top:994;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:998;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1014;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1013;left:113"><span class="ft3">       }</span></div>
<div style="position:absolute;top:1010;left:172"><span class="ft0"> </span></div>
<div style="position:absolute;top:1014;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:1017;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1033;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1032;left:113"><span class="ft3">    }  // end while(stack not empty)</span></div>
<div style="position:absolute;top:1029;left:405"><span class="ft0"> </span></div>
<div style="position:absolute;top:1033;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:1037;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1052;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:1052;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:1056;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1071;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1071;left:113"><span class="ft3">    // stack is empty, so we're done</span></div>
<div style="position:absolute;top:1068;left:405"><span class="ft0"> </span></div>
<div style="position:absolute;top:1071;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:1075;left:79"><span class="ft0"> </span></div>
<script TYPE="text/javascript">
			var currentZoom = parent.ltop.currentZoom;
			if(currentZoom != undefined)
				document.body.style.zoom=currentZoom/100;
			</script>
</body>
</html>