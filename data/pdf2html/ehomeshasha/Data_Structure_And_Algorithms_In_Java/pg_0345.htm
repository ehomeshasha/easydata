<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0052)http://www.verypdf.com/ -->
<html>
<head>
<title>pg_0345</title>

<style>
<!-- 
select {font-size:12px;}
A:link {text-decoration: none; color: blue}
A:visited {text-decoration: none; color: purple}
A:active {text-decoration: red}
A:hover {text-decoration: underline; color:red}
-->
</style>
<script TYPE="text/javascript"> 
<!-- hide 
function killerrors()
{ 
return true; 
} 
window.onerror = killerrors; 
// --> 
</script>
<style type="text/css">
<!--
.ft0{font-style:normal;font-weight:normal;font-size:16px;font-family:Times New Roman;color:#000000;}
.ft1{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft2{font-style:normal;font-weight:normal;font-size:13px;font-family:Times New Roman;color:#010100;}
.ft3{font-style:normal;font-weight:bold;font-size:18px;font-family:Arial;color:#800000;}
.ft4{font-style:normal;font-weight:bold;font-size:18px;font-family:Times New Roman;color:#800000;}
.ft5{font-style:normal;font-weight:bold;font-size:16px;font-family:Arial;color:#010100;}
.ft6{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#008000;}
.ft7{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#000000;}
-->
</style>
</head>
<body vlink="#FFFFFF" link="#FFFFFF" bgcolor="#ffffff">

<script TYPE="text/javascript">
var currentpos,timer; 
function initialize() 
{ 
timer=setInterval("scrollwindow()",10);
} 
function sc(){
clearInterval(timer); 
}
function scrollwindow() 
{ 
currentpos=document.body.scrollTop; 
window.scroll(0,++currentpos); 
if (currentpos != document.body.scrollTop) 
sc();
} 
document.onmousedown=sc
document.ondblclick=initialize
</script>
<div style="position:absolute;top:0;left:0"><img width="826" height="1169" src="pg_0345.jpg" ALT=""></div>
<div style="position:absolute;top:1102;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1102;left:391"><span class="ft0"> - 345 -</span></div>
<div style="position:absolute;top:81;left:90"><span class="ft1">handle individual items within the node. They search through the node for a data item </span></div>
<div style="position:absolute;top:97;left:90"><span class="ft1">with a particular key; insert a new item into the node, moving existing items if necessary; </span></div>
<div style="position:absolute;top:112;left:90"><span class="ft1">and remove an item, again moving existing items if necessary. Don't confuse these </span></div>
<div style="position:absolute;top:129;left:90"><span class="ft1">methods with the </span></div>
<div style="position:absolute;top:129;left:199"><span class="ft2">find()</span></div>
<div style="position:absolute;top:129;left:249"><span class="ft1"> and </span></div>
<div style="position:absolute;top:129;left:280"><span class="ft2">insert()</span></div>
<div style="position:absolute;top:129;left:347"><span class="ft1"> routines in the </span></div>
<div style="position:absolute;top:129;left:442"><span class="ft2">Tree234</span></div>
<div style="position:absolute;top:129;left:504"><span class="ft1"> class, which we'll look </span></div>
<div style="position:absolute;top:146;left:90"><span class="ft1">at next.</span></div>
<div style="position:absolute;top:143;left:136"><span class="ft0"> </span></div>
<div style="position:absolute;top:146;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:165;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:187;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:181;left:90"><span class="ft1"> A display routine displays a node with slashes separating the data items, like /27/56/89/, </span></div>
<div style="position:absolute;top:197;left:90"><span class="ft1">/14/66/, or /45/.</span></div>
<div style="position:absolute;top:194;left:184"><span class="ft0"> </span></div>
<div style="position:absolute;top:187;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:197;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:216;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:238;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:232;left:90"><span class="ft1"> Don't forget that in Java, references are automatically initialized to null and numbers to 0 </span></div>
<div style="position:absolute;top:248;left:90"><span class="ft1">when their object is created, so class </span></div>
<div style="position:absolute;top:248;left:321"><span class="ft2">Node</span></div>
<div style="position:absolute;top:248;left:354"><span class="ft1"> doesn't need a constructor.</span></div>
<div style="position:absolute;top:245;left:526"><span class="ft0"> </span></div>
<div style="position:absolute;top:238;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:249;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:268;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:286;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:284;left:90"><span class="ft3"> The </span></div>
<div style="position:absolute;top:284;left:129"><span class="ft4">Tree234</span></div>
<div style="position:absolute;top:284;left:208"><span class="ft3"> Class</span></div>
<div style="position:absolute;top:286;left:263"><span class="ft0"> </span></div>
<div style="position:absolute;top:286;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:292;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:311;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:342;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:327;left:90"><span class="ft1"> An object of the </span></div>
<div style="position:absolute;top:327;left:191"><span class="ft2">Tree234</span></div>
<div style="position:absolute;top:327;left:249"><span class="ft1"> class represents the entire tree. The class has only one field: </span></div>
<div style="position:absolute;top:344;left:90"><span class="ft2">root</span></div>
<div style="position:absolute;top:344;left:124"><span class="ft1">, of type </span></div>
<div style="position:absolute;top:344;left:177"><span class="ft2">Node</span></div>
<div style="position:absolute;top:344;left:210"><span class="ft1">. All operations start at the root, so that's all a tree needs to </span></div>
<div style="position:absolute;top:361;left:90"><span class="ft1">remember.</span></div>
<div style="position:absolute;top:358;left:157"><span class="ft0"> </span></div>
<div style="position:absolute;top:342;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:361;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:380;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:396;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:396;left:90"><span class="ft5"> Searching</span></div>
<div style="position:absolute;top:396;left:171"><span class="ft0"> </span></div>
<div style="position:absolute;top:396;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:399;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:419;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:450;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:435;left:90"><span class="ft1"> Searching for a data item with a specified key is carried out by the </span></div>
<div style="position:absolute;top:435;left:499"><span class="ft2">find()</span></div>
<div style="position:absolute;top:435;left:549"><span class="ft1"> routine. It </span></div>
<div style="position:absolute;top:452;left:90"><span class="ft1">starts at the root, and at each node calls that node's </span></div>
<div style="position:absolute;top:452;left:413"><span class="ft2">findItem()</span></div>
<div style="position:absolute;top:452;left:496"><span class="ft1"> routine to see if the </span></div>
<div style="position:absolute;top:469;left:90"><span class="ft1">item is there. If so, it returns the index of the item within the node's item array.</span></div>
<div style="position:absolute;top:466;left:567"><span class="ft0"> </span></div>
<div style="position:absolute;top:450;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:469;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:488;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:528;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:505;left:90"><span class="ft1"> If </span></div>
<div style="position:absolute;top:505;left:102"><span class="ft2">find()</span></div>
<div style="position:absolute;top:505;left:152"><span class="ft1"> is at a leaf and can't find the item, the search has failed, so it returns ¨C1. If it </span></div>
<div style="position:absolute;top:522;left:90"><span class="ft1">can't find the item in the current node, and the current node isn't a leaf, </span></div>
<div style="position:absolute;top:522;left:528"><span class="ft2">find()</span></div>
<div style="position:absolute;top:522;left:578"><span class="ft1"> calls the </span></div>
<div style="position:absolute;top:539;left:90"><span class="ft2">getNextChild()</span></div>
<div style="position:absolute;top:539;left:207"><span class="ft1"> method, which figures out which of a node's children the routine </span></div>
<div style="position:absolute;top:556;left:90"><span class="ft1">should go to next.</span></div>
<div style="position:absolute;top:553;left:200"><span class="ft0"> </span></div>
<div style="position:absolute;top:528;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:556;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:575;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:590;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:590;left:90"><span class="ft5"> Inserting</span></div>
<div style="position:absolute;top:590;left:161"><span class="ft0"> </span></div>
<div style="position:absolute;top:590;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:594;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:613;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:651;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:630;left:90"><span class="ft1"> The </span></div>
<div style="position:absolute;top:630;left:118"><span class="ft2">insert()</span></div>
<div style="position:absolute;top:630;left:185"><span class="ft1"> method starts with code similar to </span></div>
<div style="position:absolute;top:630;left:399"><span class="ft2">find()</span></div>
<div style="position:absolute;top:630;left:449"><span class="ft1">, except that if it finds a full </span></div>
<div style="position:absolute;top:646;left:90"><span class="ft1">node it splits it. Also, it assumes it can't fail; it keeps looking, going to deeper and deeper </span></div>
<div style="position:absolute;top:662;left:90"><span class="ft1">levels, until it finds a leaf node. At this point it inserts the new data item into the leaf. </span></div>
<div style="position:absolute;top:678;left:90"><span class="ft1">(There is always room in the leaf, otherwise the leaf would have been split.)</span></div>
<div style="position:absolute;top:675;left:554"><span class="ft0"> </span></div>
<div style="position:absolute;top:651;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:678;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:697;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:713;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:713;left:90"><span class="ft5"> Splitting</span></div>
<div style="position:absolute;top:713;left:157"><span class="ft0"> </span></div>
<div style="position:absolute;top:713;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:717;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:736;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:774;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:752;left:90"><span class="ft1"> The </span></div>
<div style="position:absolute;top:752;left:118"><span class="ft2">split()</span></div>
<div style="position:absolute;top:752;left:176"><span class="ft1"> method is the most complicated in this program. It is passed the node that </span></div>
<div style="position:absolute;top:769;left:90"><span class="ft1">will be split as an argument. First, the two rightmost data items are removed from the </span></div>
<div style="position:absolute;top:785;left:90"><span class="ft1">node and stored. Then the two rightmost children are disconnected; their references are </span></div>
<div style="position:absolute;top:801;left:90"><span class="ft1">also stored.</span></div>
<div style="position:absolute;top:798;left:162"><span class="ft0"> </span></div>
<div style="position:absolute;top:774;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:801;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:820;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:842;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:836;left:90"><span class="ft1"> A new node, called </span></div>
<div style="position:absolute;top:836;left:212"><span class="ft2">newRight</span></div>
<div style="position:absolute;top:836;left:278"><span class="ft1">, is created. It will be placed to the right of the node being </span></div>
<div style="position:absolute;top:853;left:90"><span class="ft1">split. If the node being split is the root, an additional new node is created: a new root.</span></div>
<div style="position:absolute;top:850;left:611"><span class="ft0">   </span></div>
<div style="position:absolute;top:853;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:872;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:935;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:888;left:90"><span class="ft1"> Next, appropriate connections are made to the parent of the node being split. It may be a </span></div>
<div style="position:absolute;top:904;left:90"><span class="ft1">pre-existing parent, or if the root is being split it will be the newly created root node. </span></div>
<div style="position:absolute;top:920;left:90"><span class="ft1">Assume the three data items in the node being split are called A, B, and C. Item B is </span></div>
<div style="position:absolute;top:936;left:90"><span class="ft1">inserted in this parent node. If necessary, the parent's existing children are disconnected </span></div>
<div style="position:absolute;top:952;left:90"><span class="ft1">and reconnected one position to the right to make room for the new data item and new </span></div>
<div style="position:absolute;top:969;left:90"><span class="ft1">connections. The </span></div>
<div style="position:absolute;top:969;left:200"><span class="ft2">newRight</span></div>
<div style="position:absolute;top:969;left:267"><span class="ft1"> node is connected to this parent. (Refer to </span></div>
<div style="position:absolute;top:969;left:533"><span class="ft6">Figures 10.5 </span></div>
<div style="position:absolute;top:969;left:614"><span class="ft7">and </span></div>
<div style="position:absolute;top:985;left:90"><span class="ft6">10.6</span></div>
<div style="position:absolute;top:985;left:117"><span class="ft7">.)</span></div>
<div style="position:absolute;top:982;left:126"><span class="ft0"> </span></div>
<div style="position:absolute;top:935;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:985;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1005;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:1036;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1021;left:90"><span class="ft1"> Now the focus shifts to the </span></div>
<div style="position:absolute;top:1021;left:257"><span class="ft2">newRight</span></div>
<div style="position:absolute;top:1021;left:324"><span class="ft1"> node. Data item C is inserted in it, and child 2 and </span></div>
<div style="position:absolute;top:1038;left:90"><span class="ft1">child 3, which were previously disconnected from the node being split, are connected to </span></div>
<div style="position:absolute;top:1054;left:90"><span class="ft1">it. The split is now complete, and the </span></div>
<div style="position:absolute;top:1054;left:319"><span class="ft2">split()</span></div>
<div style="position:absolute;top:1054;left:377"><span class="ft1"> routine returns.</span></div>
<div style="position:absolute;top:1051;left:475"><span class="ft0"> </span></div>
<div style="position:absolute;top:1036;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:1055;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1074;left:80"><span class="ft0"> </span></div>
<script TYPE="text/javascript">
			var currentZoom = parent.ltop.currentZoom;
			if(currentZoom != undefined)
				document.body.style.zoom=currentZoom/100;
			</script>
</body>
</html>