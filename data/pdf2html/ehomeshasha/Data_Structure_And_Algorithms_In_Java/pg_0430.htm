<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0052)http://www.verypdf.com/ -->
<html>
<head>
<title>pg_0430</title>

<style>
<!-- 
select {font-size:12px;}
A:link {text-decoration: none; color: blue}
A:visited {text-decoration: none; color: purple}
A:active {text-decoration: red}
A:hover {text-decoration: underline; color:red}
-->
</style>
<script TYPE="text/javascript"> 
<!-- hide 
function killerrors()
{ 
return true; 
} 
window.onerror = killerrors; 
// --> 
</script>
<style type="text/css">
<!--
.ft0{font-style:normal;font-weight:normal;font-size:16px;font-family:Times New Roman;color:#000000;}
.ft1{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft2{font-style:normal;font-weight:normal;font-size:13px;font-family:Times New Roman;color:#010100;}
.ft3{font-style:normal;font-weight:bold;font-size:16px;font-family:Arial;color:#010100;}
.ft4{font-style:normal;font-weight:bold;font-size:13px;font-family:Arial;color:#010100;}
.ft5{font-style:normal;font-weight:normal;font-size:13px;font-family:Times New Roman;color:#000000;}
.ft6{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#008000;}
.ft7{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#000000;}
-->
</style>
</head>
<body vlink="#FFFFFF" link="#FFFFFF" bgcolor="#ffffff">

<script TYPE="text/javascript">
var currentpos,timer; 
function initialize() 
{ 
timer=setInterval("scrollwindow()",10);
} 
function sc(){
clearInterval(timer); 
}
function scrollwindow() 
{ 
currentpos=document.body.scrollTop; 
window.scroll(0,++currentpos); 
if (currentpos != document.body.scrollTop) 
sc();
} 
document.onmousedown=sc
document.ondblclick=initialize
</script>
<div style="position:absolute;top:0;left:0"><img width="826" height="1169" src="pg_0430.jpg" ALT=""></div>
<div style="position:absolute;top:1102;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1102;left:391"><span class="ft0"> - 430 -</span></div>
<div style="position:absolute;top:84;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:115;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:100;left:90"><span class="ft1"> If we insert N new items into a heap, we apply the </span></div>
<div style="position:absolute;top:100;left:400"><span class="ft2">trickleUp()</span></div>
<div style="position:absolute;top:100;left:492"><span class="ft1"> method N times. </span></div>
<div style="position:absolute;top:117;left:90"><span class="ft1">However, if all the items are already in an array, they can be rearranged into a heap with </span></div>
<div style="position:absolute;top:133;left:90"><span class="ft1">only N/2 applications of </span></div>
<div style="position:absolute;top:133;left:238"><span class="ft2">trickleDown()</span></div>
<div style="position:absolute;top:133;left:346"><span class="ft1">. This offers a small speed advantage.</span></div>
<div style="position:absolute;top:130;left:581"><span class="ft0"> </span></div>
<div style="position:absolute;top:115;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:134;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:153;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:169;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:169;left:90"><span class="ft3"> Two Correct Subheaps Make a Correct Heap</span></div>
<div style="position:absolute;top:169;left:441"><span class="ft0"> </span></div>
<div style="position:absolute;top:169;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:173;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:192;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:230;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:208;left:90"><span class="ft1"> To see how this works, you should know that </span></div>
<div style="position:absolute;top:208;left:370"><span class="ft2">trickleDown()</span></div>
<div style="position:absolute;top:208;left:478"><span class="ft1"> will create a correct heap </span></div>
<div style="position:absolute;top:225;left:90"><span class="ft1">if, when an out-of-order item is placed at the root, both the child subheaps of this root are </span></div>
<div style="position:absolute;top:241;left:90"><span class="ft1">correct heaps. (The root can itself be the root of a subheap as well as of the entire heap.) </span></div>
<div style="position:absolute;top:257;left:90"><span class="ft1">This is shown in Figure 12.8.</span></div>
<div style="position:absolute;top:254;left:267"><span class="ft0"> </span></div>
<div style="position:absolute;top:230;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:257;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:276;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:364;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:441;left:292"><span class="ft0">  </span></div>
<div style="position:absolute;top:364;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:441;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:460;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:475;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:476;left:136"><span class="ft4"> Figure 12.8:  Both subtrees must be correct</span></div>
<div style="position:absolute;top:473;left:407"><span class="ft0"> </span></div>
<div style="position:absolute;top:475;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:498;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:496;left:136"><span class="ft5">  </span></div>
<div style="position:absolute;top:496;left:640"><span class="ft5">  </span></div>
<div style="position:absolute;top:498;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:517;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:573;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:533;left:90"><span class="ft1"> This suggests a way to transform an unordered array into a heap. We can apply </span></div>
<div style="position:absolute;top:550;left:90"><span class="ft2">trickleDown()</span></div>
<div style="position:absolute;top:550;left:199"><span class="ft1"> to the nodes on the bottom of the (potential) heap¡ªthat is, at the end </span></div>
<div style="position:absolute;top:566;left:90"><span class="ft1">of the array¡ªand work our way upward to the root at index 0. At each step the subheaps </span></div>
<div style="position:absolute;top:583;left:90"><span class="ft1">below us will already be correct heaps because we already applied </span></div>
<div style="position:absolute;top:583;left:505"><span class="ft2">trickleDown()</span></div>
<div style="position:absolute;top:583;left:613"><span class="ft1"> to </span></div>
<div style="position:absolute;top:600;left:90"><span class="ft1">them. After we apply </span></div>
<div style="position:absolute;top:600;left:221"><span class="ft2">trickleDown()</span></div>
<div style="position:absolute;top:600;left:329"><span class="ft1"> to the root, the unordered array will have been </span></div>
<div style="position:absolute;top:617;left:90"><span class="ft1">transformed into a heap.</span></div>
<div style="position:absolute;top:614;left:241"><span class="ft0"> </span></div>
<div style="position:absolute;top:573;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:617;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:636;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:699;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:652;left:90"><span class="ft1"> Notice however that the nodes on the bottom row¡ªthose with no children¡ªare already </span></div>
<div style="position:absolute;top:668;left:90"><span class="ft1">correct heaps, because they are trees with only one node; they have no relationships to </span></div>
<div style="position:absolute;top:684;left:90"><span class="ft1">be out of order. Therefore we don't need to apply </span></div>
<div style="position:absolute;top:684;left:395"><span class="ft2">trickleDown()</span></div>
<div style="position:absolute;top:684;left:503"><span class="ft1"> to these nodes. We </span></div>
<div style="position:absolute;top:701;left:90"><span class="ft1">can start at node N/2¨C1, the rightmost node with children, instead of N¨C1, the last node. </span></div>
<div style="position:absolute;top:717;left:90"><span class="ft1">Thus we need only half as many trickle operations as we would using </span></div>
<div style="position:absolute;top:717;left:519"><span class="ft2">insert()</span></div>
<div style="position:absolute;top:717;left:586"><span class="ft1"> N </span></div>
<div style="position:absolute;top:734;left:90"><span class="ft1">times.</span></div>
<div style="position:absolute;top:734;left:127"><span class="ft6"> Figure 12.9</span></div>
<div style="position:absolute;top:734;left:201"><span class="ft7"> shows the order in which the trickle-down algorithm is applied, starting </span></div>
<div style="position:absolute;top:750;left:90"><span class="ft7">at node 6 in a 15-node heap.</span></div>
<div style="position:absolute;top:747;left:268"><span class="ft0"> </span></div>
<div style="position:absolute;top:699;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:750;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:769;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:845;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:910;left:350"><span class="ft0">  </span></div>
<div style="position:absolute;top:845;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:910;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:929;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:945;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:946;left:136"><span class="ft4"> Figure 12.9:  Order of applying</span></div>
<div style="position:absolute;top:946;left:328"><span class="ft2"> trickleDown()</span></div>
<div style="position:absolute;top:943;left:445"><span class="ft0"> </span></div>
<div style="position:absolute;top:945;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:967;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:966;left:136"><span class="ft5">  </span></div>
<div style="position:absolute;top:966;left:640"><span class="ft5">  </span></div>
<div style="position:absolute;top:968;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:987;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:1009;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1003;left:90"><span class="ft1"> The following code fragment applies </span></div>
<div style="position:absolute;top:1003;left:317"><span class="ft2">trickleDown()</span></div>
<div style="position:absolute;top:1003;left:425"><span class="ft1"> to all nodes, except those on the </span></div>
<div style="position:absolute;top:1020;left:90"><span class="ft1">bottom row, starting at N/2¨C1 and working back to the root:</span></div>
<div style="position:absolute;top:1017;left:451"><span class="ft0"> </span></div>
<div style="position:absolute;top:1009;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:1020;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1039;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:1054;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1054;left:113"><span class="ft2"> for(j=size/2-1; j &gt;=0; j--)</span></div>
<div style="position:absolute;top:1051;left:338"><span class="ft0"> </span></div>
<div style="position:absolute;top:1054;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:1058;left:79"><span class="ft0"> </span></div>
<script TYPE="text/javascript">
			var currentZoom = parent.ltop.currentZoom;
			if(currentZoom != undefined)
				document.body.style.zoom=currentZoom/100;
			</script>
</body>
</html>