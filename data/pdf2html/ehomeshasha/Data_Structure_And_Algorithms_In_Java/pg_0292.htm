<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0052)http://www.verypdf.com/ -->
<html>
<head>
<title>pg_0292</title>

<style>
<!-- 
select {font-size:12px;}
A:link {text-decoration: none; color: blue}
A:visited {text-decoration: none; color: purple}
A:active {text-decoration: red}
A:hover {text-decoration: underline; color:red}
-->
</style>
<script TYPE="text/javascript"> 
<!-- hide 
function killerrors()
{ 
return true; 
} 
window.onerror = killerrors; 
// --> 
</script>
<style type="text/css">
<!--
.ft0{font-style:normal;font-weight:normal;font-size:16px;font-family:Times New Roman;color:#000000;}
.ft1{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft2{font-style:italic;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft3{font-style:normal;font-weight:bold;font-size:18px;font-family:Arial;color:#800000;}
.ft4{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#008000;}
.ft5{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#000000;}
.ft6{font-style:normal;font-weight:normal;font-size:13px;font-family:Times New Roman;color:#010100;}
-->
</style>
</head>
<body vlink="#FFFFFF" link="#FFFFFF" bgcolor="#ffffff">

<script TYPE="text/javascript">
var currentpos,timer; 
function initialize() 
{ 
timer=setInterval("scrollwindow()",10);
} 
function sc(){
clearInterval(timer); 
}
function scrollwindow() 
{ 
currentpos=document.body.scrollTop; 
window.scroll(0,++currentpos); 
if (currentpos != document.body.scrollTop) 
sc();
} 
document.onmousedown=sc
document.ondblclick=initialize
</script>
<div style="position:absolute;top:0;left:0"><img width="826" height="1169" src="pg_0292.jpg" ALT=""></div>
<div style="position:absolute;top:1102;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1102;left:391"><span class="ft0"> - 292 -</span></div>
<div style="position:absolute;top:81;left:90"><span class="ft1">traversal is not particularly fast. But traversing a tree is useful in some circumstances and </span></div>
<div style="position:absolute;top:97;left:90"><span class="ft1">the algorithm is interesting. (It's also simpler than deletion, the discussion of which we </span></div>
<div style="position:absolute;top:112;left:90"><span class="ft1">want to defer as long as possible.)</span></div>
<div style="position:absolute;top:109;left:301"><span class="ft0"> </span></div>
<div style="position:absolute;top:113;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:132;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:161;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:148;left:90"><span class="ft1"> There are three simple ways to traverse a tree. They're called preorder, inorder, and </span></div>
<div style="position:absolute;top:164;left:90"><span class="ft2">p</span></div>
<div style="position:absolute;top:164;left:98"><span class="ft2">ostorder. The order most commonly used for binary search trees is inorder, so let's look </span></div>
<div style="position:absolute;top:180;left:90"><span class="ft1">at that first, and then return briefly to the other two.</span></div>
<div style="position:absolute;top:177;left:401"><span class="ft0"> </span></div>
<div style="position:absolute;top:161;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:180;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:199;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:215;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:214;left:90"><span class="ft3"> Inorder Traversal</span></div>
<div style="position:absolute;top:216;left:244"><span class="ft0"> </span></div>
<div style="position:absolute;top:215;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:220;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:240;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:269;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:255;left:90"><span class="ft1"> An inorder traversal of a binary search tree will cause all the nodes to be visited in </span></div>
<div style="position:absolute;top:271;left:90"><span class="ft2">ascending order, based on their key values. If you want to create a sorted list of the data </span></div>
<div style="position:absolute;top:287;left:90"><span class="ft1">in a binary tree, this is one way to do it.</span></div>
<div style="position:absolute;top:284;left:330"><span class="ft0"> </span></div>
<div style="position:absolute;top:269;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:288;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:307;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:336;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:322;left:90"><span class="ft1"> The simplest way to carry out a traversal is the use of recursion (discussed in </span></div>
<div style="position:absolute;top:322;left:568"><span class="ft4">Chapter 6, </span></div>
<div style="position:absolute;top:338;left:90"><span class="ft4">&quot;Recursion&quot;</span></div>
<div style="position:absolute;top:338;left:163"><span class="ft5">). A recursive method to traverse the entire tree is called with a node as an </span></div>
<div style="position:absolute;top:354;left:90"><span class="ft5">argument. Initially, this node is the root. The method needs to do only three things:</span></div>
<div style="position:absolute;top:351;left:596"><span class="ft0">   </span></div>
<div style="position:absolute;top:355;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:374;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:389;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:390;left:90"><span class="ft1"> 1.</span></div>
<div style="position:absolute;top:387;left:102"><span class="ft0">  </span></div>
<div style="position:absolute;top:390;left:113"><span class="ft1">Call itself to traverse the node's left subtree</span></div>
<div style="position:absolute;top:387;left:379"><span class="ft0"> </span></div>
<div style="position:absolute;top:389;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:393;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:412;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:427;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:428;left:90"><span class="ft1"> 2.</span></div>
<div style="position:absolute;top:425;left:102"><span class="ft0">  </span></div>
<div style="position:absolute;top:428;left:113"><span class="ft1">Visit the node</span></div>
<div style="position:absolute;top:425;left:197"><span class="ft0"> </span></div>
<div style="position:absolute;top:427;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:431;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:450;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:466;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:466;left:90"><span class="ft1"> 3.</span></div>
<div style="position:absolute;top:463;left:102"><span class="ft0">  </span></div>
<div style="position:absolute;top:466;left:113"><span class="ft1">Call itself to traverse the node's right subtree</span></div>
<div style="position:absolute;top:463;left:388"><span class="ft0"> </span></div>
<div style="position:absolute;top:466;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:470;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:489;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:510;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:505;left:90"><span class="ft1"> Remember that visiting a node means doing something to it: displaying it, writing it to a </span></div>
<div style="position:absolute;top:521;left:90"><span class="ft1">file, or whatever.</span></div>
<div style="position:absolute;top:518;left:192"><span class="ft0"> </span></div>
<div style="position:absolute;top:510;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:521;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:540;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:570;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:556;left:90"><span class="ft1"> Traversals work with any binary tree, not just with binary search trees. The traversal </span></div>
<div style="position:absolute;top:572;left:90"><span class="ft1">mechanism doesn't pay any attention to the key values of the nodes; it only concerns </span></div>
<div style="position:absolute;top:588;left:90"><span class="ft1">itself with whether a node has children.</span></div>
<div style="position:absolute;top:585;left:330"><span class="ft0"> </span></div>
<div style="position:absolute;top:570;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:588;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:607;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:623;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:622;left:90"><span class="ft3"> Java Code for Traversing</span></div>
<div style="position:absolute;top:624;left:315"><span class="ft0"> </span></div>
<div style="position:absolute;top:623;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:628;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:648;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:703;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:663;left:90"><span class="ft1"> The actual code for inorder traversal is so simple we show it before seeing how traversal </span></div>
<div style="position:absolute;top:680;left:90"><span class="ft1">looks in the Workshop applet. The routine, </span></div>
<div style="position:absolute;top:680;left:354"><span class="ft6">inOrder()</span></div>
<div style="position:absolute;top:680;left:429"><span class="ft1">, performs the three steps already </span></div>
<div style="position:absolute;top:697;left:90"><span class="ft1">described. The visit to the node consists of displaying the contents of the node. Like any </span></div>
<div style="position:absolute;top:713;left:90"><span class="ft1">recursive function, there must be a base case: the condition that causes the routine to </span></div>
<div style="position:absolute;top:729;left:90"><span class="ft1">return immediately, without calling itself. In </span></div>
<div style="position:absolute;top:729;left:355"><span class="ft6">inOrder()</span></div>
<div style="position:absolute;top:729;left:430"><span class="ft1"> this happens when the node </span></div>
<div style="position:absolute;top:746;left:90"><span class="ft1">passed as an argument is null. Here's the code for the </span></div>
<div style="position:absolute;top:746;left:426"><span class="ft6">inOrder()</span></div>
<div style="position:absolute;top:746;left:501"><span class="ft1"> method:</span></div>
<div style="position:absolute;top:743;left:556"><span class="ft0"> </span></div>
<div style="position:absolute;top:703;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:747;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:766;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:782;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:781;left:113"><span class="ft6"> private void inOrder(node localRoot)</span></div>
<div style="position:absolute;top:778;left:413"><span class="ft0"> </span></div>
<div style="position:absolute;top:782;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:785;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:801;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:800;left:113"><span class="ft6">    {</span></div>
<div style="position:absolute;top:797;left:147"><span class="ft0"> </span></div>
<div style="position:absolute;top:801;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:805;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:820;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:819;left:113"><span class="ft6">    if(localRoot != null)</span></div>
<div style="position:absolute;top:816;left:313"><span class="ft0"> </span></div>
<div style="position:absolute;top:820;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:824;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:839;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:839;left:113"><span class="ft6">       {</span></div>
<div style="position:absolute;top:836;left:172"><span class="ft0"> </span></div>
<div style="position:absolute;top:839;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:843;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:858;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:858;left:113"><span class="ft6">       inOrder(localRoot.leftChild);</span></div>
<div style="position:absolute;top:855;left:405"><span class="ft0"> </span></div>
<div style="position:absolute;top:858;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:862;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:877;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:877;left:113"><span class="ft6">       localRoot.displayNode();</span></div>
<div style="position:absolute;top:874;left:363"><span class="ft0"> </span></div>
<div style="position:absolute;top:877;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:881;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:897;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:896;left:113"><span class="ft6">       inOrder(localRoot.rightChild);</span></div>
<div style="position:absolute;top:893;left:413"><span class="ft0"> </span></div>
<div style="position:absolute;top:897;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:900;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:916;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:915;left:113"><span class="ft6">       }</span></div>
<div style="position:absolute;top:912;left:172"><span class="ft0"> </span></div>
<div style="position:absolute;top:916;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:920;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:939;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:954;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:954;left:113"><span class="ft6">    }</span></div>
<div style="position:absolute;top:951;left:147"><span class="ft0"> </span></div>
<div style="position:absolute;top:954;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:958;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:977;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:992;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:993;left:90"><span class="ft1"> This method is initially called with the root as an argument:</span></div>
<div style="position:absolute;top:990;left:450"><span class="ft0"> </span></div>
<div style="position:absolute;top:992;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:996;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1015;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:1031;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1030;left:113"><span class="ft6"> inOrder(root);</span></div>
<div style="position:absolute;top:1027;left:230"><span class="ft0"> </span></div>
<div style="position:absolute;top:1031;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:1035;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1054;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:1069;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1070;left:90"><span class="ft1"> After that, it's on its own, calling itself recursively until there are no more nodes to visit.</span></div>
<div style="position:absolute;top:1067;left:619"><span class="ft0">   </span></div>
<div style="position:absolute;top:1073;left:79"><span class="ft0"> </span></div>
<script TYPE="text/javascript">
			var currentZoom = parent.ltop.currentZoom;
			if(currentZoom != undefined)
				document.body.style.zoom=currentZoom/100;
			</script>
</body>
</html>