<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0052)http://www.verypdf.com/ -->
<html>
<head>
<title>pg_0377</title>

<style>
<!-- 
select {font-size:12px;}
A:link {text-decoration: none; color: blue}
A:visited {text-decoration: none; color: purple}
A:active {text-decoration: red}
A:hover {text-decoration: underline; color:red}
-->
</style>
<script TYPE="text/javascript"> 
<!-- hide 
function killerrors()
{ 
return true; 
} 
window.onerror = killerrors; 
// --> 
</script>
<style type="text/css">
<!--
.ft0{font-style:normal;font-weight:normal;font-size:16px;font-family:Times New Roman;color:#000000;}
.ft1{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft2{font-style:normal;font-weight:bold;font-size:18px;font-family:Arial;color:#800000;}
.ft3{font-style:normal;font-weight:normal;font-size:13px;font-family:Times New Roman;color:#010100;}
.ft4{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#000000;}
.ft5{font-style:normal;font-weight:bold;font-size:13px;font-family:Arial;color:#010100;}
.ft6{font-style:normal;font-weight:normal;font-size:13px;font-family:Times New Roman;color:#000000;}
.ft7{font-style:italic;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
-->
</style>
</head>
<body vlink="#FFFFFF" link="#FFFFFF" bgcolor="#ffffff">

<script TYPE="text/javascript">
var currentpos,timer; 
function initialize() 
{ 
timer=setInterval("scrollwindow()",10);
} 
function sc(){
clearInterval(timer); 
}
function scrollwindow() 
{ 
currentpos=document.body.scrollTop; 
window.scroll(0,++currentpos); 
if (currentpos != document.body.scrollTop) 
sc();
} 
document.onmousedown=sc
document.ondblclick=initialize
</script>
<div style="position:absolute;top:0;left:0"><img width="826" height="1169" src="pg_0377.jpg" ALT=""></div>
<div style="position:absolute;top:1102;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1102;left:391"><span class="ft0"> - 377 -</span></div>
<div style="position:absolute;top:81;left:90"><span class="ft1">adding the numbers times powers of 27¡ªgenerates too many.</span></div>
<div style="position:absolute;top:78;left:474"><span class="ft0"> </span></div>
<div style="position:absolute;top:81;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:100;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:116;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:115;left:90"><span class="ft2"> Hashing</span></div>
<div style="position:absolute;top:117;left:164"><span class="ft0"> </span></div>
<div style="position:absolute;top:116;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:121;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:140;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:170;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:156;left:90"><span class="ft1"> What we need is a way to compress the huge range of numbers we obtain from the </span></div>
<div style="position:absolute;top:172;left:90"><span class="ft1">numbers-multiplied-by-powers system into a range that matches a reasonably sized </span></div>
<div style="position:absolute;top:188;left:90"><span class="ft1">array.</span></div>
<div style="position:absolute;top:185;left:126"><span class="ft0"> </span></div>
<div style="position:absolute;top:170;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:188;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:208;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:245;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:223;left:90"><span class="ft1"> How big an array are we talking about for our English dictionary. If we only have 50,000 </span></div>
<div style="position:absolute;top:239;left:90"><span class="ft1">words, you might assume our array should have approximately this many elements. </span></div>
<div style="position:absolute;top:255;left:90"><span class="ft1">However, it turns out we're going to need an array with about twice this many cells. (It will </span></div>
<div style="position:absolute;top:271;left:90"><span class="ft1">become clear later why this is so.) So we need an array with 100,000 elements.</span></div>
<div style="position:absolute;top:268;left:578"><span class="ft0"> </span></div>
<div style="position:absolute;top:245;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:272;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:291;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:321;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:307;left:90"><span class="ft1"> Thus we look for a way to squeeze a range of 0 to more than 7,000,000,000,000 into the </span></div>
<div style="position:absolute;top:323;left:90"><span class="ft1">range 0 to 100,000. A simple approach is to use the modulo operator (</span></div>
<div style="position:absolute;top:323;left:522"><span class="ft3">%</span></div>
<div style="position:absolute;top:323;left:530"><span class="ft1">), which finds the </span></div>
<div style="position:absolute;top:340;left:90"><span class="ft1">remainder when one number is divided by another.</span></div>
<div style="position:absolute;top:337;left:403"><span class="ft0"> </span></div>
<div style="position:absolute;top:321;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:340;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:359;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:414;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:375;left:90"><span class="ft1"> To see how this works, let's look at a smaller and more comprehensible range. Suppose </span></div>
<div style="position:absolute;top:391;left:90"><span class="ft1">we squeeze numbers in the range 0 to 199 (we'll represent them by the variable </span></div>
<div style="position:absolute;top:407;left:90"><span class="ft3">largeNumber</span></div>
<div style="position:absolute;top:407;left:182"><span class="ft1">) into the range 0 to 9 (the variable </span></div>
<div style="position:absolute;top:407;left:398"><span class="ft3">smallNumber</span></div>
<div style="position:absolute;top:407;left:490"><span class="ft1">). There are 10 numbers </span></div>
<div style="position:absolute;top:424;left:90"><span class="ft1">in the range of small numbers, so we'll say that a variable </span></div>
<div style="position:absolute;top:424;left:446"><span class="ft3">smallRange</span></div>
<div style="position:absolute;top:424;left:534"><span class="ft1"> has the value 10. </span></div>
<div style="position:absolute;top:441;left:90"><span class="ft1">It doesn't really matter what the large range is (unless it overflows the program's variable </span></div>
<div style="position:absolute;top:457;left:90"><span class="ft1">size). The Java expression for the conversion is </span></div>
<div style="position:absolute;top:454;left:388"><span class="ft0"> </span></div>
<div style="position:absolute;top:414;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:457;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:476;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:492;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:491;left:113"><span class="ft3"> smallNumber = largeNumber % smallRange;</span></div>
<div style="position:absolute;top:488;left:438"><span class="ft0"> </span></div>
<div style="position:absolute;top:492;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:496;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:515;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:544;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:531;left:90"><span class="ft1"> The remainders when any number is divided by 10 are always in the range 0 to 9; for </span></div>
<div style="position:absolute;top:547;left:90"><span class="ft1">example, 13%10 gives 3, and 157%10 is 7. This is shown in Figure 11.3</span></div>
<div style="position:absolute;top:547;left:533"><span class="ft4">. We've </span></div>
<div style="position:absolute;top:563;left:90"><span class="ft4">squeezed the range 0¨C199 into the range 0¨C9, a 20-to-1 compression ratio.</span></div>
<div style="position:absolute;top:560;left:552"><span class="ft0"> </span></div>
<div style="position:absolute;top:544;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:563;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:582;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:723;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:853;left:313"><span class="ft0">  </span></div>
<div style="position:absolute;top:723;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:853;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:872;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:887;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:888;left:136"><span class="ft5"> Figure 11.3:  Range conversion</span></div>
<div style="position:absolute;top:885;left:334"><span class="ft0"> </span></div>
<div style="position:absolute;top:887;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:910;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:908;left:136"><span class="ft6">  </span></div>
<div style="position:absolute;top:908;left:640"><span class="ft6">  </span></div>
<div style="position:absolute;top:910;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:929;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:951;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:945;left:90"><span class="ft1"> A similar expression can be used to compress the really huge numbers that uniquely </span></div>
<div style="position:absolute;top:961;left:90"><span class="ft1">represent every English word into index numbers that fit in our dictionary array:</span></div>
<div style="position:absolute;top:958;left:574"><span class="ft0"> </span></div>
<div style="position:absolute;top:951;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:961;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:980;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:996;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:995;left:113"><span class="ft3"> arrayIndex = hugeNumber % arraySize;</span></div>
<div style="position:absolute;top:992;left:413"><span class="ft0"> </span></div>
<div style="position:absolute;top:996;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:1000;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1019;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:1049;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1035;left:90"><span class="ft1"> This is an example of a hash function. It hashes (converts) a number in a large range into </span></div>
<div style="position:absolute;top:1051;left:90"><span class="ft1">a number in a smaller range. This smaller range corresponds to the index numbers in an </span></div>
<div style="position:absolute;top:1067;left:90"><span class="ft1">array. An array into which data is inserted using a hash function is called a hash table. </span></div>
<div style="position:absolute;top:1049;left:640"><span class="ft0">  </span></div>
<script TYPE="text/javascript">
			var currentZoom = parent.ltop.currentZoom;
			if(currentZoom != undefined)
				document.body.style.zoom=currentZoom/100;
			</script>
</body>
</html>