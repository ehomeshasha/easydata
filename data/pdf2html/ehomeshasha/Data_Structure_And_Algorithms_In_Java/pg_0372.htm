<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0052)http://www.verypdf.com/ -->
<html>
<head>
<title>pg_0372</title>

<style>
<!-- 
select {font-size:12px;}
A:link {text-decoration: none; color: blue}
A:visited {text-decoration: none; color: purple}
A:active {text-decoration: red}
A:hover {text-decoration: underline; color:red}
-->
</style>
<script TYPE="text/javascript"> 
<!-- hide 
function killerrors()
{ 
return true; 
} 
window.onerror = killerrors; 
// --> 
</script>
<style type="text/css">
<!--
.ft0{font-style:normal;font-weight:normal;font-size:16px;font-family:Times New Roman;color:#000000;}
.ft1{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft2{font-style:normal;font-weight:normal;font-size:10px;font-family:Arial;color:#ff00ff;}
.ft3{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#000000;}
.ft4{font-style:normal;font-weight:bold;font-size:16px;font-family:Verdana;color:#000000;}
.ft5{font-style:normal;font-weight:bold;font-size:25px;font-family:Arial;color:#000000;}
.ft6{font-style:normal;font-weight:bold;font-size:25px;font-family:Arial;color:#800000;}
.ft7{font-style:normal;font-weight:bold;font-size:18px;font-family:Arial;color:#000080;}
-->
</style>
</head>
<body vlink="#FFFFFF" link="#FFFFFF" bgcolor="#ffffff">

<script TYPE="text/javascript">
var currentpos,timer; 
function initialize() 
{ 
timer=setInterval("scrollwindow()",10);
} 
function sc(){
clearInterval(timer); 
}
function scrollwindow() 
{ 
currentpos=document.body.scrollTop; 
window.scroll(0,++currentpos); 
if (currentpos != document.body.scrollTop) 
sc();
} 
document.onmousedown=sc
document.ondblclick=initialize
</script>
<div style="position:absolute;top:0;left:0"><img width="826" height="1169" src="pg_0372.jpg" ALT=""></div>
<div style="position:absolute;top:1102;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1102;left:391"><span class="ft0"> - 372 -</span></div>
<div style="position:absolute;top:86;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:81;left:90"><span class="ft1"> .</span></div>
<div style="position:absolute;top:78;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:81;left:107"><span class="ft1">Splitting a node in a 2-3-4 tree is the same as performing a color flip in a red-black </span></div>
<div style="position:absolute;top:97;left:107"><span class="ft1">tree.</span></div>
<div style="position:absolute;top:94;left:135"><span class="ft0"> </span></div>
<div style="position:absolute;top:86;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:97;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:116;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:137;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:132;left:90"><span class="ft1"> .</span></div>
<div style="position:absolute;top:129;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:132;left:107"><span class="ft1">A rotation in a red-black tree corresponds to changing between the two possible </span></div>
<div style="position:absolute;top:148;left:107"><span class="ft1">orientations (slants) when transforming a 3-node.</span></div>
<div style="position:absolute;top:145;left:409"><span class="ft0"> </span></div>
<div style="position:absolute;top:137;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:148;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:167;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:182;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:183;left:90"><span class="ft1"> .</span></div>
<div style="position:absolute;top:180;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:183;left:107"><span class="ft1">The height of a 2-3-4 tree is less than log</span></div>
<div style="position:absolute;top:186;left:360"><span class="ft2">2</span></div>
<div style="position:absolute;top:183;left:366"><span class="ft1">N.</span></div>
<div style="position:absolute;top:180;left:380"><span class="ft0"> </span></div>
<div style="position:absolute;top:182;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:186;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:205;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:221;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:221;left:90"><span class="ft1"> .</span></div>
<div style="position:absolute;top:218;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:221;left:107"><span class="ft1">Search times are proportional to the height.</span></div>
<div style="position:absolute;top:218;left:374"><span class="ft0"> </span></div>
<div style="position:absolute;top:221;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:224;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:243;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:259;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:259;left:90"><span class="ft1"> .</span></div>
<div style="position:absolute;top:256;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:259;left:107"><span class="ft1">The 2-3-4 tree wastes space because many nodes are not even half full.</span></div>
<div style="position:absolute;top:256;left:552"><span class="ft0"> </span></div>
<div style="position:absolute;top:259;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:263;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:282;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:297;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:298;left:90"><span class="ft1"> .</span></div>
<div style="position:absolute;top:295;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:298;left:107"><span class="ft1">External storage means storing data outside of main memory; usually on a disk.</span></div>
<div style="position:absolute;top:295;left:597"><span class="ft0">   </span></div>
<div style="position:absolute;top:301;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:320;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:336;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:336;left:90"><span class="ft1"> .</span></div>
<div style="position:absolute;top:333;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:336;left:107"><span class="ft1">External storage is larger, cheaper (per byte), and slower than main memory.</span></div>
<div style="position:absolute;top:333;left:581"><span class="ft0"> </span></div>
<div style="position:absolute;top:336;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:339;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:358;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:380;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:374;left:90"><span class="ft1"> .</span></div>
<div style="position:absolute;top:371;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:374;left:107"><span class="ft3">Data in external storage is typically transferred to and from main memory a block at a </span></div>
<div style="position:absolute;top:390;left:107"><span class="ft3">time.</span></div>
<div style="position:absolute;top:387;left:137"><span class="ft0"> </span></div>
<div style="position:absolute;top:380;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:391;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:410;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:431;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:426;left:90"><span class="ft1"> .</span></div>
<div style="position:absolute;top:423;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:426;left:107"><span class="ft3">Data can be arranged in external storage in sequential key order. This gives fast </span></div>
<div style="position:absolute;top:441;left:107"><span class="ft3">search times but slow insertion (and deletion) times.</span></div>
<div style="position:absolute;top:438;left:427"><span class="ft0"> </span></div>
<div style="position:absolute;top:431;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:442;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:461;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:482;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:477;left:90"><span class="ft1"> .</span></div>
<div style="position:absolute;top:474;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:477;left:107"><span class="ft3">A B-tree is a multiway tree in which each node may have dozens or hundreds of keys </span></div>
<div style="position:absolute;top:493;left:107"><span class="ft3">and children.</span></div>
<div style="position:absolute;top:490;left:187"><span class="ft0"> </span></div>
<div style="position:absolute;top:482;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:493;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:512;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:527;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:528;left:90"><span class="ft1"> .</span></div>
<div style="position:absolute;top:525;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:528;left:107"><span class="ft3">There is always one more child than there are keys in a B-tree node.</span></div>
<div style="position:absolute;top:525;left:528"><span class="ft0"> </span></div>
<div style="position:absolute;top:527;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:531;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:550;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:572;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:566;left:90"><span class="ft1"> .</span></div>
<div style="position:absolute;top:563;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:566;left:107"><span class="ft1">For the best performance, a B-tree is typically organized so that a node holds one </span></div>
<div style="position:absolute;top:582;left:107"><span class="ft1">block of data.</span></div>
<div style="position:absolute;top:579;left:190"><span class="ft0"> </span></div>
<div style="position:absolute;top:572;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:582;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:601;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:623;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:617;left:90"><span class="ft1"> .</span></div>
<div style="position:absolute;top:614;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:617;left:107"><span class="ft1">If the search criteria involve many keys, a sequential search of all the records in a file </span></div>
<div style="position:absolute;top:633;left:107"><span class="ft1">may be the most practical approach.</span></div>
<div style="position:absolute;top:630;left:331"><span class="ft0"> </span></div>
<div style="position:absolute;top:633;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:650;left:79"><span class="ft4"> </span></div>
<div style="position:absolute;top:668;left:79"><span class="ft5">Chapter 11:</span></div>
<div style="position:absolute;top:668;left:216"><span class="ft6">  Hash Tables</span></div>
<div style="position:absolute;top:677;left:377"><span class="ft0"> </span></div>
<div style="position:absolute;top:674;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:682;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:701;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:718;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:717;left:90"><span class="ft7"> Overview</span></div>
<div style="position:absolute;top:719;left:174"><span class="ft0"> </span></div>
<div style="position:absolute;top:718;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:723;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:742;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:780;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:758;left:90"><span class="ft1"> A hash table is a data structure that offers very fast insertion and searching. When you </span></div>
<div style="position:absolute;top:774;left:90"><span class="ft1">first hear about them, hash tables sound almost too good to be true. No matter how many </span></div>
<div style="position:absolute;top:790;left:90"><span class="ft1">data items there are, insertion and searching (and sometimes deletion) can take close to </span></div>
<div style="position:absolute;top:806;left:90"><span class="ft1">constant time: O(1) in Big O notation. In practice this is just a few machine instructions.</span></div>
<div style="position:absolute;top:803;left:623"><span class="ft0"> </span></div>
<div style="position:absolute;top:780;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:806;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:825;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:879;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:841;left:90"><span class="ft1"> For a human user of a hash table this is essentially instantaneous. It's so fast that </span></div>
<div style="position:absolute;top:857;left:90"><span class="ft1">computer programs typically use hash tables when they need to look up tens of </span></div>
<div style="position:absolute;top:873;left:90"><span class="ft1">thousands of items in less than a second (as in spelling checkers). Hash tables are </span></div>
<div style="position:absolute;top:889;left:90"><span class="ft1">significantly faster than trees, which, as we learned in the preceding chapters, operate in </span></div>
<div style="position:absolute;top:905;left:90"><span class="ft1">relatively fast O(logN) time. Not only are they fast, hash tables are relatively easy to </span></div>
<div style="position:absolute;top:921;left:90"><span class="ft1">program.</span></div>
<div style="position:absolute;top:918;left:146"><span class="ft0"> </span></div>
<div style="position:absolute;top:879;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:921;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:940;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:994;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:956;left:90"><span class="ft1"> Hash tables do have several disadvantages. They're based on arrays, and arrays are </span></div>
<div style="position:absolute;top:972;left:90"><span class="ft1">difficult to expand once they've been created. For some kinds of hash tables, </span></div>
<div style="position:absolute;top:988;left:90"><span class="ft1">performance may degrade catastrophically when the table becomes too full, so the </span></div>
<div style="position:absolute;top:1004;left:90"><span class="ft1">programmer needs to have a fairly accurate idea of how many data items will need to be </span></div>
<div style="position:absolute;top:1020;left:90"><span class="ft1">stored (or be prepared to periodically transfer data to a larger hash table, a time-</span></div>
<div style="position:absolute;top:1036;left:90"><span class="ft1">consuming process).</span></div>
<div style="position:absolute;top:1033;left:218"><span class="ft0"> </span></div>
<div style="position:absolute;top:994;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:1036;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1055;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:1071;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1071;left:90"><span class="ft1"> Also, there's no convenient way to visit the items in a hash table in any kind of order </span></div>
<div style="position:absolute;top:1071;left:640"><span class="ft0">  </span></div>
<script TYPE="text/javascript">
			var currentZoom = parent.ltop.currentZoom;
			if(currentZoom != undefined)
				document.body.style.zoom=currentZoom/100;
			</script>
</body>
</html>