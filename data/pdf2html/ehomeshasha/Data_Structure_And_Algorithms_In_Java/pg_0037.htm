<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0052)http://www.verypdf.com/ -->
<html>
<head>
<title>pg_0037</title>

<style>
<!-- 
select {font-size:12px;}
A:link {text-decoration: none; color: blue}
A:visited {text-decoration: none; color: purple}
A:active {text-decoration: red}
A:hover {text-decoration: underline; color:red}
-->
</style>
<script TYPE="text/javascript"> 
<!-- hide 
function killerrors()
{ 
return true; 
} 
window.onerror = killerrors; 
// --> 
</script>
<style type="text/css">
<!--
.ft0{font-style:normal;font-weight:normal;font-size:16px;font-family:Times New Roman;color:#000000;}
.ft1{font-style:normal;font-weight:normal;font-size:13px;font-family:Times New Roman;color:#010100;}
.ft2{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft3{font-style:normal;font-weight:bold;font-size:16px;font-family:Arial;color:#010100;}
.ft4{font-style:italic;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft5{font-style:normal;font-weight:bold;font-size:16px;font-family:Verdana;color:#000000;}
.ft6{font-style:normal;font-weight:bold;font-size:18px;font-family:Arial;color:#000080;}
-->
</style>
</head>
<body vlink="#FFFFFF" link="#FFFFFF" bgcolor="#ffffff">

<script TYPE="text/javascript">
var currentpos,timer; 
function initialize() 
{ 
timer=setInterval("scrollwindow()",10);
} 
function sc(){
clearInterval(timer); 
}
function scrollwindow() 
{ 
currentpos=document.body.scrollTop; 
window.scroll(0,++currentpos); 
if (currentpos != document.body.scrollTop) 
sc();
} 
document.onmousedown=sc
document.ondblclick=initialize
</script>
<div style="position:absolute;top:0;left:0"><img width="826" height="1169" src="pg_0037.jpg" ALT=""></div>
<div style="position:absolute;top:1102;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1102;left:395"><span class="ft0"> - 37 -</span></div>
<div style="position:absolute;top:84;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:99;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:99;left:113"><span class="ft1"> 77 99 44 55 22 88 11 0 66 33</span></div>
<div style="position:absolute;top:96;left:347"><span class="ft0"> </span></div>
<div style="position:absolute;top:99;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:103;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:118;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:118;left:113"><span class="ft1"> Found 66</span></div>
<div style="position:absolute;top:115;left:180"><span class="ft0"> </span></div>
<div style="position:absolute;top:118;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:122;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:138;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:137;left:113"><span class="ft1"> 77 99 44 22 88 11 0 66 33</span></div>
<div style="position:absolute;top:134;left:322"><span class="ft0"> </span></div>
<div style="position:absolute;top:138;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:141;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:160;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:199;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:177;left:90"><span class="ft2"> The data we're storing in this array is type </span></div>
<div style="position:absolute;top:177;left:351"><span class="ft1">int</span></div>
<div style="position:absolute;top:177;left:376"><span class="ft2">. We've chosen a primitive type to simplify </span></div>
<div style="position:absolute;top:194;left:90"><span class="ft2">the coding. Generally the items stored in a data structure consist of several fields, so they </span></div>
<div style="position:absolute;top:210;left:90"><span class="ft2">are represented by objects rather than primitive types. We'll see an example of this </span></div>
<div style="position:absolute;top:226;left:90"><span class="ft2">toward the end of this chapter. </span></div>
<div style="position:absolute;top:223;left:281"><span class="ft0"> </span></div>
<div style="position:absolute;top:199;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:226;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:245;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:260;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:260;left:90"><span class="ft3"> Insertion</span></div>
<div style="position:absolute;top:260;left:161"><span class="ft0"> </span></div>
<div style="position:absolute;top:260;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:264;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:283;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:298;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:299;left:90"><span class="ft2"> Inserting an item into the array is easy; we use the normal array syntax</span></div>
<div style="position:absolute;top:296;left:526"><span class="ft0">  </span></div>
<div style="position:absolute;top:298;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:302;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:321;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:337;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:336;left:113"><span class="ft1"> arr[0] = 77;</span></div>
<div style="position:absolute;top:333;left:213"><span class="ft0"> </span></div>
<div style="position:absolute;top:337;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:341;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:360;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:382;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:376;left:90"><span class="ft2"> We also keep track of how many items we've inserted into the array with the </span></div>
<div style="position:absolute;top:376;left:561"><span class="ft1">nElems</span></div>
<div style="position:absolute;top:376;left:611"><span class="ft2"> </span></div>
<div style="position:absolute;top:393;left:90"><span class="ft2">variable.</span></div>
<div style="position:absolute;top:390;left:143"><span class="ft0"> </span></div>
<div style="position:absolute;top:382;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:393;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:412;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:427;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:428;left:90"><span class="ft3"> Searching</span></div>
<div style="position:absolute;top:428;left:171"><span class="ft0"> </span></div>
<div style="position:absolute;top:427;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:431;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:450;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:489;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:467;left:90"><span class="ft2"> The </span></div>
<div style="position:absolute;top:467;left:118"><span class="ft1">searchKey</span></div>
<div style="position:absolute;top:467;left:193"><span class="ft2"> variable holds the value we're looking for. To search for an item, we </span></div>
<div style="position:absolute;top:484;left:90"><span class="ft2">step through the array, comparing </span></div>
<div style="position:absolute;top:484;left:303"><span class="ft1">searchKey</span></div>
<div style="position:absolute;top:484;left:378"><span class="ft2"> with each element. If the loop variable </span></div>
<div style="position:absolute;top:484;left:618"><span class="ft1">j</span></div>
<div style="position:absolute;top:484;left:627"><span class="ft2"> </span></div>
<div style="position:absolute;top:501;left:90"><span class="ft2">reaches the last occupied cell with no match being found, then the value isn't in the array. </span></div>
<div style="position:absolute;top:517;left:90"><span class="ft2">Appropriate messages are displayed: &quot;Found 66&quot; or &quot;Can't find 27.&quot;</span></div>
<div style="position:absolute;top:514;left:503"><span class="ft0"> </span></div>
<div style="position:absolute;top:489;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:517;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:536;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:551;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:551;left:90"><span class="ft3"> Deletion</span></div>
<div style="position:absolute;top:551;left:156"><span class="ft0"> </span></div>
<div style="position:absolute;top:551;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:555;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:574;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:621;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:590;left:90"><span class="ft2"> Deletion begins with a search for the specified item. For simplicity we assume (perhaps </span></div>
<div style="position:absolute;top:606;left:90"><span class="ft2">rashly) that the item is present. When we find it, we move all the items with higher index </span></div>
<div style="position:absolute;top:622;left:90"><span class="ft2">values down one element to fill in the &quot;hole&quot; left by the deleted element, and we </span></div>
<div style="position:absolute;top:639;left:90"><span class="ft2">decrement </span></div>
<div style="position:absolute;top:639;left:160"><span class="ft1">nElems</span></div>
<div style="position:absolute;top:639;left:210"><span class="ft2">. In a real program, we'd also take appropriate action if the item to be </span></div>
<div style="position:absolute;top:655;left:90"><span class="ft2">deleted could not be found.</span></div>
<div style="position:absolute;top:652;left:258"><span class="ft0"> </span></div>
<div style="position:absolute;top:621;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:655;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:674;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:690;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:690;left:90"><span class="ft3"> Display</span></div>
<div style="position:absolute;top:690;left:149"><span class="ft0"> </span></div>
<div style="position:absolute;top:690;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:694;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:713;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:735;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:729;left:90"><span class="ft2"> Displaying all the elements is straightforward: we step through the array, accessing each </span></div>
<div style="position:absolute;top:745;left:90"><span class="ft2">one with </span></div>
<div style="position:absolute;top:745;left:146"><span class="ft1">arr[j]</span></div>
<div style="position:absolute;top:745;left:196"><span class="ft2"> and displaying it.</span></div>
<div style="position:absolute;top:742;left:303"><span class="ft0"> </span></div>
<div style="position:absolute;top:735;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:746;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:765;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:781;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:781;left:90"><span class="ft3"> Program Organization</span></div>
<div style="position:absolute;top:781;left:265"><span class="ft0"> </span></div>
<div style="position:absolute;top:781;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:784;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:803;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:842;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:820;left:90"><span class="ft2"> The organization of </span></div>
<div style="position:absolute;top:820;left:213"><span class="ft1">array.java</span></div>
<div style="position:absolute;top:820;left:296"><span class="ft2"> leaves something to be desired. There is only one </span></div>
<div style="position:absolute;top:837;left:90"><span class="ft2">class, </span></div>
<div style="position:absolute;top:837;left:130"><span class="ft1">ArrayApp</span></div>
<div style="position:absolute;top:837;left:196"><span class="ft2">, and this class has only one method, </span></div>
<div style="position:absolute;top:837;left:429"><span class="ft1">main()</span></div>
<div style="position:absolute;top:837;left:479"><span class="ft2">. The program is </span></div>
<div style="position:absolute;top:854;left:90"><span class="ft2">essentially an old-fashioned procedural program. Let's see if we can make it easier to </span></div>
<div style="position:absolute;top:870;left:90"><span class="ft2">understand (among other benefits) by making it more object-oriented.</span></div>
<div style="position:absolute;top:867;left:516"><span class="ft0"> </span></div>
<div style="position:absolute;top:842;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:870;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:889;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:927;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:905;left:90"><span class="ft2"> We're going to provide a gradual introduction to an object-oriented approach, using two </span></div>
<div style="position:absolute;top:921;left:90"><span class="ft2">steps. In the first, we'll separate the data storage structure (the array) from the rest of the </span></div>
<div style="position:absolute;top:937;left:90"><span class="ft2">program. This remaining part of the program will become a user of the structure. In the </span></div>
<div style="position:absolute;top:953;left:90"><span class="ft2">second step, we'll improve the communication between the storage structure and its user.</span></div>
<div style="position:absolute;top:950;left:640"><span class="ft0"> </span></div>
<div style="position:absolute;top:953;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:970;left:79"><span class="ft5"> </span></div>
<div style="position:absolute;top:990;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:989;left:90"><span class="ft6"> Dividing a Program into Classes</span></div>
<div style="position:absolute;top:991;left:378"><span class="ft0"> </span></div>
<div style="position:absolute;top:990;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:995;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1014;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:1044;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1030;left:90"><span class="ft2"> The </span></div>
<div style="position:absolute;top:1030;left:118"><span class="ft1">array.java</span></div>
<div style="position:absolute;top:1030;left:201"><span class="ft2"> program essentially consisted of one big method. We can reap many </span></div>
<div style="position:absolute;top:1047;left:90"><span class="ft2">benefits by dividing the program into classes. What classes. The data storage structure </span></div>
<div style="position:absolute;top:1063;left:90"><span class="ft2">itself is one candidate, and the part of the program that uses this data structure is </span></div>
<div style="position:absolute;top:1044;left:640"><span class="ft0">  </span></div>
<script TYPE="text/javascript">
			var currentZoom = parent.ltop.currentZoom;
			if(currentZoom != undefined)
				document.body.style.zoom=currentZoom/100;
			</script>
</body>
</html>