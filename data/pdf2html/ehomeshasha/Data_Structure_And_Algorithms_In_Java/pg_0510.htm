<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0052)http://www.verypdf.com/ -->
<html>
<head>
<title>pg_0510</title>

<style>
<!-- 
select {font-size:12px;}
A:link {text-decoration: none; color: blue}
A:visited {text-decoration: none; color: purple}
A:active {text-decoration: red}
A:hover {text-decoration: underline; color:red}
-->
</style>
<script TYPE="text/javascript"> 
<!-- hide 
function killerrors()
{ 
return true; 
} 
window.onerror = killerrors; 
// --> 
</script>
<style type="text/css">
<!--
.ft0{font-style:normal;font-weight:normal;font-size:16px;font-family:Times New Roman;color:#000000;}
.ft1{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft2{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#008000;}
.ft3{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#000000;}
.ft4{font-style:normal;font-weight:bold;font-size:18px;font-family:Arial;color:#000080;}
.ft5{font-style:normal;font-weight:bold;font-size:25px;font-family:Arial;color:#000000;}
.ft6{font-style:normal;font-weight:bold;font-size:25px;font-family:Arial;color:#800000;}
-->
</style>
</head>
<body vlink="#FFFFFF" link="#FFFFFF" bgcolor="#ffffff">

<script TYPE="text/javascript">
var currentpos,timer; 
function initialize() 
{ 
timer=setInterval("scrollwindow()",10);
} 
function sc(){
clearInterval(timer); 
}
function scrollwindow() 
{ 
currentpos=document.body.scrollTop; 
window.scroll(0,++currentpos); 
if (currentpos != document.body.scrollTop) 
sc();
} 
document.onmousedown=sc
document.ondblclick=initialize
</script>
<div style="position:absolute;top:0;left:0"><img width="826" height="1169" src="pg_0510.jpg" ALT=""></div>
<div style="position:absolute;top:1102;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1102;left:391"><span class="ft0"> - 510 -</span></div>
<div style="position:absolute;top:81;left:90"><span class="ft1">matrix approach. However, the algorithms are somewhat more complicated, which is why </span></div>
<div style="position:absolute;top:97;left:90"><span class="ft1">we've used the adjacency matrix approach throughout this chapter. You can consult </span></div>
<div style="position:absolute;top:112;left:90"><span class="ft1">Sedgewick (see </span></div>
<div style="position:absolute;top:112;left:192"><span class="ft2">Appendix B, &quot;Further Reading&quot;</span></div>
<div style="position:absolute;top:112;left:381"><span class="ft3">) and other writers for examples of graph </span></div>
<div style="position:absolute;top:128;left:90"><span class="ft3">algorithms using the adjacency list approach.</span></div>
<div style="position:absolute;top:125;left:368"><span class="ft0"> </span></div>
<div style="position:absolute;top:129;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:144;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:163;left:79"><span class="ft4">Summary</span></div>
<div style="position:absolute;top:165;left:164"><span class="ft0"> </span></div>
<div style="position:absolute;top:164;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:169;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:188;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:210;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:204;left:90"><span class="ft1"> .</span></div>
<div style="position:absolute;top:201;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:204;left:107"><span class="ft3">In a weighted graph, edges have an associated number called the weight, which might </span></div>
<div style="position:absolute;top:220;left:107"><span class="ft3">represent distances, costs, times, or other quantities.</span></div>
<div style="position:absolute;top:217;left:432"><span class="ft0"> </span></div>
<div style="position:absolute;top:210;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:220;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:240;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:261;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:255;left:90"><span class="ft1"> .</span></div>
<div style="position:absolute;top:252;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:255;left:107"><span class="ft3">The minimum spanning tree in a weighted graph minimizes the weights of the edges </span></div>
<div style="position:absolute;top:271;left:107"><span class="ft3">necessary to connect all the vertices.</span></div>
<div style="position:absolute;top:268;left:335"><span class="ft0"> </span></div>
<div style="position:absolute;top:261;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:272;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:291;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:312;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:307;left:90"><span class="ft1"> .</span></div>
<div style="position:absolute;top:304;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:307;left:107"><span class="ft3">An algorithm using a priority queue can be used to find the minimum spanning tree of </span></div>
<div style="position:absolute;top:322;left:107"><span class="ft3">a weighted graph.</span></div>
<div style="position:absolute;top:319;left:218"><span class="ft0"> </span></div>
<div style="position:absolute;top:312;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:323;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:342;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:363;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:358;left:90"><span class="ft1"> .</span></div>
<div style="position:absolute;top:355;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:358;left:107"><span class="ft3">The minimum spanning tree of a weighted graph models real-world situations such as </span></div>
<div style="position:absolute;top:374;left:107"><span class="ft3">installing utility cables between cities.</span></div>
<div style="position:absolute;top:371;left:337"><span class="ft0"> </span></div>
<div style="position:absolute;top:363;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:374;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:393;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:415;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:409;left:90"><span class="ft1"> .</span></div>
<div style="position:absolute;top:406;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:409;left:107"><span class="ft3">The shortest-path problem in a nonweighted graph involves finding the minimum </span></div>
<div style="position:absolute;top:425;left:107"><span class="ft3">number of edges between two vertices.</span></div>
<div style="position:absolute;top:422;left:349"><span class="ft0"> </span></div>
<div style="position:absolute;top:415;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:425;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:444;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:466;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:460;left:90"><span class="ft1"> .</span></div>
<div style="position:absolute;top:457;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:460;left:107"><span class="ft3">Solving the shortest-path problem for weighted graphs yields the path with the </span></div>
<div style="position:absolute;top:476;left:107"><span class="ft3">minimum total edge weight.</span></div>
<div style="position:absolute;top:473;left:276"><span class="ft0"> </span></div>
<div style="position:absolute;top:466;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:476;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:495;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:517;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:511;left:90"><span class="ft1"> .</span></div>
<div style="position:absolute;top:508;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:511;left:107"><span class="ft3">The shortest-path problem for weighted graphs can be solved with Dijkstra's </span></div>
<div style="position:absolute;top:527;left:107"><span class="ft3">Algorithm.</span></div>
<div style="position:absolute;top:524;left:170"><span class="ft0"> </span></div>
<div style="position:absolute;top:517;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:527;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:546;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:568;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:562;left:90"><span class="ft1"> .</span></div>
<div style="position:absolute;top:559;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:562;left:107"><span class="ft3">The algorithms for large, sparse graphs generally run much faster if the adjacency list </span></div>
<div style="position:absolute;top:578;left:107"><span class="ft3">representation of the graph is used rather than the adjacency matrix.</span></div>
<div style="position:absolute;top:575;left:528"><span class="ft0"> </span></div>
<div style="position:absolute;top:578;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:594;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:612;left:79"><span class="ft5">Chapter 15:</span></div>
<div style="position:absolute;top:612;left:216"><span class="ft6">  When to Use What</span></div>
<div style="position:absolute;top:621;left:450"><span class="ft0"> </span></div>
<div style="position:absolute;top:617;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:626;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:645;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:662;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:661;left:90"><span class="ft4"> Overview</span></div>
<div style="position:absolute;top:663;left:174"><span class="ft0"> </span></div>
<div style="position:absolute;top:662;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:667;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:686;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:708;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:702;left:90"><span class="ft1"> In this chapter we briefly summarize what we've learned so far, with an eye toward </span></div>
<div style="position:absolute;top:718;left:90"><span class="ft1">deciding what data structure or algorithm to use in a particular situation.</span></div>
<div style="position:absolute;top:715;left:530"><span class="ft0"> </span></div>
<div style="position:absolute;top:708;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:718;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:737;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:767;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:753;left:90"><span class="ft1"> This chapter comes with the usual caveats. Of necessity it's very general. Every real-</span></div>
<div style="position:absolute;top:769;left:90"><span class="ft1">world situation is unique, so what we say here may not be the right answer to your </span></div>
<div style="position:absolute;top:785;left:90"><span class="ft1">problem. This chapter is divided into three somewhat arbitrary sections:</span></div>
<div style="position:absolute;top:782;left:529"><span class="ft0"> </span></div>
<div style="position:absolute;top:767;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:785;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:804;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:819;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:820;left:90"><span class="ft1"> .</span></div>
<div style="position:absolute;top:817;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:820;left:107"><span class="ft3">General-purpose data structures: arrays, linked lists, trees, and hash tables</span></div>
<div style="position:absolute;top:817;left:570"><span class="ft0"> </span></div>
<div style="position:absolute;top:819;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:823;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:842;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:858;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:858;left:90"><span class="ft1"> .</span></div>
<div style="position:absolute;top:855;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:858;left:107"><span class="ft3">Specialized data structures: stacks, queues, priority queues, and graphs</span></div>
<div style="position:absolute;top:855;left:551"><span class="ft0">  </span></div>
<div style="position:absolute;top:858;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:862;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:881;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:896;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:897;left:90"><span class="ft1"> .</span></div>
<div style="position:absolute;top:894;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:897;left:107"><span class="ft3">Sorting</span></div>
<div style="position:absolute;top:894;left:151"><span class="ft0"> </span></div>
<div style="position:absolute;top:896;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:900;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:919;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:934;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:935;left:90"><span class="ft1"> For detailed information on these topics, refer to the individual chapters in this book.</span></div>
<div style="position:absolute;top:932;left:605"><span class="ft0"> </span></div>
<div style="position:absolute;top:938;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:954;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:973;left:79"><span class="ft4">General-Purpose Data Structures</span></div>
<div style="position:absolute;top:975;left:375"><span class="ft0"> </span></div>
<div style="position:absolute;top:974;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:979;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:998;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:1036;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1014;left:90"><span class="ft1"> If you need to store real-world data such as personnel records, inventories, contact lists, </span></div>
<div style="position:absolute;top:1030;left:90"><span class="ft1">or sales data, you need a general-purpose data structure. The structures of this type that </span></div>
<div style="position:absolute;top:1046;left:90"><span class="ft1">we've discussed in this book are arrays, linked lists, trees, and hash tables. We call these </span></div>
<div style="position:absolute;top:1062;left:90"><span class="ft1">general-purpose data structures because they are used to store and retrieve data using </span></div>
<div style="position:absolute;top:1036;left:640"><span class="ft0">  </span></div>
<script TYPE="text/javascript">
			var currentZoom = parent.ltop.currentZoom;
			if(currentZoom != undefined)
				document.body.style.zoom=currentZoom/100;
			</script>
</body>
</html>