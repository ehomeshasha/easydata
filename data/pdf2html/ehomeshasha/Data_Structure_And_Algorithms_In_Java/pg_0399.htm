<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0052)http://www.verypdf.com/ -->
<html>
<head>
<title>pg_0399</title>

<style>
<!-- 
select {font-size:12px;}
A:link {text-decoration: none; color: blue}
A:visited {text-decoration: none; color: purple}
A:active {text-decoration: red}
A:hover {text-decoration: underline; color:red}
-->
</style>
<script TYPE="text/javascript"> 
<!-- hide 
function killerrors()
{ 
return true; 
} 
window.onerror = killerrors; 
// --> 
</script>
<style type="text/css">
<!--
.ft0{font-style:normal;font-weight:normal;font-size:16px;font-family:Times New Roman;color:#000000;}
.ft1{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft2{font-style:normal;font-weight:bold;font-size:13px;font-family:Arial;color:#010100;}
.ft3{font-style:normal;font-weight:normal;font-size:13px;font-family:Times New Roman;color:#010100;}
.ft4{font-style:normal;font-weight:normal;font-size:13px;font-family:Times New Roman;color:#000000;}
.ft5{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#008000;}
.ft6{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#000000;}
.ft7{font-style:normal;font-weight:bold;font-size:16px;font-family:Arial;color:#010100;}
-->
</style>
</head>
<body vlink="#FFFFFF" link="#FFFFFF" bgcolor="#ffffff">

<script TYPE="text/javascript">
var currentpos,timer; 
function initialize() 
{ 
timer=setInterval("scrollwindow()",10);
} 
function sc(){
clearInterval(timer); 
}
function scrollwindow() 
{ 
currentpos=document.body.scrollTop; 
window.scroll(0,++currentpos); 
if (currentpos != document.body.scrollTop) 
sc();
} 
document.onmousedown=sc
document.ondblclick=initialize
</script>
<div style="position:absolute;top:0;left:0"><img width="826" height="1169" src="pg_0399.jpg" ALT=""></div>
<div style="position:absolute;top:1102;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1102;left:391"><span class="ft0"> - 399 -</span></div>
<div style="position:absolute;top:86;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:81;left:90"><span class="ft1"> To see how separate chaining works, start the HashChain Workshop applet. It displays </span></div>
<div style="position:absolute;top:97;left:90"><span class="ft1">an array of linked lists, as shown in Figure 11.11.</span></div>
<div style="position:absolute;top:94;left:391"><span class="ft0"> </span></div>
<div style="position:absolute;top:86;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:97;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:116;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:225;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:323;left:376"><span class="ft0">  </span></div>
<div style="position:absolute;top:225;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:323;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:342;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:358;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:358;left:136"><span class="ft2"> Figure 11.11:  </span></div>
<div style="position:absolute;top:358;left:230"><span class="ft3">The HashChain Workshop applet</span></div>
<div style="position:absolute;top:355;left:415"><span class="ft0"> </span></div>
<div style="position:absolute;top:358;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:381;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:379;left:136"><span class="ft4">  </span></div>
<div style="position:absolute;top:379;left:640"><span class="ft4">  </span></div>
<div style="position:absolute;top:381;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:400;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:461;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:416;left:90"><span class="ft1"> Each element of the array occupies one line of the display, and the linked lists extend </span></div>
<div style="position:absolute;top:432;left:90"><span class="ft1">from left to right. Initially there are 25 cells in the array (25 lists). This is more than fits on </span></div>
<div style="position:absolute;top:448;left:90"><span class="ft1">the screen; you can move the display up and down with the scrollbar to see the entire </span></div>
<div style="position:absolute;top:464;left:90"><span class="ft1">array. The display shows up to six items per list. You can create a hash table with up to </span></div>
<div style="position:absolute;top:479;left:90"><span class="ft1">100 lists, and use load factors up to 2.0. Higher load factors may cause the linked lists to </span></div>
<div style="position:absolute;top:495;left:90"><span class="ft1">exceed six items and run off the right edge of the screen, making it impossible to see all </span></div>
<div style="position:absolute;top:511;left:90"><span class="ft1">the items. (This may happen very occasionally even at the 2.0 load factor.)</span></div>
<div style="position:absolute;top:508;left:548"><span class="ft0"> </span></div>
<div style="position:absolute;top:461;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:512;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:531;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:576;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:547;left:90"><span class="ft1"> Experiment with the HashChain applet by inserting some new items with the Ins button. </span></div>
<div style="position:absolute;top:563;left:90"><span class="ft1">You'll see how the red arrow goes immediately to the correct list and inserts the item at </span></div>
<div style="position:absolute;top:579;left:90"><span class="ft1">the beginning of the list. The lists in the HashChain applet are not sorted, so insertion </span></div>
<div style="position:absolute;top:594;left:90"><span class="ft1">does not require searching through the list. (The example program will demonstrate </span></div>
<div style="position:absolute;top:610;left:90"><span class="ft1">sorted lists.)</span></div>
<div style="position:absolute;top:607;left:165"><span class="ft0"> </span></div>
<div style="position:absolute;top:576;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:611;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:630;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:675;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:646;left:90"><span class="ft1"> Try to find specified items using the Find button. During a Find operation, if there are </span></div>
<div style="position:absolute;top:662;left:90"><span class="ft1">several items on the list, the red arrow must step through the items looking for the correct </span></div>
<div style="position:absolute;top:678;left:90"><span class="ft1">one. For a successful search, half the items in the list must be examined on the average, </span></div>
<div style="position:absolute;top:693;left:90"><span class="ft1">as we discussed in </span></div>
<div style="position:absolute;top:693;left:211"><span class="ft5">Chapter 5, &quot;Linked Lists.&quot;</span></div>
<div style="position:absolute;top:693;left:367"><span class="ft6"> For an unsuccessful search all the items </span></div>
<div style="position:absolute;top:709;left:90"><span class="ft6">must be examined.</span></div>
<div style="position:absolute;top:706;left:208"><span class="ft0"> </span></div>
<div style="position:absolute;top:675;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:710;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:729;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:744;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:744;left:90"><span class="ft7"> Load Factors</span></div>
<div style="position:absolute;top:744;left:195"><span class="ft0"> </span></div>
<div style="position:absolute;top:744;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:748;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:767;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:805;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:783;left:90"><span class="ft1"> The load factor (the ratio of the number of items in a hash table to its size) is typically </span></div>
<div style="position:absolute;top:799;left:90"><span class="ft1">different in separate chaining than in open addressing. In separate chaining it's normal to </span></div>
<div style="position:absolute;top:815;left:90"><span class="ft1">put N or more items into an N-cell array; thus the load factor can be 1 or greater. There's </span></div>
<div style="position:absolute;top:831;left:90"><span class="ft1">no problem with this; some locations will simply contain two or more items in their lists.</span></div>
<div style="position:absolute;top:828;left:621"><span class="ft0"> </span></div>
<div style="position:absolute;top:805;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:831;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:850;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:896;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:866;left:90"><span class="ft1"> Of course, if there are many items on the lists, access time is reduced because access to </span></div>
<div style="position:absolute;top:882;left:90"><span class="ft1">a specified item requires searching through an average of half the items on the list. </span></div>
<div style="position:absolute;top:898;left:90"><span class="ft1">Finding the initial cell takes fast O(1) time, but searching through a list takes time </span></div>
<div style="position:absolute;top:914;left:90"><span class="ft1">proportional to the number of items on the list; O(M) time. Thus we don't want the lists to </span></div>
<div style="position:absolute;top:930;left:90"><span class="ft1">become too full.</span></div>
<div style="position:absolute;top:927;left:188"><span class="ft0"> </span></div>
<div style="position:absolute;top:896;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:930;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:949;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:979;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:965;left:90"><span class="ft1"> A load factor of 1, as shown in the Workshop applet, is common. With this load factor, </span></div>
<div style="position:absolute;top:981;left:90"><span class="ft1">roughly one third of the cells will be empty, one third will hold one item, and one third will </span></div>
<div style="position:absolute;top:997;left:90"><span class="ft1">hold two or more items.</span></div>
<div style="position:absolute;top:994;left:235"><span class="ft0"> </span></div>
<div style="position:absolute;top:979;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:997;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1016;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:1046;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1032;left:90"><span class="ft1"> In open addressing, performance degrades badly as the load factor increases above one </span></div>
<div style="position:absolute;top:1048;left:90"><span class="ft1">half or two thirds. In separate chaining the load factor can rise above 1 without hurting </span></div>
<div style="position:absolute;top:1064;left:90"><span class="ft1">performance very much. This makes separate chaining a more robust mechanism, </span></div>
<div style="position:absolute;top:1046;left:640"><span class="ft0">  </span></div>
<script TYPE="text/javascript">
			var currentZoom = parent.ltop.currentZoom;
			if(currentZoom != undefined)
				document.body.style.zoom=currentZoom/100;
			</script>
</body>
</html>