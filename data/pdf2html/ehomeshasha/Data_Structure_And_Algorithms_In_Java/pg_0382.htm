<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0052)http://www.verypdf.com/ -->
<html>
<head>
<title>pg_0382</title>

<style>
<!-- 
select {font-size:12px;}
A:link {text-decoration: none; color: blue}
A:visited {text-decoration: none; color: purple}
A:active {text-decoration: red}
A:hover {text-decoration: underline; color:red}
-->
</style>
<script TYPE="text/javascript"> 
<!-- hide 
function killerrors()
{ 
return true; 
} 
window.onerror = killerrors; 
// --> 
</script>
<style type="text/css">
<!--
.ft0{font-style:normal;font-weight:normal;font-size:16px;font-family:Times New Roman;color:#000000;}
.ft1{font-style:normal;font-weight:bold;font-size:13px;font-family:Arial;color:#010100;}
.ft2{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft3{font-style:normal;font-weight:normal;font-size:13px;font-family:Times New Roman;color:#010100;}
.ft4{font-style:normal;font-weight:bold;font-size:16px;font-family:Arial;color:#010100;}
.ft5{font-style:normal;font-weight:bold;font-size:18px;font-family:Arial;color:#800000;}
.ft6{font-style:normal;font-weight:bold;font-size:16px;font-family:Times New Roman;color:#010100;}
-->
</style>
</head>
<body vlink="#FFFFFF" link="#FFFFFF" bgcolor="#ffffff">

<script TYPE="text/javascript">
var currentpos,timer; 
function initialize() 
{ 
timer=setInterval("scrollwindow()",10);
} 
function sc(){
clearInterval(timer); 
}
function scrollwindow() 
{ 
currentpos=document.body.scrollTop; 
window.scroll(0,++currentpos); 
if (currentpos != document.body.scrollTop) 
sc();
} 
document.onmousedown=sc
document.ondblclick=initialize
</script>
<div style="position:absolute;top:0;left:0"><img width="826" height="1169" src="pg_0382.jpg" ALT=""></div>
<div style="position:absolute;top:1102;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1102;left:391"><span class="ft0"> - 382 -</span></div>
<div style="position:absolute;top:118;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:81;left:90"><span class="ft1"> The Del Button  The Del button deletes an item whose key is typed by the user. Deletion </span></div>
<div style="position:absolute;top:97;left:90"><span class="ft2">isn't accomplished by simply removing a data item from a cell, leaving it empty. Why not. </span></div>
<div style="position:absolute;top:112;left:90"><span class="ft2">Remember that during insertion the probe process steps along a series of cells, looking </span></div>
<div style="position:absolute;top:128;left:90"><span class="ft2">for a vacant one. If a cell is made empty in the middle of this sequence of full cells, the </span></div>
<div style="position:absolute;top:144;left:90"><span class="ft2">Find routine will give up when it sees the empty cell, even if the desired cell can </span></div>
<div style="position:absolute;top:160;left:90"><span class="ft2">eventually be reached.</span></div>
<div style="position:absolute;top:157;left:230"><span class="ft0"> </span></div>
<div style="position:absolute;top:118;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:161;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:180;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:210;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:196;left:90"><span class="ft2"> For this reason a deleted item is replaced by an item with a special key value that </span></div>
<div style="position:absolute;top:212;left:90"><span class="ft2">identifies it as deleted. In this applet we assume all legitimate key values are positive, so </span></div>
<div style="position:absolute;top:228;left:90"><span class="ft2">the deleted value is chosen as ¨C1. Deleted items are marked with the special key </span></div>
<div style="position:absolute;top:228;left:591"><span class="ft3">*Del*</span></div>
<div style="position:absolute;top:228;left:633"><span class="ft2">.</span></div>
<div style="position:absolute;top:225;left:637"><span class="ft0">  </span></div>
<div style="position:absolute;top:229;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:248;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:279;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:264;left:90"><span class="ft2"> The Insert button will insert a new item at the first available empty cell or in a </span></div>
<div style="position:absolute;top:264;left:564"><span class="ft3">*Del*</span></div>
<div style="position:absolute;top:264;left:605"><span class="ft2"> item. </span></div>
<div style="position:absolute;top:282;left:90"><span class="ft2">The Find button will treat a </span></div>
<div style="position:absolute;top:282;left:258"><span class="ft3">*Del*</span></div>
<div style="position:absolute;top:282;left:299"><span class="ft2"> item as an existing item for the purposes of searching </span></div>
<div style="position:absolute;top:298;left:90"><span class="ft2">for another item further along.</span></div>
<div style="position:absolute;top:295;left:273"><span class="ft0"> </span></div>
<div style="position:absolute;top:279;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:298;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:317;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:348;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:334;left:90"><span class="ft2"> If there are many deletions, the hash table fills up with these ersatz </span></div>
<div style="position:absolute;top:334;left:505"><span class="ft3">*Del*</span></div>
<div style="position:absolute;top:334;left:546"><span class="ft2"> data items, </span></div>
<div style="position:absolute;top:351;left:90"><span class="ft2">which makes it less efficient. For this reason many hash table implementations don't </span></div>
<div style="position:absolute;top:367;left:90"><span class="ft2">allow deletion. If it is implemented, it should be used sparingly.</span></div>
<div style="position:absolute;top:364;left:474"><span class="ft0"> </span></div>
<div style="position:absolute;top:348;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:367;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:386;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:401;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:401;left:90"><span class="ft4"> Duplicates Allowed.</span></div>
<div style="position:absolute;top:401;left:253"><span class="ft0"> </span></div>
<div style="position:absolute;top:401;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:405;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:424;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:462;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:440;left:90"><span class="ft2"> Can you allow data items with duplicate keys to be used in hash tables. The fill routine in </span></div>
<div style="position:absolute;top:456;left:90"><span class="ft2">the Hash applet doesn't allow duplicates, but you can insert them with the Insert button if </span></div>
<div style="position:absolute;top:472;left:90"><span class="ft2">you like. Then you'll see that only the first one can be accessed. The only way to access </span></div>
<div style="position:absolute;top:488;left:90"><span class="ft2">a second item with the same key is to delete the first one. This isn't too convenient.</span></div>
<div style="position:absolute;top:485;left:599"><span class="ft0"> </span></div>
<div style="position:absolute;top:462;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:488;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:507;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:545;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:523;left:90"><span class="ft2"> You could rewrite the Find algorithm to look for all items with the same key instead of just </span></div>
<div style="position:absolute;top:539;left:90"><span class="ft2">the first one. However, it would then need to search through all the cells of every linear </span></div>
<div style="position:absolute;top:555;left:90"><span class="ft2">sequence it encountered. This wastes time for all table accesses, even when no </span></div>
<div style="position:absolute;top:571;left:90"><span class="ft2">duplicates are involved. In the majority of cases you probably want to forbid duplicates.</span></div>
<div style="position:absolute;top:568;left:623"><span class="ft0"> </span></div>
<div style="position:absolute;top:545;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:571;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:590;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:606;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:606;left:90"><span class="ft4"> Clustering</span></div>
<div style="position:absolute;top:606;left:173"><span class="ft0"> </span></div>
<div style="position:absolute;top:606;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:609;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:629;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:658;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:644;left:90"><span class="ft2"> Try inserting more items into the hash table in the Hash Workshop applet. As it gets more </span></div>
<div style="position:absolute;top:660;left:90"><span class="ft2">full, clusters grow larger. Clustering can result in very long probe lengths. This means </span></div>
<div style="position:absolute;top:676;left:90"><span class="ft2">that it's very slow to access cells at the end of the sequence.</span></div>
<div style="position:absolute;top:673;left:462"><span class="ft0"> </span></div>
<div style="position:absolute;top:658;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:677;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:696;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:749;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:712;left:90"><span class="ft2"> The more full the array is, the worse clustering becomes. It's not a problem when the </span></div>
<div style="position:absolute;top:727;left:90"><span class="ft2">array is half full, and still not too bad when it's two-thirds full. Beyond this, however, </span></div>
<div style="position:absolute;top:743;left:90"><span class="ft2">performance degrades seriously as the clusters grow larger and larger. For this reason </span></div>
<div style="position:absolute;top:759;left:90"><span class="ft2">it's critical when designing a hash table to ensure that it never becomes more than half, </span></div>
<div style="position:absolute;top:775;left:90"><span class="ft2">or at the most two-thirds, full. (We'll discuss the mathematical relationship between how </span></div>
<div style="position:absolute;top:791;left:90"><span class="ft2">full the hash table is and probe lengths at the end of this chapter.)</span></div>
<div style="position:absolute;top:788;left:493"><span class="ft0"> </span></div>
<div style="position:absolute;top:749;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:792;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:811;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:827;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:826;left:90"><span class="ft5"> Java Code for a Linear Probe Hash Table</span></div>
<div style="position:absolute;top:828;left:455"><span class="ft0"> </span></div>
<div style="position:absolute;top:827;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:832;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:851;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:882;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:867;left:90"><span class="ft2"> It's not hard to create methods to handle search, insertion, and deletion with linear-probe </span></div>
<div style="position:absolute;top:883;left:90"><span class="ft2">hash tables. We'll show the Java code for these methods, and then a complete </span></div>
<div style="position:absolute;top:900;left:90"><span class="ft3">hash.java</span></div>
<div style="position:absolute;top:900;left:165"><span class="ft2"> program that puts them in context.</span></div>
<div style="position:absolute;top:897;left:380"><span class="ft0"> </span></div>
<div style="position:absolute;top:882;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:901;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:920;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:936;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:935;left:90"><span class="ft4"> The </span></div>
<div style="position:absolute;top:935;left:124"><span class="ft6">find()</span></div>
<div style="position:absolute;top:935;left:184"><span class="ft4"> Method</span></div>
<div style="position:absolute;top:935;left:248"><span class="ft0"> </span></div>
<div style="position:absolute;top:936;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:940;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:959;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:990;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:976;left:90"><span class="ft2"> The </span></div>
<div style="position:absolute;top:976;left:118"><span class="ft3">find()</span></div>
<div style="position:absolute;top:976;left:168"><span class="ft2"> method first calls </span></div>
<div style="position:absolute;top:976;left:280"><span class="ft3">hashFunc()</span></div>
<div style="position:absolute;top:976;left:363"><span class="ft2"> to hash the search key to obtain the index </span></div>
<div style="position:absolute;top:993;left:90"><span class="ft2">number </span></div>
<div style="position:absolute;top:993;left:141"><span class="ft3">hashVal</span></div>
<div style="position:absolute;top:993;left:199"><span class="ft2">. The </span></div>
<div style="position:absolute;top:993;left:235"><span class="ft3">hashFunc()</span></div>
<div style="position:absolute;top:993;left:318"><span class="ft2"> method applies the </span></div>
<div style="position:absolute;top:993;left:443"><span class="ft3">%</span></div>
<div style="position:absolute;top:993;left:452"><span class="ft2"> operator to the search key </span></div>
<div style="position:absolute;top:1010;left:90"><span class="ft2">and the array size, as we've seen before.</span></div>
<div style="position:absolute;top:1007;left:343"><span class="ft0"> </span></div>
<div style="position:absolute;top:990;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:1010;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1029;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:1051;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1045;left:90"><span class="ft2"> Next, in a </span></div>
<div style="position:absolute;top:1045;left:153"><span class="ft3">while</span></div>
<div style="position:absolute;top:1045;left:194"><span class="ft2"> condition, </span></div>
<div style="position:absolute;top:1045;left:262"><span class="ft3">find()</span></div>
<div style="position:absolute;top:1045;left:311"><span class="ft2"> checks if the item at this index is empty (</span></div>
<div style="position:absolute;top:1045;left:565"><span class="ft3">null</span></div>
<div style="position:absolute;top:1045;left:598"><span class="ft2">). If </span></div>
<div style="position:absolute;top:1062;left:90"><span class="ft2">not, it checks if the item contains the search key. If it does, it returns the item. If it doesn't, </span></div>
<div style="position:absolute;top:1051;left:640"><span class="ft0"> </span></div>
<script TYPE="text/javascript">
			var currentZoom = parent.ltop.currentZoom;
			if(currentZoom != undefined)
				document.body.style.zoom=currentZoom/100;
			</script>
</body>
</html>