<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0052)http://www.verypdf.com/ -->
<html>
<head>
<title>pg_0519</title>

<style>
<!-- 
select {font-size:12px;}
A:link {text-decoration: none; color: blue}
A:visited {text-decoration: none; color: purple}
A:active {text-decoration: red}
A:hover {text-decoration: underline; color:red}
-->
</style>
<script TYPE="text/javascript"> 
<!-- hide 
function killerrors()
{ 
return true; 
} 
window.onerror = killerrors; 
// --> 
</script>
<style type="text/css">
<!--
.ft0{font-style:normal;font-weight:normal;font-size:16px;font-family:Times New Roman;color:#000000;}
.ft1{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft2{font-style:normal;font-weight:normal;font-size:16px;font-family:Times New Roman;color:#ffffff;}
.ft3{font-style:normal;font-weight:bold;font-size:13px;font-family:Arial;color:#010100;}
.ft4{font-style:normal;font-weight:bold;font-size:18px;font-family:Arial;color:#000080;}
.ft5{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#008000;}
.ft6{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#000000;}
.ft7{font-style:normal;font-weight:bold;font-size:18px;font-family:Arial;color:#800000;}
-->
</style>
</head>
<body vlink="#FFFFFF" link="#FFFFFF" bgcolor="#ffffff">

<script TYPE="text/javascript">
var currentpos,timer; 
function initialize() 
{ 
timer=setInterval("scrollwindow()",10);
} 
function sc(){
clearInterval(timer); 
}
function scrollwindow() 
{ 
currentpos=document.body.scrollTop; 
window.scroll(0,++currentpos); 
if (currentpos != document.body.scrollTop) 
sc();
} 
document.onmousedown=sc
document.ondblclick=initialize
</script>
<div style="position:absolute;top:0;left:0"><img width="826" height="1169" src="pg_0519.jpg" ALT=""></div>
<div style="position:absolute;top:1102;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1102;left:391"><span class="ft0"> - 519 -</span></div>
<div style="position:absolute;top:80;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:81;left:96"><span class="ft1"> Mergesort</span></div>
<div style="position:absolute;top:78;left:158"><span class="ft0">   </span></div>
<div style="position:absolute;top:84;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:81;left:183"><span class="ft1"> O(N*logN)</span></div>
<div style="position:absolute;top:78;left:248"><span class="ft0">   </span></div>
<div style="position:absolute;top:84;left:183"><span class="ft0"> </span></div>
<div style="position:absolute;top:81;left:288"><span class="ft1"> O(N*logN)</span></div>
<div style="position:absolute;top:78;left:352"><span class="ft0"> </span></div>
<div style="position:absolute;top:84;left:288"><span class="ft0"> </span></div>
<div style="position:absolute;top:81;left:393"><span class="ft1"> Fair</span></div>
<div style="position:absolute;top:78;left:417"><span class="ft0"> </span></div>
<div style="position:absolute;top:84;left:393"><span class="ft0"> </span></div>
<div style="position:absolute;top:81;left:516"><span class="ft1"> Yes</span></div>
<div style="position:absolute;top:78;left:540"><span class="ft0"> </span></div>
<div style="position:absolute;top:80;left:638"><span class="ft0">  </span></div>
<div style="position:absolute;top:84;left:516"><span class="ft0"> </span></div>
<div style="position:absolute;top:103;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:118;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:119;left:96"><span class="ft1"> Heapsort</span></div>
<div style="position:absolute;top:116;left:152"><span class="ft0">   </span></div>
<div style="position:absolute;top:122;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:103;left:184"><span class="ft0">  </span></div>
<div style="position:absolute;top:119;left:183"><span class="ft1">O(N*logN)</span></div>
<div style="position:absolute;top:116;left:248"><span class="ft0">   </span></div>
<div style="position:absolute;top:122;left:183"><span class="ft0"> </span></div>
<div style="position:absolute;top:109;left:282"><span class="ft0">    </span></div>
<div style="position:absolute;top:119;left:288"><span class="ft1">O(N*logN)</span></div>
<div style="position:absolute;top:116;left:352"><span class="ft0"> </span></div>
<div style="position:absolute;top:122;left:288"><span class="ft0"> </span></div>
<div style="position:absolute;top:103;left:394"><span class="ft0">  </span></div>
<div style="position:absolute;top:119;left:393"><span class="ft1">Fair</span></div>
<div style="position:absolute;top:116;left:417"><span class="ft0"> </span></div>
<div style="position:absolute;top:122;left:393"><span class="ft0"> </span></div>
<div style="position:absolute;top:103;left:517"><span class="ft0">  </span></div>
<div style="position:absolute;top:119;left:516"><span class="ft1">No</span></div>
<div style="position:absolute;top:116;left:534"><span class="ft0"> </span></div>
<div style="position:absolute;top:118;left:638"><span class="ft0">  </span></div>
<div style="position:absolute;top:122;left:516"><span class="ft0"> </span></div>
<div style="position:absolute;top:109;left:645"><span class="ft0">  </span></div>
<div style="position:absolute;top:141;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:157;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:160;left:91"><span class="ft2">  </span></div>
<div style="position:absolute;top:164;left:90"><span class="ft3"> </span></div>
<div style="position:absolute;top:157;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:161;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:180;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:217;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:196;left:90"><span class="ft1"> Table 15.3 summarizes the running time for various sorting algorithms. The column labeled </span></div>
<div style="position:absolute;top:212;left:90"><span class="ft1">Comparison attempts to estimate the minor speed differences between algorithms with the </span></div>
<div style="position:absolute;top:227;left:90"><span class="ft1">same average Big O times. (There's no entry for Shellsort because there are no other </span></div>
<div style="position:absolute;top:243;left:90"><span class="ft1">algorithms with the same Big O performance.)</span></div>
<div style="position:absolute;top:240;left:373"><span class="ft0"> </span></div>
<div style="position:absolute;top:244;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:259;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:278;left:79"><span class="ft4">External Storage</span></div>
<div style="position:absolute;top:280;left:228"><span class="ft0"> </span></div>
<div style="position:absolute;top:279;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:284;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:303;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:341;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:319;left:90"><span class="ft1"> In the previous discussion we assumed that data was stored in main memory. However, </span></div>
<div style="position:absolute;top:335;left:90"><span class="ft1">amounts of data too large to store in memory must be stored in external storage, which </span></div>
<div style="position:absolute;top:351;left:90"><span class="ft1">generally means disk files. We discussed external storage in the second parts of </span></div>
<div style="position:absolute;top:367;left:90"><span class="ft5">Chapters 10, &quot;2-3-4 Tables and External Storage,</span></div>
<div style="position:absolute;top:367;left:395"><span class="ft6">&quot; and </span></div>
<div style="position:absolute;top:367;left:431"><span class="ft5">11, &quot;Hash Tables.&quot;</span></div>
<div style="position:absolute;top:364;left:545"><span class="ft0"> </span></div>
<div style="position:absolute;top:341;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:367;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:386;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:416;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:402;left:90"><span class="ft1"> We assumed that data is stored in a disk file in fixed-size units called blocks, each of </span></div>
<div style="position:absolute;top:418;left:90"><span class="ft1">which holds a number of records. (A record in a disk file holds the same sort of data as </span></div>
<div style="position:absolute;top:434;left:90"><span class="ft1">an object in main memory.) Like an object, a record has a key value used to access it.</span></div>
<div style="position:absolute;top:431;left:618"><span class="ft0">    </span></div>
<div style="position:absolute;top:434;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:454;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:491;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:469;left:90"><span class="ft1"> We also assumed that reading and writing operations always involve a single block, and </span></div>
<div style="position:absolute;top:485;left:90"><span class="ft1">these read and write operations are far more time-consuming than any processing of </span></div>
<div style="position:absolute;top:501;left:90"><span class="ft1">data in main memory. Thus for fast operation the number of disk accesses must be </span></div>
<div style="position:absolute;top:517;left:90"><span class="ft1">minimized.</span></div>
<div style="position:absolute;top:514;left:157"><span class="ft0"> </span></div>
<div style="position:absolute;top:491;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:517;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:537;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:553;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:552;left:90"><span class="ft7"> Sequential Storage</span></div>
<div style="position:absolute;top:554;left:260"><span class="ft0"> </span></div>
<div style="position:absolute;top:553;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:558;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:577;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:615;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:593;left:90"><span class="ft1"> The simplest approach is to store records randomly and read them sequentially when </span></div>
<div style="position:absolute;top:609;left:90"><span class="ft1">searching for one with a particular key. New records can simply be inserted at the end of </span></div>
<div style="position:absolute;top:625;left:90"><span class="ft1">the file. Deleted records can be marked as deleted, or records can be shifted down (as in </span></div>
<div style="position:absolute;top:641;left:90"><span class="ft1">an array) to fill in the gap.</span></div>
<div style="position:absolute;top:638;left:247"><span class="ft0"> </span></div>
<div style="position:absolute;top:615;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:641;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:660;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:690;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:676;left:90"><span class="ft1"> On the average, searching and deletion will involve reading half the blocks, so sequential </span></div>
<div style="position:absolute;top:692;left:90"><span class="ft1">storage is not very fast, operating in O(N) time. Still, it might be satisfactory for a small </span></div>
<div style="position:absolute;top:708;left:90"><span class="ft1">number of records.</span></div>
<div style="position:absolute;top:705;left:207"><span class="ft0"> </span></div>
<div style="position:absolute;top:690;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:708;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:727;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:744;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:743;left:90"><span class="ft7"> Indexed Files</span></div>
<div style="position:absolute;top:745;left:209"><span class="ft0"> </span></div>
<div style="position:absolute;top:744;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:749;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:768;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:806;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:784;left:90"><span class="ft1"> Speed is increased dramatically when indexed files are used. In this scheme an index of </span></div>
<div style="position:absolute;top:800;left:90"><span class="ft1">keys and corresponding block numbers is kept in main memory. To access a record with </span></div>
<div style="position:absolute;top:816;left:90"><span class="ft1">a specified key, the index is consulted. It supplies the block number for the key, and only </span></div>
<div style="position:absolute;top:832;left:90"><span class="ft1">one block needs to be read, taking O(1) time.</span></div>
<div style="position:absolute;top:829;left:368"><span class="ft0"> </span></div>
<div style="position:absolute;top:806;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:832;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:851;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:881;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:867;left:90"><span class="ft1"> Several indices with different kinds of keys can be used (one for last names, one for </span></div>
<div style="position:absolute;top:883;left:90"><span class="ft1">Social Security numbers, and so on). This scheme works well until the index becomes </span></div>
<div style="position:absolute;top:899;left:90"><span class="ft1">too large to fit in memory.</span></div>
<div style="position:absolute;top:896;left:247"><span class="ft0"> </span></div>
<div style="position:absolute;top:881;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:899;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:918;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:934;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:934;left:90"><span class="ft1"> Typically the index files are themselves stored on disk and read into memory as needed.</span></div>
<div style="position:absolute;top:931;left:633"><span class="ft0">   </span></div>
<div style="position:absolute;top:938;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:957;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:986;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:973;left:90"><span class="ft1"> The disadvantage of indexed files is that at some point the index must be created. This </span></div>
<div style="position:absolute;top:988;left:90"><span class="ft1">probably involves reading through the file sequentially, so creating the index is slow. </span></div>
<div style="position:absolute;top:1004;left:90"><span class="ft1">Also, the index will need to be updated when items are added to the file.</span></div>
<div style="position:absolute;top:1001;left:533"><span class="ft0"> </span></div>
<div style="position:absolute;top:986;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:1005;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1024;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:1040;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1039;left:90"><span class="ft7"> B-trees</span></div>
<div style="position:absolute;top:1041;left:155"><span class="ft0"> </span></div>
<div style="position:absolute;top:1040;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:1045;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1064;left:80"><span class="ft0"> </span></div>
<script TYPE="text/javascript">
			var currentZoom = parent.ltop.currentZoom;
			if(currentZoom != undefined)
				document.body.style.zoom=currentZoom/100;
			</script>
</body>
</html>