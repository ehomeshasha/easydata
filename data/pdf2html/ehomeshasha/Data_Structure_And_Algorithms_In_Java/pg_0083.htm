<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0052)http://www.verypdf.com/ -->
<html>
<head>
<title>pg_0083</title>

<style>
<!-- 
select {font-size:12px;}
A:link {text-decoration: none; color: blue}
A:visited {text-decoration: none; color: purple}
A:active {text-decoration: red}
A:hover {text-decoration: underline; color:red}
-->
</style>
<script TYPE="text/javascript"> 
<!-- hide 
function killerrors()
{ 
return true; 
} 
window.onerror = killerrors; 
// --> 
</script>
<style type="text/css">
<!--
.ft0{font-style:normal;font-weight:normal;font-size:16px;font-family:Times New Roman;color:#000000;}
.ft1{font-style:normal;font-weight:bold;font-size:13px;font-family:Arial;color:#010100;}
.ft2{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft3{font-style:normal;font-weight:normal;font-size:13px;font-family:Times New Roman;color:#010100;}
.ft4{font-style:normal;font-weight:normal;font-size:13px;font-family:Times New Roman;color:#000000;}
.ft5{font-style:normal;font-weight:bold;font-size:18px;font-family:Arial;color:#800000;}
.ft6{font-style:normal;font-weight:normal;font-size:11px;font-family:Times New Roman;color:#000000;}
.ft7{font-style:normal;font-weight:bold;font-size:16px;font-family:Verdana;color:#000000;}
.ft8{font-style:normal;font-weight:bold;font-size:18px;font-family:Arial;color:#000080;}
-->
</style>
</head>
<body vlink="#FFFFFF" link="#FFFFFF" bgcolor="#ffffff">

<script TYPE="text/javascript">
var currentpos,timer; 
function initialize() 
{ 
timer=setInterval("scrollwindow()",10);
} 
function sc(){
clearInterval(timer); 
}
function scrollwindow() 
{ 
currentpos=document.body.scrollTop; 
window.scroll(0,++currentpos); 
if (currentpos != document.body.scrollTop) 
sc();
} 
document.onmousedown=sc
document.ondblclick=initialize
</script>
<div style="position:absolute;top:0;left:0"><img width="826" height="1169" src="pg_0083.jpg" ALT=""></div>
<div style="position:absolute;top:1102;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1102;left:395"><span class="ft0"> - 83 -</span></div>
<div style="position:absolute;top:187;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:297;left:433"><span class="ft0">  </span></div>
<div style="position:absolute;top:187;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:297;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:316;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:331;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:332;left:136"><span class="ft1"> Figure 3.14:  Flow diagram for </span></div>
<div style="position:absolute;top:332;left:329"><span class="ft3">insertSort()</span></div>
<div style="position:absolute;top:329;left:429"><span class="ft0"> </span></div>
<div style="position:absolute;top:331;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:354;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:353;left:136"><span class="ft4">  </span></div>
<div style="position:absolute;top:353;left:640"><span class="ft4">  </span></div>
<div style="position:absolute;top:354;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:373;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:390;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:389;left:90"><span class="ft5"> Invariants in the Insertion Sort</span></div>
<div style="position:absolute;top:391;left:361"><span class="ft0"> </span></div>
<div style="position:absolute;top:390;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:395;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:414;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:437;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:431;left:90"><span class="ft2"> At the end of each pass, following the insertion of the item from </span></div>
<div style="position:absolute;top:431;left:482"><span class="ft3">temp</span></div>
<div style="position:absolute;top:431;left:515"><span class="ft2">, the data items with </span></div>
<div style="position:absolute;top:448;left:90"><span class="ft2">smaller indices than </span></div>
<div style="position:absolute;top:448;left:217"><span class="ft3">outer</span></div>
<div style="position:absolute;top:448;left:258"><span class="ft2"> are partially sorted.</span></div>
<div style="position:absolute;top:445;left:380"><span class="ft0"> </span></div>
<div style="position:absolute;top:437;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:449;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:468;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:484;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:483;left:90"><span class="ft5"> Efficiency of the Insertion Sort</span></div>
<div style="position:absolute;top:485;left:362"><span class="ft0"> </span></div>
<div style="position:absolute;top:484;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:489;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:508;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:538;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:524;left:90"><span class="ft2"> How many comparisons and copies does this algorithm require. On the first pass, it </span></div>
<div style="position:absolute;top:540;left:90"><span class="ft2">compares a maximum of one item. On the second pass, it's a maximum of two items, and </span></div>
<div style="position:absolute;top:556;left:90"><span class="ft2">so on, up to a maximum of N每1 comparisons on the last pass. This is</span></div>
<div style="position:absolute;top:553;left:515"><span class="ft0"> </span></div>
<div style="position:absolute;top:538;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:556;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:576;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:591;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:591;left:90"><span class="ft2"> 1 + 2 + 3 + ... + N每1 = N*(N每1)/2</span></div>
<div style="position:absolute;top:588;left:291"><span class="ft0"> </span></div>
<div style="position:absolute;top:591;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:595;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:614;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:644;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:630;left:90"><span class="ft2"> However, because on each pass an average of only half of the maximum number of </span></div>
<div style="position:absolute;top:646;left:90"><span class="ft2">items are actually compared before the insertion point is found, we can divide by 2, which </span></div>
<div style="position:absolute;top:662;left:90"><span class="ft2">gives:</span></div>
<div style="position:absolute;top:659;left:127"><span class="ft0"> </span></div>
<div style="position:absolute;top:644;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:662;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:681;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:696;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:697;left:90"><span class="ft2"> N*(N每1)/4</span></div>
<div style="position:absolute;top:694;left:152"><span class="ft0"> </span></div>
<div style="position:absolute;top:696;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:700;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:719;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:749;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:735;left:90"><span class="ft2"> The number of copies is approximately the same as the number of comparisons. </span></div>
<div style="position:absolute;top:751;left:90"><span class="ft2">However, a copy isn't as time-consuming as a swap, so for random data this algorithm </span></div>
<div style="position:absolute;top:767;left:90"><span class="ft2">runs twice as fast as the bubble sort and faster than the selection sort.</span></div>
<div style="position:absolute;top:764;left:521"><span class="ft0"> </span></div>
<div style="position:absolute;top:749;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:767;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:786;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:810;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:805;left:90"><span class="ft2"> In any case, like the other sort routines in this chapter, the insertion sort runs in O(N</span></div>
<div style="position:absolute;top:799;left:604"><span class="ft6">2</span></div>
<div style="position:absolute;top:805;left:610"><span class="ft2">) </span></div>
<div style="position:absolute;top:821;left:90"><span class="ft2">time for random data.</span></div>
<div style="position:absolute;top:818;left:222"><span class="ft0"> </span></div>
<div style="position:absolute;top:810;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:822;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:841;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:887;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:857;left:90"><span class="ft2"> For data that is already sorted or almost sorted, the insertion sort does much better. </span></div>
<div style="position:absolute;top:873;left:90"><span class="ft2">When data is in order, the condition in the </span></div>
<div style="position:absolute;top:873;left:350"><span class="ft3">while</span></div>
<div style="position:absolute;top:873;left:392"><span class="ft2"> loop is never true, so it becomes a </span></div>
<div style="position:absolute;top:890;left:90"><span class="ft2">simple statement in the outer loop, which executes N每1 times. In this case the algorithm </span></div>
<div style="position:absolute;top:906;left:90"><span class="ft2">runs in O(N) time. If the data is almost sorted, insertion sort runs in almost O(N) time, </span></div>
<div style="position:absolute;top:922;left:90"><span class="ft2">which makes it a simple and efficient way to order a file that is only slightly out of order.</span></div>
<div style="position:absolute;top:919;left:625"><span class="ft0"> </span></div>
<div style="position:absolute;top:887;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:922;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:941;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:971;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:957;left:90"><span class="ft2"> However, for data arranged in inverse sorted order, every possible comparison and shift is </span></div>
<div style="position:absolute;top:973;left:90"><span class="ft2">carried out, so the insertion sort runs no faster than the bubble sort. You can check this </span></div>
<div style="position:absolute;top:989;left:90"><span class="ft2">using the reverse-sorted data option (toggled with New) in the insertSort Workshop applet.</span></div>
<div style="position:absolute;top:986;left:645"><span class="ft0"> </span></div>
<div style="position:absolute;top:989;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1006;left:79"><span class="ft7"> </span></div>
<div style="position:absolute;top:1025;left:79"><span class="ft8">Sorting Objects</span></div>
<div style="position:absolute;top:1027;left:218"><span class="ft0"> </span></div>
<div style="position:absolute;top:1026;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:1031;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1050;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:1065;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1066;left:90"><span class="ft2"> For simplicity we've applied the sorting algorithms we've looked at thus far to a primitive </span></div>
<div style="position:absolute;top:1065;left:640"><span class="ft0">  </span></div>
<script TYPE="text/javascript">
			var currentZoom = parent.ltop.currentZoom;
			if(currentZoom != undefined)
				document.body.style.zoom=currentZoom/100;
			</script>
</body>
</html>