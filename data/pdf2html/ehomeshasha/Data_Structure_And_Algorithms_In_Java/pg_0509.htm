<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0052)http://www.verypdf.com/ -->
<html>
<head>
<title>pg_0509</title>

<style>
<!-- 
select {font-size:12px;}
A:link {text-decoration: none; color: blue}
A:visited {text-decoration: none; color: purple}
A:active {text-decoration: red}
A:hover {text-decoration: underline; color:red}
-->
</style>
<script TYPE="text/javascript"> 
<!-- hide 
function killerrors()
{ 
return true; 
} 
window.onerror = killerrors; 
// --> 
</script>
<style type="text/css">
<!--
.ft0{font-style:normal;font-weight:normal;font-size:16px;font-family:Times New Roman;color:#000000;}
.ft1{font-style:normal;font-weight:normal;font-size:13px;font-family:Times New Roman;color:#010100;}
.ft2{font-style:normal;font-weight:bold;font-size:18px;font-family:Arial;color:#000080;}
.ft3{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft4{font-style:normal;font-weight:normal;font-size:11px;font-family:Times New Roman;color:#000000;}
.ft5{font-style:italic;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
-->
</style>
</head>
<body vlink="#FFFFFF" link="#FFFFFF" bgcolor="#ffffff">

<script TYPE="text/javascript">
var currentpos,timer; 
function initialize() 
{ 
timer=setInterval("scrollwindow()",10);
} 
function sc(){
clearInterval(timer); 
}
function scrollwindow() 
{ 
currentpos=document.body.scrollTop; 
window.scroll(0,++currentpos); 
if (currentpos != document.body.scrollTop) 
sc();
} 
document.onmousedown=sc
document.ondblclick=initialize
</script>
<div style="position:absolute;top:0;left:0"><img width="826" height="1169" src="pg_0509.jpg" ALT=""></div>
<div style="position:absolute;top:1102;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1102;left:391"><span class="ft0"> - 509 -</span></div>
<div style="position:absolute;top:80;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:80;left:113"><span class="ft1">    public static void main(String[] args)</span></div>
<div style="position:absolute;top:77;left:455"><span class="ft0"> </span></div>
<div style="position:absolute;top:80;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:84;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:99;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:99;left:113"><span class="ft1">       {</span></div>
<div style="position:absolute;top:96;left:172"><span class="ft0"> </span></div>
<div style="position:absolute;top:99;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:103;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:118;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:118;left:113"><span class="ft1">       Graph theGraph = new Graph();</span></div>
<div style="position:absolute;top:115;left:405"><span class="ft0"> </span></div>
<div style="position:absolute;top:118;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:122;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:138;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:137;left:113"><span class="ft1">       theGraph.addVertex('A');     // 0  (start)</span></div>
<div style="position:absolute;top:134;left:513"><span class="ft0"> </span></div>
<div style="position:absolute;top:138;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:141;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:157;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:156;left:113"><span class="ft1">       theGraph.addVertex('C');     // 2</span></div>
<div style="position:absolute;top:153;left:438"><span class="ft0"> </span></div>
<div style="position:absolute;top:157;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:161;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:176;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:175;left:113"><span class="ft1">       theGraph.addVertex('B');     // 1</span></div>
<div style="position:absolute;top:172;left:438"><span class="ft0"> </span></div>
<div style="position:absolute;top:176;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:180;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:195;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:195;left:113"><span class="ft1">       theGraph.addVertex('D');     // 3</span></div>
<div style="position:absolute;top:192;left:438"><span class="ft0"> </span></div>
<div style="position:absolute;top:195;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:199;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:214;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:214;left:113"><span class="ft1">       theGraph.addVertex('E');     // 4</span></div>
<div style="position:absolute;top:211;left:438"><span class="ft0"> </span></div>
<div style="position:absolute;top:214;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:218;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:233;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:233;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:237;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:253;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:252;left:113"><span class="ft1">       theGraph.addEdge(0, 1, 50);  // AB 50</span></div>
<div style="position:absolute;top:249;left:471"><span class="ft0"> </span></div>
<div style="position:absolute;top:253;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:256;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:272;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:271;left:113"><span class="ft1">       theGraph.addEdge(0, 3, 80);  // AD 80</span></div>
<div style="position:absolute;top:268;left:471"><span class="ft0"> </span></div>
<div style="position:absolute;top:272;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:276;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:291;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:290;left:113"><span class="ft1">       theGraph.addEdge(1, 2, 60);  // BC 60</span></div>
<div style="position:absolute;top:287;left:471"><span class="ft0"> </span></div>
<div style="position:absolute;top:291;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:295;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:310;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:310;left:113"><span class="ft1">       theGraph.addEdge(1, 3, 90);  // BD 90</span></div>
<div style="position:absolute;top:307;left:471"><span class="ft0"> </span></div>
<div style="position:absolute;top:310;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:314;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:329;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:329;left:113"><span class="ft1">       theGraph.addEdge(2, 4, 40);  // CE 40</span></div>
<div style="position:absolute;top:326;left:471"><span class="ft0"> </span></div>
<div style="position:absolute;top:329;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:333;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:348;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:348;left:113"><span class="ft1">       theGraph.addEdge(3, 2, 20);  // DC 20</span></div>
<div style="position:absolute;top:345;left:471"><span class="ft0"> </span></div>
<div style="position:absolute;top:348;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:352;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:368;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:367;left:113"><span class="ft1">       theGraph.addEdge(3, 4, 70);  // DE 70</span></div>
<div style="position:absolute;top:364;left:471"><span class="ft0"> </span></div>
<div style="position:absolute;top:368;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:371;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:387;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:386;left:113"><span class="ft1">       theGraph.addEdge(4, 1, 50);  // EB 50</span></div>
<div style="position:absolute;top:383;left:471"><span class="ft0"> </span></div>
<div style="position:absolute;top:387;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:391;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:406;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:406;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:410;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:425;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:425;left:113"><span class="ft1">       System.out.println(&quot;Shortest paths&quot;);</span></div>
<div style="position:absolute;top:422;left:471"><span class="ft0"> </span></div>
<div style="position:absolute;top:425;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:429;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:444;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:444;left:113"><span class="ft1">       theGraph.path();             // shortest paths</span></div>
<div style="position:absolute;top:441;left:546"><span class="ft0"> </span></div>
<div style="position:absolute;top:444;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:448;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:463;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:463;left:113"><span class="ft1">       System.out.println();</span></div>
<div style="position:absolute;top:460;left:338"><span class="ft0"> </span></div>
<div style="position:absolute;top:463;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:467;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:483;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:482;left:113"><span class="ft1">       }  // end main()</span></div>
<div style="position:absolute;top:479;left:297"><span class="ft0"> </span></div>
<div style="position:absolute;top:483;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:486;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:502;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:501;left:113"><span class="ft1">    }  // end class PathApp</span></div>
<div style="position:absolute;top:498;left:330"><span class="ft0"> </span></div>
<div style="position:absolute;top:502;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:506;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:525;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:540;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:540;left:110"><span class="ft1"> ////////////////////////////////////////////////////////////////</span></div>
<div style="position:absolute;top:537;left:643"><span class="ft0"> </span></div>
<div style="position:absolute;top:540;left:643"><span class="ft0"> </span></div>
<div style="position:absolute;top:544;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:559;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:578;left:79"><span class="ft2">Efficiency</span></div>
<div style="position:absolute;top:580;left:167"><span class="ft0"> </span></div>
<div style="position:absolute;top:579;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:585;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:604;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:633;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:620;left:90"><span class="ft3"> So far we haven't discussed the efficiency of the various graph algorithms. The issue is </span></div>
<div style="position:absolute;top:636;left:90"><span class="ft3">complicated by the two ways of representing graphs: the adjacency matrix and adjacency </span></div>
<div style="position:absolute;top:651;left:90"><span class="ft3">lists.</span></div>
<div style="position:absolute;top:648;left:118"><span class="ft0"> </span></div>
<div style="position:absolute;top:633;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:652;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:671;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:720;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:689;left:90"><span class="ft3"> If an adjacency matrix is used, the algorithms we've discussed all require O(V</span></div>
<div style="position:absolute;top:683;left:566"><span class="ft4">2</span></div>
<div style="position:absolute;top:689;left:572"><span class="ft3">) time, </span></div>
<div style="position:absolute;top:706;left:90"><span class="ft3">where V is the number of vertices. Why. If you analyze the algorithms, you'll see that </span></div>
<div style="position:absolute;top:722;left:90"><span class="ft3">they involve examining each vertex once, and for that vertex going across its row in the </span></div>
<div style="position:absolute;top:738;left:90"><span class="ft3">adjacency matrix, looking at each edge in turn. In other words, each cell of the adjacency </span></div>
<div style="position:absolute;top:756;left:90"><span class="ft3">matrix, which has V</span></div>
<div style="position:absolute;top:751;left:211"><span class="ft4">2</span></div>
<div style="position:absolute;top:756;left:216"><span class="ft3"> cells, is examined.</span></div>
<div style="position:absolute;top:753;left:334"><span class="ft0"> </span></div>
<div style="position:absolute;top:720;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:757;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:776;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:815;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:795;left:90"><span class="ft3"> For large matrices, O(V</span></div>
<div style="position:absolute;top:789;left:235"><span class="ft4">2</span></div>
<div style="position:absolute;top:795;left:240"><span class="ft3">) isn't very good performance. If the graph is dense there isn't </span></div>
<div style="position:absolute;top:811;left:90"><span class="ft3">much we can do about improving this performance. (As we noted earlier, by dense we </span></div>
<div style="position:absolute;top:827;left:90"><span class="ft3">mean a graph that has many edges; one in which many or most of the cells in the </span></div>
<div style="position:absolute;top:843;left:90"><span class="ft3">adjacency matrix are filled.)</span></div>
<div style="position:absolute;top:840;left:259"><span class="ft0"> </span></div>
<div style="position:absolute;top:815;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:843;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:862;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:900;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:878;left:90"><span class="ft3"> However, many graphs are sparse, the opposite of dense. There's no clear-cut definition </span></div>
<div style="position:absolute;top:894;left:90"><span class="ft3">of how many edges a graph must have to be described as sparse or dense, but if each </span></div>
<div style="position:absolute;top:910;left:90"><span class="ft3">vertex in a large graph is connected by only a few edges, the graph would normally be </span></div>
<div style="position:absolute;top:926;left:90"><span class="ft3">described as sparse.</span></div>
<div style="position:absolute;top:923;left:218"><span class="ft0"> </span></div>
<div style="position:absolute;top:900;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:926;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:945;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:975;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:961;left:90"><span class="ft3"> In a sparse graph, running times can be improved by using the adjacency list </span></div>
<div style="position:absolute;top:977;left:90"><span class="ft3">representation rather than the adjacency matrix. This is easy to understand: you don't </span></div>
<div style="position:absolute;top:993;left:90"><span class="ft3">waste time examining adjacency matrix cells that don't hold edges.</span></div>
<div style="position:absolute;top:990;left:500"><span class="ft0"> </span></div>
<div style="position:absolute;top:975;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:993;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1012;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:1050;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1028;left:90"><span class="ft3"> For unweighted graphs the depth-first search with adjacency lists requires O(V+E) time, </span></div>
<div style="position:absolute;top:1044;left:90"><span class="ft3">where V is the number of vertices and E is the number of edges. For weighted graphs, both </span></div>
<div style="position:absolute;top:1060;left:90"><span class="ft3">the minimum spanning tree and the shortest-path algorithm require O((E+V)logV) time. In </span></div>
<div style="position:absolute;top:1076;left:90"><span class="ft3">large, sparse graphs these times can represent dramatic improvements over the adjacency </span></div>
<script TYPE="text/javascript">
			var currentZoom = parent.ltop.currentZoom;
			if(currentZoom != undefined)
				document.body.style.zoom=currentZoom/100;
			</script>
</body>
</html>