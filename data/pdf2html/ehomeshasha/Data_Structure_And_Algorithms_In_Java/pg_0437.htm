<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0052)http://www.verypdf.com/ -->
<html>
<head>
<title>pg_0437</title>

<style>
<!-- 
select {font-size:12px;}
A:link {text-decoration: none; color: blue}
A:visited {text-decoration: none; color: purple}
A:active {text-decoration: red}
A:hover {text-decoration: underline; color:red}
-->
</style>
<script TYPE="text/javascript"> 
<!-- hide 
function killerrors()
{ 
return true; 
} 
window.onerror = killerrors; 
// --> 
</script>
<style type="text/css">
<!--
.ft0{font-style:normal;font-weight:normal;font-size:16px;font-family:Times New Roman;color:#000000;}
.ft1{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#000000;}
.ft2{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft3{font-style:normal;font-weight:bold;font-size:16px;font-family:Verdana;color:#000000;}
-->
</style>
</head>
<body vlink="#FFFFFF" link="#FFFFFF" bgcolor="#ffffff">

<script TYPE="text/javascript">
var currentpos,timer; 
function initialize() 
{ 
timer=setInterval("scrollwindow()",10);
} 
function sc(){
clearInterval(timer); 
}
function scrollwindow() 
{ 
currentpos=document.body.scrollTop; 
window.scroll(0,++currentpos); 
if (currentpos != document.body.scrollTop) 
sc();
} 
document.onmousedown=sc
document.ondblclick=initialize
</script>
<div style="position:absolute;top:0;left:0"><img width="826" height="1169" src="pg_0437.jpg" ALT=""></div>
<div style="position:absolute;top:1102;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1102;left:391"><span class="ft0"> - 437 -</span></div>
<div style="position:absolute;top:81;left:107"><span class="ft1">descending queue) is said to have the highest priority.</span></div>
<div style="position:absolute;top:78;left:439"><span class="ft0"> </span></div>
<div style="position:absolute;top:81;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:100;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:122;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:116;left:90"><span class="ft2"> .</span></div>
<div style="position:absolute;top:113;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:116;left:107"><span class="ft1">A priority queue is an Abstract Data Type (ADT) that offers methods for insertion of </span></div>
<div style="position:absolute;top:132;left:107"><span class="ft1">data and removal of the largest (or smallest) item.</span></div>
<div style="position:absolute;top:129;left:413"><span class="ft0"> </span></div>
<div style="position:absolute;top:122;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:132;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:151;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:166;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:167;left:90"><span class="ft2"> .</span></div>
<div style="position:absolute;top:164;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:167;left:107"><span class="ft1">A heap is an efficient implementation of an ADT priority queue.</span></div>
<div style="position:absolute;top:164;left:493"><span class="ft0"> </span></div>
<div style="position:absolute;top:166;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:170;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:189;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:205;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:205;left:90"><span class="ft2"> .</span></div>
<div style="position:absolute;top:202;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:205;left:107"><span class="ft1">A heap offers removal of the largest item, and insertion, in O(N*logN) time.</span></div>
<div style="position:absolute;top:202;left:565"><span class="ft0"> </span></div>
<div style="position:absolute;top:205;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:208;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:228;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:243;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:243;left:90"><span class="ft2"> .</span></div>
<div style="position:absolute;top:240;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:243;left:107"><span class="ft1">The largest item is always in the root.</span></div>
<div style="position:absolute;top:240;left:337"><span class="ft0"> </span></div>
<div style="position:absolute;top:243;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:247;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:266;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:288;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:282;left:90"><span class="ft2"> .</span></div>
<div style="position:absolute;top:279;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:282;left:107"><span class="ft2">Heaps do not support ordered traversal of the data, locating an item with a specific </span></div>
<div style="position:absolute;top:298;left:107"><span class="ft2">key, or deletion.</span></div>
<div style="position:absolute;top:295;left:205"><span class="ft0"> </span></div>
<div style="position:absolute;top:288;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:298;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:317;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:339;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:333;left:90"><span class="ft2"> .</span></div>
<div style="position:absolute;top:330;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:333;left:107"><span class="ft1">A heap is usually implemented as an array representing a complete binary tree. The </span></div>
<div style="position:absolute;top:349;left:107"><span class="ft1">root is at index 0 and the last item at index N¨C1.</span></div>
<div style="position:absolute;top:346;left:401"><span class="ft0"> </span></div>
<div style="position:absolute;top:339;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:349;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:368;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:383;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:384;left:90"><span class="ft2"> .</span></div>
<div style="position:absolute;top:381;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:384;left:107"><span class="ft1">Each node has a key less than its parents and greater than its children.</span></div>
<div style="position:absolute;top:381;left:545"><span class="ft0"> </span></div>
<div style="position:absolute;top:383;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:387;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:406;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:428;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:422;left:90"><span class="ft2"> .</span></div>
<div style="position:absolute;top:419;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:422;left:107"><span class="ft1">An item to be inserted is always placed in the first vacant cell of the array, and then </span></div>
<div style="position:absolute;top:438;left:107"><span class="ft1">trickled up to its appropriate position.</span></div>
<div style="position:absolute;top:435;left:334"><span class="ft0"> </span></div>
<div style="position:absolute;top:428;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:438;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:458;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:479;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:473;left:90"><span class="ft2"> .</span></div>
<div style="position:absolute;top:470;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:473;left:107"><span class="ft1">When an item is removed from the root, it's  replaced by the last item in the array, </span></div>
<div style="position:absolute;top:489;left:107"><span class="ft1">which is then trickled down to its appropriate position.</span></div>
<div style="position:absolute;top:486;left:436"><span class="ft0"> </span></div>
<div style="position:absolute;top:479;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:490;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:509;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:530;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:525;left:90"><span class="ft2"> .</span></div>
<div style="position:absolute;top:522;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:525;left:107"><span class="ft1">The trickle-up and trickle-down processes can be thought of as a sequence of swaps, </span></div>
<div style="position:absolute;top:541;left:107"><span class="ft1">but are more efficiently implemented as a sequence of copies.</span></div>
<div style="position:absolute;top:538;left:489"><span class="ft0"> </span></div>
<div style="position:absolute;top:530;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:541;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:560;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:589;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:576;left:90"><span class="ft2"> .</span></div>
<div style="position:absolute;top:573;left:95"><span class="ft0"> </span></div>
<div style="position:absolute;top:589;left:102"><span class="ft0">  </span></div>
<div style="position:absolute;top:576;left:107"><span class="ft1">The priority of an arbitrary item can be changed. First its key is changed; then, if the </span></div>
<div style="position:absolute;top:592;left:107"><span class="ft1">key was increased, the item is trickled up, while if the key was decreased the item is </span></div>
<div style="position:absolute;top:608;left:107"><span class="ft1">trickled down.</span></div>
<div style="position:absolute;top:605;left:192"><span class="ft0"> </span></div>
<div style="position:absolute;top:589;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:608;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:627;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:642;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:643;left:90"><span class="ft2"> .</span></div>
<div style="position:absolute;top:640;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:643;left:107"><span class="ft1">Heapsort is an efficient sorting procedure that requires O(N*logN) time.</span></div>
<div style="position:absolute;top:640;left:544"><span class="ft0"> </span></div>
<div style="position:absolute;top:642;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:646;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:665;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:687;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:681;left:90"><span class="ft2"> .</span></div>
<div style="position:absolute;top:678;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:681;left:107"><span class="ft1">Conceptually heapsort consists of making N insertions into a heap, followed by N </span></div>
<div style="position:absolute;top:697;left:107"><span class="ft1">removals.</span></div>
<div style="position:absolute;top:694;left:168"><span class="ft0"> </span></div>
<div style="position:absolute;top:687;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:697;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:716;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:738;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:732;left:90"><span class="ft2"> .</span></div>
<div style="position:absolute;top:729;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:732;left:107"><span class="ft1">Heapsort can be made to run faster by applying the trickle-down algorithm directly to </span></div>
<div style="position:absolute;top:748;left:107"><span class="ft1">N/2 items in the unsorted array, rather than inserting N items.</span></div>
<div style="position:absolute;top:745;left:483"><span class="ft0"> </span></div>
<div style="position:absolute;top:738;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:748;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:767;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:789;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:783;left:90"><span class="ft2"> .</span></div>
<div style="position:absolute;top:780;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:783;left:107"><span class="ft1">The same array can be used for the initial unordered data, for the heap array, and for </span></div>
<div style="position:absolute;top:799;left:107"><span class="ft1">the final sorted data. Thus heapsort requires no extra memory.</span></div>
<div style="position:absolute;top:796;left:492"><span class="ft0"> </span></div>
<div style="position:absolute;top:799;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:816;left:79"><span class="ft3"> </span></div>
<div style="position:absolute;top:836;left:79"><span class="ft3"> </span></div>
<script TYPE="text/javascript">
			var currentZoom = parent.ltop.currentZoom;
			if(currentZoom != undefined)
				document.body.style.zoom=currentZoom/100;
			</script>
</body>
</html>