<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0052)http://www.verypdf.com/ -->
<html>
<head>
<title>pg_0110</title>

<style>
<!-- 
select {font-size:12px;}
A:link {text-decoration: none; color: blue}
A:visited {text-decoration: none; color: purple}
A:active {text-decoration: red}
A:hover {text-decoration: underline; color:red}
-->
</style>
<script TYPE="text/javascript"> 
<!-- hide 
function killerrors()
{ 
return true; 
} 
window.onerror = killerrors; 
// --> 
</script>
<style type="text/css">
<!--
.ft0{font-style:normal;font-weight:normal;font-size:16px;font-family:Times New Roman;color:#000000;}
.ft1{font-style:normal;font-weight:normal;font-size:13px;font-family:Times New Roman;color:#010100;}
.ft2{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft3{font-style:normal;font-weight:bold;font-size:16px;font-family:Arial;color:#010100;}
.ft4{font-style:normal;font-weight:bold;font-size:16px;font-family:Times New Roman;color:#010100;}
-->
</style>
</head>
<body vlink="#FFFFFF" link="#FFFFFF" bgcolor="#ffffff">

<script TYPE="text/javascript">
var currentpos,timer; 
function initialize() 
{ 
timer=setInterval("scrollwindow()",10);
} 
function sc(){
clearInterval(timer); 
}
function scrollwindow() 
{ 
currentpos=document.body.scrollTop; 
window.scroll(0,++currentpos); 
if (currentpos != document.body.scrollTop) 
sc();
} 
document.onmousedown=sc
document.ondblclick=initialize
</script>
<div style="position:absolute;top:0;left:0"><img width="826" height="1169" src="pg_0110.jpg" ALT=""></div>
<div style="position:absolute;top:1102;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1102;left:391"><span class="ft0"> - 110 -</span></div>
<div style="position:absolute;top:80;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:80;left:113"><span class="ft1">          System.out.print(&quot; &quot;);</span></div>
<div style="position:absolute;top:77;left:371"><span class="ft0"> </span></div>
<div style="position:absolute;top:80;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:84;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:99;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:99;left:113"><span class="ft1">          }</span></div>
<div style="position:absolute;top:96;left:197"><span class="ft0"> </span></div>
<div style="position:absolute;top:99;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:103;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:118;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:118;left:113"><span class="ft1">       System.out.println(&quot;&quot;);</span></div>
<div style="position:absolute;top:115;left:355"><span class="ft0"> </span></div>
<div style="position:absolute;top:118;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:122;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:138;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:137;left:113"><span class="ft1">       }  // end main()</span></div>
<div style="position:absolute;top:134;left:297"><span class="ft0"> </span></div>
<div style="position:absolute;top:138;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:141;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:160;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:176;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:175;left:113"><span class="ft1">    }  // end class QueueApp</span></div>
<div style="position:absolute;top:172;left:338"><span class="ft0"> </span></div>
<div style="position:absolute;top:176;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:180;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:199;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:230;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:215;left:90"><span class="ft2"> We've chosen an approach in which </span></div>
<div style="position:absolute;top:215;left:316"><span class="ft1">Queue</span></div>
<div style="position:absolute;top:215;left:358"><span class="ft2"> class fields include not only </span></div>
<div style="position:absolute;top:215;left:534"><span class="ft1">front</span></div>
<div style="position:absolute;top:215;left:575"><span class="ft2"> and </span></div>
<div style="position:absolute;top:232;left:90"><span class="ft1">rear</span></div>
<div style="position:absolute;top:232;left:124"><span class="ft2">, but also the number of items currently in the queue: </span></div>
<div style="position:absolute;top:232;left:452"><span class="ft1">nItems</span></div>
<div style="position:absolute;top:232;left:502"><span class="ft2">. Some queue </span></div>
<div style="position:absolute;top:249;left:90"><span class="ft2">implementations don't use this field; we'll show this alternative later. </span></div>
<div style="position:absolute;top:246;left:509"><span class="ft0"> </span></div>
<div style="position:absolute;top:230;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:249;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:268;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:284;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:284;left:90"><span class="ft3"> The </span></div>
<div style="position:absolute;top:284;left:124"><span class="ft4">insert()</span></div>
<div style="position:absolute;top:284;left:204"><span class="ft3"> Method</span></div>
<div style="position:absolute;top:284;left:268"><span class="ft0"> </span></div>
<div style="position:absolute;top:284;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:289;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:308;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:356;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:325;left:90"><span class="ft2"> The </span></div>
<div style="position:absolute;top:325;left:118"><span class="ft1">insert()</span></div>
<div style="position:absolute;top:325;left:185"><span class="ft2"> method assumes that the queue is not full. We don't show it in </span></div>
<div style="position:absolute;top:325;left:573"><span class="ft1">main()</span></div>
<div style="position:absolute;top:325;left:623"><span class="ft2">, </span></div>
<div style="position:absolute;top:342;left:90"><span class="ft2">but normally you should only call </span></div>
<div style="position:absolute;top:342;left:295"><span class="ft1">insert()</span></div>
<div style="position:absolute;top:342;left:361"><span class="ft2"> after calling </span></div>
<div style="position:absolute;top:342;left:440"><span class="ft1">isFull()</span></div>
<div style="position:absolute;top:342;left:507"><span class="ft2"> and getting a return </span></div>
<div style="position:absolute;top:359;left:90"><span class="ft2">value of false. (It's usually preferable to place the check for fullness in the </span></div>
<div style="position:absolute;top:359;left:544"><span class="ft1">insert()</span></div>
<div style="position:absolute;top:359;left:610"><span class="ft2"> </span></div>
<div style="position:absolute;top:376;left:90"><span class="ft2">routine, and cause an exception to be thrown if an attempt was made to insert into a full </span></div>
<div style="position:absolute;top:392;left:90"><span class="ft2">queue.)</span></div>
<div style="position:absolute;top:389;left:137"><span class="ft0"> </span></div>
<div style="position:absolute;top:356;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:392;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:411;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:460;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:427;left:90"><span class="ft2"> Normally, insertion involves incrementing </span></div>
<div style="position:absolute;top:427;left:347"><span class="ft1">rear</span></div>
<div style="position:absolute;top:427;left:380"><span class="ft2"> and inserting at the cell </span></div>
<div style="position:absolute;top:427;left:530"><span class="ft1">rear</span></div>
<div style="position:absolute;top:427;left:564"><span class="ft2"> now points </span></div>
<div style="position:absolute;top:444;left:90"><span class="ft2">to. However, if </span></div>
<div style="position:absolute;top:444;left:183"><span class="ft1">rear</span></div>
<div style="position:absolute;top:444;left:216"><span class="ft2"> is at the top of the array, at </span></div>
<div style="position:absolute;top:444;left:389"><span class="ft1">maxSize-1</span></div>
<div style="position:absolute;top:444;left:464"><span class="ft2">, then it must wrap around to </span></div>
<div style="position:absolute;top:462;left:90"><span class="ft2">the bottom of the array before the insertion takes place. This is done by setting </span></div>
<div style="position:absolute;top:462;left:577"><span class="ft1">rear</span></div>
<div style="position:absolute;top:462;left:610"><span class="ft2"> to ¨C</span></div>
<div style="position:absolute;top:479;left:90"><span class="ft2">1, so when the increment occurs </span></div>
<div style="position:absolute;top:479;left:294"><span class="ft1">rear</span></div>
<div style="position:absolute;top:479;left:327"><span class="ft2"> will become 0, the bottom of the array. Finally </span></div>
<div style="position:absolute;top:496;left:90"><span class="ft1">nItems</span></div>
<div style="position:absolute;top:496;left:140"><span class="ft2"> is incremented.</span></div>
<div style="position:absolute;top:493;left:238"><span class="ft0"> </span></div>
<div style="position:absolute;top:460;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:497;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:516;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:532;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:532;left:90"><span class="ft3"> The </span></div>
<div style="position:absolute;top:532;left:124"><span class="ft4">remove()</span></div>
<div style="position:absolute;top:532;left:204"><span class="ft3"> Method</span></div>
<div style="position:absolute;top:532;left:268"><span class="ft0"> </span></div>
<div style="position:absolute;top:532;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:537;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:556;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:587;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:572;left:90"><span class="ft2"> The </span></div>
<div style="position:absolute;top:572;left:118"><span class="ft1">remove()</span></div>
<div style="position:absolute;top:572;left:185"><span class="ft2"> method assumes that the queue is not empty. You should call </span></div>
<div style="position:absolute;top:589;left:90"><span class="ft1">isEmpty()</span></div>
<div style="position:absolute;top:589;left:165"><span class="ft2"> to ensure this is true before calling </span></div>
<div style="position:absolute;top:589;left:385"><span class="ft1">remove()</span></div>
<div style="position:absolute;top:589;left:451"><span class="ft2">, or build this error-checking </span></div>
<div style="position:absolute;top:607;left:90"><span class="ft2">into </span></div>
<div style="position:absolute;top:607;left:116"><span class="ft1">remove()</span></div>
<div style="position:absolute;top:607;left:183"><span class="ft2">.</span></div>
<div style="position:absolute;top:604;left:187"><span class="ft0"> </span></div>
<div style="position:absolute;top:587;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:607;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:627;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:666;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:643;left:90"><span class="ft2"> Removal always starts by obtaining the value at </span></div>
<div style="position:absolute;top:643;left:388"><span class="ft1">front</span></div>
<div style="position:absolute;top:643;left:429"><span class="ft2"> and then incrementing </span></div>
<div style="position:absolute;top:643;left:574"><span class="ft1">front</span></div>
<div style="position:absolute;top:643;left:616"><span class="ft2">. </span></div>
<div style="position:absolute;top:660;left:90"><span class="ft2">However, if this puts </span></div>
<div style="position:absolute;top:660;left:219"><span class="ft1">front</span></div>
<div style="position:absolute;top:660;left:261"><span class="ft2"> beyond the end of the array, it must then be wrapped around </span></div>
<div style="position:absolute;top:677;left:90"><span class="ft2">to 0. The return value is stored temporarily while this possibility is checked. Finally, </span></div>
<div style="position:absolute;top:693;left:90"><span class="ft1">nItems</span></div>
<div style="position:absolute;top:693;left:140"><span class="ft2"> is decremented.</span></div>
<div style="position:absolute;top:690;left:243"><span class="ft0"> </span></div>
<div style="position:absolute;top:666;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:694;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:713;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:729;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:729;left:90"><span class="ft3"> The </span></div>
<div style="position:absolute;top:729;left:124"><span class="ft4">peek()</span></div>
<div style="position:absolute;top:729;left:184"><span class="ft3"> Method</span></div>
<div style="position:absolute;top:729;left:248"><span class="ft0"> </span></div>
<div style="position:absolute;top:729;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:734;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:753;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:784;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:769;left:90"><span class="ft2"> The </span></div>
<div style="position:absolute;top:769;left:118"><span class="ft1">peek()</span></div>
<div style="position:absolute;top:769;left:168"><span class="ft2"> method is straightforward: it returns the value at </span></div>
<div style="position:absolute;top:769;left:469"><span class="ft1">front</span></div>
<div style="position:absolute;top:769;left:511"><span class="ft2">. Some </span></div>
<div style="position:absolute;top:786;left:90"><span class="ft2">implementations allow peeking at the rear of the array as well; such routines are called </span></div>
<div style="position:absolute;top:803;left:90"><span class="ft2">something like </span></div>
<div style="position:absolute;top:803;left:183"><span class="ft1">peekFront()</span></div>
<div style="position:absolute;top:803;left:275"><span class="ft2"> and </span></div>
<div style="position:absolute;top:803;left:305"><span class="ft1">peekRear()</span></div>
<div style="position:absolute;top:803;left:389"><span class="ft2"> or just </span></div>
<div style="position:absolute;top:803;left:434"><span class="ft1">front()</span></div>
<div style="position:absolute;top:803;left:493"><span class="ft2"> and </span></div>
<div style="position:absolute;top:803;left:524"><span class="ft1">rear()</span></div>
<div style="position:absolute;top:803;left:574"><span class="ft2">.</span></div>
<div style="position:absolute;top:800;left:578"><span class="ft0"> </span></div>
<div style="position:absolute;top:784;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:804;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:823;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:839;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:838;left:90"><span class="ft3"> The </span></div>
<div style="position:absolute;top:838;left:124"><span class="ft4">isEmpty()</span></div>
<div style="position:absolute;top:838;left:215"><span class="ft3">, </span></div>
<div style="position:absolute;top:838;left:224"><span class="ft4">isFull()</span></div>
<div style="position:absolute;top:838;left:304"><span class="ft3">, and </span></div>
<div style="position:absolute;top:838;left:347"><span class="ft4">size()</span></div>
<div style="position:absolute;top:838;left:407"><span class="ft3"> Methods</span></div>
<div style="position:absolute;top:838;left:480"><span class="ft0"> </span></div>
<div style="position:absolute;top:839;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:843;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:862;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:885;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:879;left:90"><span class="ft2"> The </span></div>
<div style="position:absolute;top:879;left:118"><span class="ft1">isEmpty()</span></div>
<div style="position:absolute;top:879;left:193"><span class="ft2">, </span></div>
<div style="position:absolute;top:879;left:201"><span class="ft1">isFull()</span></div>
<div style="position:absolute;top:879;left:267"><span class="ft2">, and </span></div>
<div style="position:absolute;top:879;left:302"><span class="ft1">size()</span></div>
<div style="position:absolute;top:879;left:352"><span class="ft2"> methods all rely on the </span></div>
<div style="position:absolute;top:879;left:500"><span class="ft1">nItems</span></div>
<div style="position:absolute;top:879;left:550"><span class="ft2"> field, </span></div>
<div style="position:absolute;top:896;left:90"><span class="ft2">respectively checking if it's 0, if it's </span></div>
<div style="position:absolute;top:896;left:304"><span class="ft1">maxSize</span></div>
<div style="position:absolute;top:896;left:362"><span class="ft2">, or returning its value.</span></div>
<div style="position:absolute;top:893;left:500"><span class="ft0"> </span></div>
<div style="position:absolute;top:885;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:897;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:916;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:931;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:932;left:90"><span class="ft3"> Implementation Without an Item Count</span></div>
<div style="position:absolute;top:932;left:396"><span class="ft0"> </span></div>
<div style="position:absolute;top:931;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:935;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:954;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:993;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:971;left:90"><span class="ft2"> The inclusion of the field </span></div>
<div style="position:absolute;top:971;left:244"><span class="ft1">nItems</span></div>
<div style="position:absolute;top:971;left:294"><span class="ft2"> in the </span></div>
<div style="position:absolute;top:971;left:336"><span class="ft1">Queue</span></div>
<div style="position:absolute;top:971;left:377"><span class="ft2"> class imposes a slight overhead on the </span></div>
<div style="position:absolute;top:988;left:90"><span class="ft1">insert()</span></div>
<div style="position:absolute;top:988;left:157"><span class="ft2"> and </span></div>
<div style="position:absolute;top:988;left:188"><span class="ft1">remove()</span></div>
<div style="position:absolute;top:988;left:254"><span class="ft2"> methods in that they must respectively increment and </span></div>
<div style="position:absolute;top:1005;left:90"><span class="ft2">decrement this variable. This may not seem like an excessive penalty, but if you're </span></div>
<div style="position:absolute;top:1021;left:90"><span class="ft2">dealing with huge numbers of insertions and deletions, it might influence performance.</span></div>
<div style="position:absolute;top:1018;left:619"><span class="ft0"> </span></div>
<div style="position:absolute;top:993;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:1021;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1040;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:1062;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1056;left:90"><span class="ft2"> Accordingly, some implementations of queues do without an item count and rely on the </span></div>
<div style="position:absolute;top:1072;left:90"><span class="ft1">front</span></div>
<div style="position:absolute;top:1072;left:132"><span class="ft2"> and </span></div>
<div style="position:absolute;top:1072;left:163"><span class="ft1">rear</span></div>
<div style="position:absolute;top:1072;left:196"><span class="ft2"> fields to figure out whether the queue is empty or full and how many </span></div>
<div style="position:absolute;top:1062;left:640"><span class="ft0">  </span></div>
<script TYPE="text/javascript">
			var currentZoom = parent.ltop.currentZoom;
			if(currentZoom != undefined)
				document.body.style.zoom=currentZoom/100;
			</script>
</body>
</html>