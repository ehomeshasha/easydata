<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0052)http://www.verypdf.com/ -->
<html>
<head>
<title>pg_0330</title>

<style>
<!-- 
select {font-size:12px;}
A:link {text-decoration: none; color: blue}
A:visited {text-decoration: none; color: purple}
A:active {text-decoration: red}
A:hover {text-decoration: underline; color:red}
-->
</style>
<script TYPE="text/javascript"> 
<!-- hide 
function killerrors()
{ 
return true; 
} 
window.onerror = killerrors; 
// --> 
</script>
<style type="text/css">
<!--
.ft0{font-style:normal;font-weight:normal;font-size:16px;font-family:Times New Roman;color:#000000;}
.ft1{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft2{font-style:normal;font-weight:bold;font-size:16px;font-family:Arial;color:#010100;}
.ft3{font-style:normal;font-weight:bold;font-size:18px;font-family:Arial;color:#800000;}
.ft4{font-style:normal;font-weight:normal;font-size:13px;font-family:Times New Roman;color:#010100;}
-->
</style>
</head>
<body vlink="#FFFFFF" link="#FFFFFF" bgcolor="#ffffff">

<script TYPE="text/javascript">
var currentpos,timer; 
function initialize() 
{ 
timer=setInterval("scrollwindow()",10);
} 
function sc(){
clearInterval(timer); 
}
function scrollwindow() 
{ 
currentpos=document.body.scrollTop; 
window.scroll(0,++currentpos); 
if (currentpos != document.body.scrollTop) 
sc();
} 
document.onmousedown=sc
document.ondblclick=initialize
</script>
<div style="position:absolute;top:0;left:0"><img width="826" height="1169" src="pg_0330.jpg" ALT=""></div>
<div style="position:absolute;top:1102;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1102;left:391"><span class="ft0"> - 330 -</span></div>
<div style="position:absolute;top:81;left:90"><span class="ft1">can't have a single child S that's black, because the black heights would be different for S </span></div>
<div style="position:absolute;top:97;left:90"><span class="ft1">and the null child. However, we know X is red, so we conclude that it's impossible for X to </span></div>
<div style="position:absolute;top:112;left:90"><span class="ft1">have a sibling unless P is red.</span></div>
<div style="position:absolute;top:109;left:274"><span class="ft0"> </span></div>
<div style="position:absolute;top:113;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:132;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:185;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:148;left:90"><span class="ft1"> Another possibility is that G, the grandparent of P, has a child U, the sibling of P and the </span></div>
<div style="position:absolute;top:164;left:90"><span class="ft1">uncle of X. Again, this would complicate any necessary rotations. However, if P is black, </span></div>
<div style="position:absolute;top:180;left:90"><span class="ft1">there's no need for rotations when inserting X, as we've seen. So let's assume P is red. </span></div>
<div style="position:absolute;top:196;left:90"><span class="ft1">Then U must also be red, otherwise the black height going from G to P would be different </span></div>
<div style="position:absolute;top:212;left:90"><span class="ft1">from that going from G to U. But a black parent with two red children is flipped on the way </span></div>
<div style="position:absolute;top:227;left:90"><span class="ft1">down, so this situation can't exist either.</span></div>
<div style="position:absolute;top:224;left:335"><span class="ft0"> </span></div>
<div style="position:absolute;top:185;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:228;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:247;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:268;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:263;left:90"><span class="ft1"> Thus the three possibilities discussed above are the only ones that can exist (except that, </span></div>
<div style="position:absolute;top:279;left:90"><span class="ft1">in Possibilities 2 and 3, X can be a right or left child and G can be a right or left child).</span></div>
<div style="position:absolute;top:276;left:613"><span class="ft0">   </span></div>
<div style="position:absolute;top:279;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:298;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:313;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:313;left:90"><span class="ft2"> What the Color Flips Accomplished</span></div>
<div style="position:absolute;top:313;left:371"><span class="ft0"> </span></div>
<div style="position:absolute;top:313;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:317;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:336;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:374;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:352;left:90"><span class="ft1"> Suppose that performing a rotation and appropriate color changes caused other </span></div>
<div style="position:absolute;top:368;left:90"><span class="ft1">violations of the red-black rules to appear further up the tree. One can imagine situations </span></div>
<div style="position:absolute;top:384;left:90"><span class="ft1">in which you would need to work your way all the way back up the tree, performing </span></div>
<div style="position:absolute;top:400;left:90"><span class="ft1">rotations and color switches, to remove rule violations.</span></div>
<div style="position:absolute;top:397;left:424"><span class="ft0"> </span></div>
<div style="position:absolute;top:374;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:400;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:419;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:457;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:435;left:90"><span class="ft1"> Fortunately, this situation can't arise. Using color flips on the way down has eliminated </span></div>
<div style="position:absolute;top:451;left:90"><span class="ft1">the situations in which a rotation could introduce any rule violations further up the tree. It </span></div>
<div style="position:absolute;top:467;left:90"><span class="ft1">ensures that one or two rotations will restore red-black correctness in the entire tree. </span></div>
<div style="position:absolute;top:483;left:90"><span class="ft1">Actually proving this is beyond the scope of this book, but such a proof is possible.</span></div>
<div style="position:absolute;top:480;left:596"><span class="ft0"> </span></div>
<div style="position:absolute;top:457;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:483;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:502;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:532;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:518;left:90"><span class="ft1"> It's the color flips on the way down that make insertion in red-black trees more efficient </span></div>
<div style="position:absolute;top:534;left:90"><span class="ft1">than in other kinds of balanced trees, such as AVL trees. They ensure that you need to </span></div>
<div style="position:absolute;top:550;left:90"><span class="ft1">pass through the tree only once, on the way down.</span></div>
<div style="position:absolute;top:547;left:401"><span class="ft0"> </span></div>
<div style="position:absolute;top:532;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:550;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:569;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:586;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:585;left:90"><span class="ft3"> Rotations on the Way Down</span></div>
<div style="position:absolute;top:587;left:338"><span class="ft0"> </span></div>
<div style="position:absolute;top:586;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:591;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:610;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:656;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:626;left:90"><span class="ft1"> Now we'll discuss the last of the three operations involved in inserting a node: making </span></div>
<div style="position:absolute;top:642;left:90"><span class="ft1">rotations on the way down to the insertion point. As we noted, although we're discussing </span></div>
<div style="position:absolute;top:658;left:90"><span class="ft1">this last, it actually takes place before the node is inserted. We've waited until now to </span></div>
<div style="position:absolute;top:674;left:90"><span class="ft1">discuss it only because it was easier to explain rotations for a just-installed node than for </span></div>
<div style="position:absolute;top:690;left:90"><span class="ft1">nodes in the middle of the tree.</span></div>
<div style="position:absolute;top:687;left:281"><span class="ft0"> </span></div>
<div style="position:absolute;top:656;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:690;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:709;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:739;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:725;left:90"><span class="ft1"> During the discussion of color flips during the insertion process, we noted that it's </span></div>
<div style="position:absolute;top:741;left:90"><span class="ft1">possible for a color flip to cause a violation of Rule 3 (a parent and child can't both be </span></div>
<div style="position:absolute;top:757;left:90"><span class="ft1">red). We also noted that a rotation can fix this violation.</span></div>
<div style="position:absolute;top:754;left:428"><span class="ft0"> </span></div>
<div style="position:absolute;top:739;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:757;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:776;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:814;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:792;left:90"><span class="ft1"> There are two possibilities, corresponding to Possibility 2 and Possibility 3 during the </span></div>
<div style="position:absolute;top:808;left:90"><span class="ft1">insertion phase described above. The offending node can be an outside grandchild or it </span></div>
<div style="position:absolute;top:824;left:90"><span class="ft1">can be an inside grandchild. (In the situation corresponding to Possibility 1, no action is </span></div>
<div style="position:absolute;top:840;left:90"><span class="ft1">required.)</span></div>
<div style="position:absolute;top:837;left:150"><span class="ft0"> </span></div>
<div style="position:absolute;top:814;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:840;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:859;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:875;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:875;left:90"><span class="ft2"> Outside Grandchild</span></div>
<div style="position:absolute;top:875;left:245"><span class="ft0"> </span></div>
<div style="position:absolute;top:875;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:878;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:898;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:927;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:913;left:90"><span class="ft1"> First we'll examine an example in which the offending node is an outside grandchild. By </span></div>
<div style="position:absolute;top:929;left:90"><span class="ft1">&quot;offending node&quot; we mean the child in the parent-child pair that caused the red-red </span></div>
<div style="position:absolute;top:945;left:90"><span class="ft1">conflict.</span></div>
<div style="position:absolute;top:942;left:137"><span class="ft0"> </span></div>
<div style="position:absolute;top:927;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:946;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:965;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:986;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:980;left:90"><span class="ft1"> Start a new tree with the 50 node, and insert the following nodes: 25, 75, 12, 37, 6, and </span></div>
<div style="position:absolute;top:996;left:90"><span class="ft1">18. You'll need to do color flips when inserting 12 and 6.</span></div>
<div style="position:absolute;top:993;left:434"><span class="ft0"> </span></div>
<div style="position:absolute;top:986;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:997;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1016;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:1046;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1032;left:90"><span class="ft1"> Now try to insert a node with the value 3. You'll be told you must flip 12 and its children 6 </span></div>
<div style="position:absolute;top:1048;left:90"><span class="ft1">and 18. You push the Flip button. The flip is carried out, but now the message says </span></div>
<div style="position:absolute;top:1064;left:90"><span class="ft4">Error: parent and child are both red</span></div>
<div style="position:absolute;top:1064;left:390"><span class="ft1">, referring to 25 and its child 12. The </span></div>
<div style="position:absolute;top:1046;left:640"><span class="ft0">  </span></div>
<script TYPE="text/javascript">
			var currentZoom = parent.ltop.currentZoom;
			if(currentZoom != undefined)
				document.body.style.zoom=currentZoom/100;
			</script>
</body>
</html>