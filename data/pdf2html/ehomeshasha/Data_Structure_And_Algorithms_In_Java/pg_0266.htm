<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0052)http://www.verypdf.com/ -->
<html>
<head>
<title>pg_0266</title>

<style>
<!-- 
select {font-size:12px;}
A:link {text-decoration: none; color: blue}
A:visited {text-decoration: none; color: purple}
A:active {text-decoration: red}
A:hover {text-decoration: underline; color:red}
-->
</style>
<script TYPE="text/javascript"> 
<!-- hide 
function killerrors()
{ 
return true; 
} 
window.onerror = killerrors; 
// --> 
</script>
<style type="text/css">
<!--
.ft0{font-style:normal;font-weight:normal;font-size:16px;font-family:Times New Roman;color:#000000;}
.ft1{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft2{font-style:normal;font-weight:normal;font-size:10px;font-family:Arial;color:#ff00ff;}
.ft3{font-style:normal;font-weight:bold;font-size:16px;font-family:Arial;color:#010100;}
.ft4{font-style:normal;font-weight:normal;font-size:13px;font-family:Times New Roman;color:#010100;}
.ft5{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#008000;}
.ft6{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#000000;}
.ft7{font-style:normal;font-weight:normal;font-size:13px;font-family:Times New Roman;color:#000000;}
.ft8{font-style:normal;font-weight:bold;font-size:18px;font-family:Arial;color:#800000;}
.ft9{font-style:normal;font-weight:normal;font-size:11px;font-family:Times New Roman;color:#000000;}
-->
</style>
</head>
<body vlink="#FFFFFF" link="#FFFFFF" bgcolor="#ffffff">

<script TYPE="text/javascript">
var currentpos,timer; 
function initialize() 
{ 
timer=setInterval("scrollwindow()",10);
} 
function sc(){
clearInterval(timer); 
}
function scrollwindow() 
{ 
currentpos=document.body.scrollTop; 
window.scroll(0,++currentpos); 
if (currentpos != document.body.scrollTop) 
sc();
} 
document.onmousedown=sc
document.ondblclick=initialize
</script>
<div style="position:absolute;top:0;left:0"><img width="826" height="1169" src="pg_0266.jpg" ALT=""></div>
<div style="position:absolute;top:1102;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1102;left:391"><span class="ft0"> - 266 -</span></div>
<div style="position:absolute;top:118;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:81;left:90"><span class="ft1"> The number of levels in the table shows that with 12 data items, the machine stack needs </span></div>
<div style="position:absolute;top:97;left:90"><span class="ft1">enough space for 5 sets of arguments and return values; one for each recursion level. </span></div>
<div style="position:absolute;top:112;left:90"><span class="ft1">This is, as we'll see later, somewhat greater than the logarithm to the base 2 of the </span></div>
<div style="position:absolute;top:128;left:90"><span class="ft1">number of items: log</span></div>
<div style="position:absolute;top:131;left:216"><span class="ft2">2</span></div>
<div style="position:absolute;top:128;left:222"><span class="ft1">N. The size of the machine stack is determined by your particular </span></div>
<div style="position:absolute;top:144;left:90"><span class="ft1">system. Sorting very large numbers of data items using recursive procedures may cause </span></div>
<div style="position:absolute;top:160;left:90"><span class="ft1">this stack to overflow, leading to memory errors.</span></div>
<div style="position:absolute;top:157;left:385"><span class="ft0"> </span></div>
<div style="position:absolute;top:118;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:161;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:180;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:195;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:195;left:90"><span class="ft3"> Things to Notice</span></div>
<div style="position:absolute;top:195;left:221"><span class="ft0"> </span></div>
<div style="position:absolute;top:195;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:199;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:218;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:233;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:234;left:90"><span class="ft1"> Here are some details you may notice as you run the quickSort1 Workshop applet.</span></div>
<div style="position:absolute;top:231;left:597"><span class="ft0">   </span></div>
<div style="position:absolute;top:237;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:256;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:311;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:272;left:90"><span class="ft1"> You might think that a powerful algorithm like quicksort would not be able to handle </span></div>
<div style="position:absolute;top:288;left:90"><span class="ft1">subarrays as small as 2 or 3 items. However, this version of the quicksort algorithm is </span></div>
<div style="position:absolute;top:305;left:90"><span class="ft1">quite capable of sorting such small subarrays; </span></div>
<div style="position:absolute;top:305;left:376"><span class="ft4">leftScan</span></div>
<div style="position:absolute;top:305;left:443"><span class="ft1"> and </span></div>
<div style="position:absolute;top:305;left:473"><span class="ft4">rightScan</span></div>
<div style="position:absolute;top:305;left:548"><span class="ft1"> just don't go </span></div>
<div style="position:absolute;top:321;left:90"><span class="ft1">very far before they meet. For this reason we don't need to use a different sorting </span></div>
<div style="position:absolute;top:337;left:90"><span class="ft1">scheme for small subarrays. (Although, as we'll see later, handling small subarrays </span></div>
<div style="position:absolute;top:353;left:90"><span class="ft1">differently may have advantages.)</span></div>
<div style="position:absolute;top:350;left:299"><span class="ft0"> </span></div>
<div style="position:absolute;top:311;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:353;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:372;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:437;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:389;left:90"><span class="ft1"> At the end of each scan, the </span></div>
<div style="position:absolute;top:389;left:267"><span class="ft4">leftScan</span></div>
<div style="position:absolute;top:389;left:334"><span class="ft1"> variable ends up pointing to the partition¡ªthat is, </span></div>
<div style="position:absolute;top:406;left:90"><span class="ft1">the left element of the right subarray. The pivot is then swapped with the partition to put </span></div>
<div style="position:absolute;top:422;left:90"><span class="ft1">the pivot in its proper place, as we've seen. As we noted, in steps 3 and 9 of </span></div>
<div style="position:absolute;top:422;left:561"><span class="ft5">Figure 7.12</span></div>
<div style="position:absolute;top:422;left:631"><span class="ft6">, </span></div>
<div style="position:absolute;top:438;left:90"><span class="ft7">leftScan</span></div>
<div style="position:absolute;top:438;left:157"><span class="ft6"> ends up pointing to the pivot itself, so the swap has no effect. This may seem </span></div>
<div style="position:absolute;top:455;left:90"><span class="ft6">like a wasted swap; you might decide that </span></div>
<div style="position:absolute;top:455;left:350"><span class="ft7">leftScan</span></div>
<div style="position:absolute;top:455;left:417"><span class="ft6"> should stop one bar sooner. </span></div>
<div style="position:absolute;top:472;left:90"><span class="ft6">However, it's important that </span></div>
<div style="position:absolute;top:472;left:262"><span class="ft7">leftScan</span></div>
<div style="position:absolute;top:472;left:329"><span class="ft6"> scan all the way to the pivot; otherwise, a swap </span></div>
<div style="position:absolute;top:489;left:90"><span class="ft6">would unsort the pivot and the partition.</span></div>
<div style="position:absolute;top:486;left:333"><span class="ft0"> </span></div>
<div style="position:absolute;top:437;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:489;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:508;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:556;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:525;left:90"><span class="ft1"> Be aware that </span></div>
<div style="position:absolute;top:525;left:180"><span class="ft4">leftScan</span></div>
<div style="position:absolute;top:525;left:246"><span class="ft1"> and </span></div>
<div style="position:absolute;top:525;left:277"><span class="ft4">rightScan</span></div>
<div style="position:absolute;top:525;left:352"><span class="ft1"> start at </span></div>
<div style="position:absolute;top:525;left:402"><span class="ft4">left-1</span></div>
<div style="position:absolute;top:525;left:452"><span class="ft1"> and </span></div>
<div style="position:absolute;top:525;left:483"><span class="ft4">right</span></div>
<div style="position:absolute;top:525;left:525"><span class="ft1">. This may look </span></div>
<div style="position:absolute;top:542;left:90"><span class="ft1">peculiar on the display, especially if </span></div>
<div style="position:absolute;top:542;left:312"><span class="ft4">left</span></div>
<div style="position:absolute;top:542;left:345"><span class="ft1"> is 0; then </span></div>
<div style="position:absolute;top:542;left:409"><span class="ft4">leftScan</span></div>
<div style="position:absolute;top:542;left:476"><span class="ft1"> will start at ¨C1. Similarly </span></div>
<div style="position:absolute;top:559;left:90"><span class="ft4">rightScan</span></div>
<div style="position:absolute;top:559;left:165"><span class="ft1"> initially points to the pivot, which is not included in the partitioning process. </span></div>
<div style="position:absolute;top:576;left:90"><span class="ft1">These pointers start outside the subarray being partitioned, because they will be </span></div>
<div style="position:absolute;top:592;left:90"><span class="ft1">incremented and decremented respectively before they're used the first time.</span></div>
<div style="position:absolute;top:589;left:561"><span class="ft0"> </span></div>
<div style="position:absolute;top:556;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:592;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:611;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:675;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:627;left:90"><span class="ft1"> The applet shows ranges as numbers in parentheses; for example, (2¨C5) means the </span></div>
<div style="position:absolute;top:643;left:90"><span class="ft1">subarray from index 2 to index 5. The range given in some of the messages may be </span></div>
<div style="position:absolute;top:659;left:90"><span class="ft1">negative: from a higher number to a lower one: </span></div>
<div style="position:absolute;top:659;left:382"><span class="ft4">Array partitioned; left (7¨C6), </span></div>
<div style="position:absolute;top:677;left:90"><span class="ft4">right (8¨C8)</span></div>
<div style="position:absolute;top:677;left:182"><span class="ft1">, for example. The (8¨C8) range means a single cell (8), but what does (7¨C</span></div>
<div style="position:absolute;top:694;left:90"><span class="ft1">6) mean. This range isn't real; it simply reflects the values that </span></div>
<div style="position:absolute;top:694;left:478"><span class="ft4">left</span></div>
<div style="position:absolute;top:694;left:511"><span class="ft1"> and </span></div>
<div style="position:absolute;top:694;left:542"><span class="ft4">right</span></div>
<div style="position:absolute;top:694;left:584"><span class="ft1">, the </span></div>
<div style="position:absolute;top:711;left:90"><span class="ft1">arguments to </span></div>
<div style="position:absolute;top:711;left:175"><span class="ft4">recQuickSort()</span></div>
<div style="position:absolute;top:711;left:292"><span class="ft1">, have when this method is called. Here's the code in </span></div>
<div style="position:absolute;top:728;left:90"><span class="ft1">question:</span></div>
<div style="position:absolute;top:725;left:147"><span class="ft0"> </span></div>
<div style="position:absolute;top:675;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:728;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:747;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:762;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:762;left:113"><span class="ft4"> int partition = partitionIt(left, right, pivot);</span></div>
<div style="position:absolute;top:759;left:513"><span class="ft0"> </span></div>
<div style="position:absolute;top:762;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:766;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:782;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:781;left:113"><span class="ft4"> recQuickSort(left, partition-1);   // sort left side</span></div>
<div style="position:absolute;top:778;left:546"><span class="ft0"> </span></div>
<div style="position:absolute;top:782;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:785;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:801;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:800;left:113"><span class="ft4"> recQuickSort(partition+1, right);  // sort right side</span></div>
<div style="position:absolute;top:797;left:555"><span class="ft0"> </span></div>
<div style="position:absolute;top:801;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:805;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:824;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:880;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:840;left:90"><span class="ft1"> If </span></div>
<div style="position:absolute;top:840;left:102"><span class="ft4">partitionIt()</span></div>
<div style="position:absolute;top:840;left:210"><span class="ft1"> is called with </span></div>
<div style="position:absolute;top:840;left:297"><span class="ft4">left</span></div>
<div style="position:absolute;top:840;left:330"><span class="ft1"> = 7 and </span></div>
<div style="position:absolute;top:840;left:384"><span class="ft4">right</span></div>
<div style="position:absolute;top:840;left:426"><span class="ft1"> = 8, for example, and happens to </span></div>
<div style="position:absolute;top:857;left:90"><span class="ft1">return 7 as the partition, then the range supplied in the first call to </span></div>
<div style="position:absolute;top:857;left:494"><span class="ft4">recQuickSort()</span></div>
<div style="position:absolute;top:857;left:611"><span class="ft1"> will </span></div>
<div style="position:absolute;top:874;left:90"><span class="ft1">be (7¨C6) and the range to the second will be (8¨C8). This is normal. The base case in </span></div>
<div style="position:absolute;top:890;left:90"><span class="ft4">recQuickSort()</span></div>
<div style="position:absolute;top:890;left:207"><span class="ft1"> is activated by array sizes less than 1 as well as by 1, so it will return </span></div>
<div style="position:absolute;top:907;left:90"><span class="ft1">immediately for negative ranges. Negative ranges are not shown in</span></div>
<div style="position:absolute;top:907;left:502"><span class="ft5"> Figure 7.12</span></div>
<div style="position:absolute;top:907;left:576"><span class="ft6">, although </span></div>
<div style="position:absolute;top:924;left:90"><span class="ft6">they do cause (brief) calls to </span></div>
<div style="position:absolute;top:924;left:268"><span class="ft7">recQuickSort()</span></div>
<div style="position:absolute;top:924;left:384"><span class="ft6">.</span></div>
<div style="position:absolute;top:921;left:388"><span class="ft0"> </span></div>
<div style="position:absolute;top:880;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:924;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:943;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:960;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:959;left:90"><span class="ft8"> Degenerates to O(N</span></div>
<div style="position:absolute;top:958;left:265"><span class="ft9">2</span></div>
<div style="position:absolute;top:959;left:271"><span class="ft8">) Performance</span></div>
<div style="position:absolute;top:961;left:397"><span class="ft0"> </span></div>
<div style="position:absolute;top:960;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:965;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:984;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:1022;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1000;left:90"><span class="ft1"> If you use the quickSort1 Workshop applet to sort 100 inversely sorted bars, you'll see </span></div>
<div style="position:absolute;top:1016;left:90"><span class="ft1">that the algorithm runs much more slowly and that many more dotted horizontal lines are </span></div>
<div style="position:absolute;top:1032;left:90"><span class="ft1">generated, indicating more and larger subarrays are being partitioned. What's happening </span></div>
<div style="position:absolute;top:1048;left:90"><span class="ft1">here.</span></div>
<div style="position:absolute;top:1045;left:126"><span class="ft0"> </span></div>
<div style="position:absolute;top:1022;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:1048;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1067;left:80"><span class="ft0"> </span></div>
<script TYPE="text/javascript">
			var currentZoom = parent.ltop.currentZoom;
			if(currentZoom != undefined)
				document.body.style.zoom=currentZoom/100;
			</script>
</body>
</html>