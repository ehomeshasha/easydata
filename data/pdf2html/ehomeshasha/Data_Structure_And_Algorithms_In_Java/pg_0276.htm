<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0052)http://www.verypdf.com/ -->
<html>
<head>
<title>pg_0276</title>

<style>
<!-- 
select {font-size:12px;}
A:link {text-decoration: none; color: blue}
A:visited {text-decoration: none; color: purple}
A:active {text-decoration: red}
A:hover {text-decoration: underline; color:red}
-->
</style>
<script TYPE="text/javascript"> 
<!-- hide 
function killerrors()
{ 
return true; 
} 
window.onerror = killerrors; 
// --> 
</script>
<style type="text/css">
<!--
.ft0{font-style:normal;font-weight:normal;font-size:16px;font-family:Times New Roman;color:#000000;}
.ft1{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft2{font-style:normal;font-weight:bold;font-size:18px;font-family:Arial;color:#800000;}
.ft3{font-style:normal;font-weight:normal;font-size:13px;font-family:Times New Roman;color:#010100;}
.ft4{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#008000;}
.ft5{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#000000;}
.ft6{font-style:normal;font-weight:normal;font-size:10px;font-family:Arial;color:#ff00ff;}
.ft7{font-style:normal;font-weight:normal;font-size:10px;font-family:Arial;color:#010100;}
-->
</style>
</head>
<body vlink="#FFFFFF" link="#FFFFFF" bgcolor="#ffffff">

<script TYPE="text/javascript">
var currentpos,timer; 
function initialize() 
{ 
timer=setInterval("scrollwindow()",10);
} 
function sc(){
clearInterval(timer); 
}
function scrollwindow() 
{ 
currentpos=document.body.scrollTop; 
window.scroll(0,++currentpos); 
if (currentpos != document.body.scrollTop) 
sc();
} 
document.onmousedown=sc
document.ondblclick=initialize
</script>
<div style="position:absolute;top:0;left:0"><img width="826" height="1169" src="pg_0276.jpg" ALT=""></div>
<div style="position:absolute;top:1102;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1102;left:391"><span class="ft0"> - 276 -</span></div>
<div style="position:absolute;top:84;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:138;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:100;left:90"><span class="ft1"> Another option is to completely quicksort the array without bothering to sort partitions </span></div>
<div style="position:absolute;top:116;left:90"><span class="ft1">smaller than the cutoff. When quicksort is finished, the array will be almost sorted. You </span></div>
<div style="position:absolute;top:132;left:90"><span class="ft1">then apply the insertion sort to the entire array. The insertion sort is supposed to operate </span></div>
<div style="position:absolute;top:148;left:90"><span class="ft1">efficiently on almost-sorted arrays, and this approach is recommended by some experts, </span></div>
<div style="position:absolute;top:164;left:90"><span class="ft1">but on our installation it runs very slowly. The insertion sort appears to be happier doing a </span></div>
<div style="position:absolute;top:180;left:90"><span class="ft1">lot of small sorts than one big one.</span></div>
<div style="position:absolute;top:177;left:302"><span class="ft0"> </span></div>
<div style="position:absolute;top:138;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:180;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:199;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:215;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:214;left:90"><span class="ft2"> Removing Recursion</span></div>
<div style="position:absolute;top:216;left:278"><span class="ft0"> </span></div>
<div style="position:absolute;top:215;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:220;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:240;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:310;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:255;left:90"><span class="ft1"> Another embellishment recommended by many writers is removing recursion from the </span></div>
<div style="position:absolute;top:271;left:90"><span class="ft1">quicksort algorithm. This involves rewriting the algorithm to store deferred subarray </span></div>
<div style="position:absolute;top:288;left:90"><span class="ft1">bounds (</span></div>
<div style="position:absolute;top:288;left:144"><span class="ft3">left</span></div>
<div style="position:absolute;top:288;left:178"><span class="ft1"> and </span></div>
<div style="position:absolute;top:288;left:209"><span class="ft3">right</span></div>
<div style="position:absolute;top:288;left:250"><span class="ft1">) on a stack, and using a loop instead of recursion to oversee </span></div>
<div style="position:absolute;top:305;left:90"><span class="ft1">the partitioning of smaller and smaller subarrays. The idea in doing this is to speed up the </span></div>
<div style="position:absolute;top:321;left:90"><span class="ft1">program by removing method calls. However, this idea arose with older compilers and </span></div>
<div style="position:absolute;top:337;left:90"><span class="ft1">computer architectures, which imposed a large time penalty for each method call. It's not </span></div>
<div style="position:absolute;top:352;left:90"><span class="ft1">clear that removing recursion is much of an improvement for modern systems, which </span></div>
<div style="position:absolute;top:368;left:90"><span class="ft1">handle method calls more efficiently.</span></div>
<div style="position:absolute;top:365;left:315"><span class="ft0"> </span></div>
<div style="position:absolute;top:310;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:369;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:388;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:404;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:403;left:90"><span class="ft2"> Efficiency of Quicksort</span></div>
<div style="position:absolute;top:405;left:295"><span class="ft0"> </span></div>
<div style="position:absolute;top:404;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:409;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:428;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:474;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:444;left:90"><span class="ft1"> We've said that quicksort operates in O(N*logN) time. As we saw in the discussion of </span></div>
<div style="position:absolute;top:460;left:90"><span class="ft1">mergesort in</span></div>
<div style="position:absolute;top:460;left:168"><span class="ft4"> Chapter 6</span></div>
<div style="position:absolute;top:460;left:232"><span class="ft5">, this is generally true of the divide-and-conquer algorithms, in </span></div>
<div style="position:absolute;top:476;left:90"><span class="ft5">which a recursive method divides a range of items into two groups and then calls itself to </span></div>
<div style="position:absolute;top:492;left:90"><span class="ft5">handle each group. In this situation the logarithm actually has a base of 2: the running </span></div>
<div style="position:absolute;top:508;left:90"><span class="ft5">time is proportional to N*log</span></div>
<div style="position:absolute;top:511;left:261"><span class="ft6">2</span></div>
<div style="position:absolute;top:508;left:267"><span class="ft5">N.</span></div>
<div style="position:absolute;top:505;left:281"><span class="ft0"> </span></div>
<div style="position:absolute;top:474;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:508;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:527;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:557;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:543;left:90"><span class="ft1"> You can get an idea of the validity of this N*log</span></div>
<div style="position:absolute;top:546;left:378"><span class="ft7">2</span></div>
<div style="position:absolute;top:543;left:383"><span class="ft1">N running time for quicksort by running </span></div>
<div style="position:absolute;top:559;left:90"><span class="ft1">one of the quickSort Workshop applets with 100 random bars and examining the resulting </span></div>
<div style="position:absolute;top:575;left:90"><span class="ft1">dotted horizontal lines.</span></div>
<div style="position:absolute;top:572;left:229"><span class="ft0"> </span></div>
<div style="position:absolute;top:557;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:575;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:594;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:649;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:610;left:90"><span class="ft1"> Each dotted line represents an array or subarray being partitioned: the pointers </span></div>
<div style="position:absolute;top:627;left:90"><span class="ft3">leftScan</span></div>
<div style="position:absolute;top:627;left:157"><span class="ft1"> and </span></div>
<div style="position:absolute;top:627;left:188"><span class="ft3">rightScan</span></div>
<div style="position:absolute;top:627;left:263"><span class="ft1"> moving toward each other, comparing each data items and </span></div>
<div style="position:absolute;top:644;left:90"><span class="ft1">swapping when appropriate. We saw in the section on </span></div>
<div style="position:absolute;top:644;left:426"><span class="ft4">partitioning</span></div>
<div style="position:absolute;top:644;left:494"><span class="ft5"> that a single partition </span></div>
<div style="position:absolute;top:660;left:90"><span class="ft5">runs in O(N) time. This tells us that the total length of all the lines is proportional to the </span></div>
<div style="position:absolute;top:676;left:90"><span class="ft5">running time of quicksort. But how long are all the lines. It would be tedious to measure </span></div>
<div style="position:absolute;top:691;left:90"><span class="ft5">them with a ruler on the screen, but we can visualize them a different way.</span></div>
<div style="position:absolute;top:688;left:546"><span class="ft0"> </span></div>
<div style="position:absolute;top:649;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:692;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:711;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:756;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:727;left:90"><span class="ft1"> There is always one line that runs the entire width of the graph, spanning N bars. This </span></div>
<div style="position:absolute;top:743;left:90"><span class="ft1">results from the first partition. There will also be two lines (one below and one above the </span></div>
<div style="position:absolute;top:759;left:90"><span class="ft1">first line) that have an average length of N/2 bars; together they are again N bars long. </span></div>
<div style="position:absolute;top:775;left:90"><span class="ft1">Then there will be four lines with an average length of N/4 that again total N bars, then 8 </span></div>
<div style="position:absolute;top:791;left:90"><span class="ft1">lines, 16, and so on. Figure 7.15 shows how this looks for 1, 2, 4, and 8 lines.</span></div>
<div style="position:absolute;top:788;left:564"><span class="ft0"> </span></div>
<div style="position:absolute;top:756;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:791;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:810;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:942;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1063;left:423"><span class="ft0">  </span></div>
<div style="position:absolute;top:942;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:1063;left:79"><span class="ft0"> </span></div>
<script TYPE="text/javascript">
			var currentZoom = parent.ltop.currentZoom;
			if(currentZoom != undefined)
				document.body.style.zoom=currentZoom/100;
			</script>
</body>
</html>