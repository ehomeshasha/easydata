<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0052)http://www.verypdf.com/ -->
<html>
<head>
<title>pg_0313</title>

<style>
<!-- 
select {font-size:12px;}
A:link {text-decoration: none; color: blue}
A:visited {text-decoration: none; color: purple}
A:active {text-decoration: red}
A:hover {text-decoration: underline; color:red}
-->
</style>
<script TYPE="text/javascript"> 
<!-- hide 
function killerrors()
{ 
return true; 
} 
window.onerror = killerrors; 
// --> 
</script>
<style type="text/css">
<!--
.ft0{font-style:normal;font-weight:normal;font-size:16px;font-family:Times New Roman;color:#000000;}
.ft1{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft2{font-style:normal;font-weight:bold;font-size:18px;font-family:Arial;color:#800000;}
.ft3{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#008000;}
.ft4{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#000000;}
.ft5{font-style:normal;font-weight:bold;font-size:13px;font-family:Arial;color:#010100;}
.ft6{font-style:normal;font-weight:normal;font-size:13px;font-family:Times New Roman;color:#000000;}
-->
</style>
</head>
<body vlink="#FFFFFF" link="#FFFFFF" bgcolor="#ffffff">

<script TYPE="text/javascript">
var currentpos,timer; 
function initialize() 
{ 
timer=setInterval("scrollwindow()",10);
} 
function sc(){
clearInterval(timer); 
}
function scrollwindow() 
{ 
currentpos=document.body.scrollTop; 
window.scroll(0,++currentpos); 
if (currentpos != document.body.scrollTop) 
sc();
} 
document.onmousedown=sc
document.ondblclick=initialize
</script>
<div style="position:absolute;top:0;left:0"><img width="826" height="1169" src="pg_0313.jpg" ALT=""></div>
<div style="position:absolute;top:1102;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1102;left:391"><span class="ft0"> - 313 -</span></div>
<div style="position:absolute;top:110;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:81;left:90"><span class="ft1"> The nodes arrange themselves in a line with no branches. Because each node is larger </span></div>
<div style="position:absolute;top:97;left:90"><span class="ft1">than the previously inserted one, every node is  a right child, so all the nodes are on one </span></div>
<div style="position:absolute;top:112;left:90"><span class="ft1">side of the root. The tree is maximally unbalanced. If you inserted items in descending </span></div>
<div style="position:absolute;top:128;left:90"><span class="ft1">order, every node would be the left child of its parent; the tree would be unbalanced on </span></div>
<div style="position:absolute;top:144;left:90"><span class="ft1">the other side.</span></div>
<div style="position:absolute;top:141;left:178"><span class="ft0"> </span></div>
<div style="position:absolute;top:110;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:145;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:164;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:180;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:179;left:90"><span class="ft2"> Degenerates to O(N)</span></div>
<div style="position:absolute;top:181;left:272"><span class="ft0"> </span></div>
<div style="position:absolute;top:180;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:185;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:204;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:274;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:220;left:90"><span class="ft1"> When there are no branches, the tree becomes, in effect, a linked list. The arrangement </span></div>
<div style="position:absolute;top:236;left:90"><span class="ft1">of data is one-dimensional instead of two-dimensional. Unfortunately, as with a linked list, </span></div>
<div style="position:absolute;top:252;left:90"><span class="ft1">you must now search through (on the average) half the items to find the one you're </span></div>
<div style="position:absolute;top:268;left:90"><span class="ft1">looking for. In this situation the speed of searching is reduced to O(N), instead of O(logN) </span></div>
<div style="position:absolute;top:284;left:90"><span class="ft1">as it is for a balanced tree. Searching through 10,000 items in such an unbalanced tree </span></div>
<div style="position:absolute;top:300;left:90"><span class="ft1">would require an average of 5,000 comparisons, whereas for a balanced tree with </span></div>
<div style="position:absolute;top:316;left:90"><span class="ft1">random insertions it requires only 14. For presorted data you might just as well use a </span></div>
<div style="position:absolute;top:332;left:90"><span class="ft1">linked list in the first place.</span></div>
<div style="position:absolute;top:329;left:252"><span class="ft0"> </span></div>
<div style="position:absolute;top:274;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:332;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:351;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:389;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:367;left:90"><span class="ft1"> Data that's only partly sorted will generate trees that are only partly unbalanced. If you </span></div>
<div style="position:absolute;top:383;left:90"><span class="ft1">use the Tree Workshop applet from </span></div>
<div style="position:absolute;top:383;left:312"><span class="ft3">Chapter 8</span></div>
<div style="position:absolute;top:383;left:373"><span class="ft4"> to attempt to generate trees with 31 </span></div>
<div style="position:absolute;top:399;left:90"><span class="ft4">nodes, you'll see that some of them are more unbalanced than others, as shown in </span></div>
<div style="position:absolute;top:415;left:90"><span class="ft4">Figure 9.2.</span></div>
<div style="position:absolute;top:412;left:157"><span class="ft0"> </span></div>
<div style="position:absolute;top:389;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:415;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:434;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:540;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:633;left:381"><span class="ft0">  </span></div>
<div style="position:absolute;top:540;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:633;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:652;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:668;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:668;left:136"><span class="ft5"> Figure 9.2:  A partially unbalanced tree</span></div>
<div style="position:absolute;top:665;left:378"><span class="ft0"> </span></div>
<div style="position:absolute;top:668;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:691;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:689;left:136"><span class="ft6">  </span></div>
<div style="position:absolute;top:689;left:640"><span class="ft6">  </span></div>
<div style="position:absolute;top:691;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:710;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:732;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:726;left:90"><span class="ft1"> Although not as bad as a maximally unbalanced tree, this situation is not optimal for </span></div>
<div style="position:absolute;top:742;left:90"><span class="ft1">searching times.</span></div>
<div style="position:absolute;top:739;left:191"><span class="ft0"> </span></div>
<div style="position:absolute;top:732;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:742;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:761;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:807;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:777;left:90"><span class="ft1"> In the Tree Workshop applet, trees can become partially unbalanced, even with randomly </span></div>
<div style="position:absolute;top:793;left:90"><span class="ft1">generated data, because the amount of data is so small that even a short run of ordered </span></div>
<div style="position:absolute;top:809;left:90"><span class="ft1">numbers will have a big effect on the tree. Also, a very small or very large key value can </span></div>
<div style="position:absolute;top:825;left:90"><span class="ft1">cause an unbalanced tree by not allowing the insertion of many nodes on one side or the </span></div>
<div style="position:absolute;top:841;left:90"><span class="ft1">other. A root of 3, for example, allows only two more nodes to be inserted to its left.</span></div>
<div style="position:absolute;top:838;left:600"><span class="ft0"> </span></div>
<div style="position:absolute;top:807;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:841;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:860;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:898;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:876;left:90"><span class="ft1"> With a realistic amount of random data it's not likely a tree would become seriously </span></div>
<div style="position:absolute;top:892;left:90"><span class="ft1">unbalanced. However, there may be runs of sorted data that will partially unbalance a </span></div>
<div style="position:absolute;top:908;left:90"><span class="ft1">tree. Searching partially unbalanced trees will take time somewhere between O(N) and </span></div>
<div style="position:absolute;top:924;left:90"><span class="ft1">O(logN), depending on how badly the tree is unbalanced.</span></div>
<div style="position:absolute;top:921;left:442"><span class="ft0"> </span></div>
<div style="position:absolute;top:898;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:924;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:943;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:960;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:959;left:90"><span class="ft2"> Balance to the Rescue</span></div>
<div style="position:absolute;top:961;left:290"><span class="ft0"> </span></div>
<div style="position:absolute;top:960;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:965;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:984;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:1022;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1000;left:90"><span class="ft1"> To guarantee the quick O(log N) search times a tree is capable of, we need to ensure </span></div>
<div style="position:absolute;top:1016;left:90"><span class="ft1">that our tree is always balanced (or at least almost balanced). This means that each node </span></div>
<div style="position:absolute;top:1032;left:90"><span class="ft1">in a tree needs to have roughly the same number of descendents on its left side as it has </span></div>
<div style="position:absolute;top:1048;left:90"><span class="ft1">on its right.</span></div>
<div style="position:absolute;top:1045;left:158"><span class="ft0"> </span></div>
<div style="position:absolute;top:1022;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:1048;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1067;left:80"><span class="ft0"> </span></div>
<script TYPE="text/javascript">
			var currentZoom = parent.ltop.currentZoom;
			if(currentZoom != undefined)
				document.body.style.zoom=currentZoom/100;
			</script>
</body>
</html>