<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0052)http://www.verypdf.com/ -->
<html>
<head>
<title>pg_0422</title>

<style>
<!-- 
select {font-size:12px;}
A:link {text-decoration: none; color: blue}
A:visited {text-decoration: none; color: purple}
A:active {text-decoration: red}
A:hover {text-decoration: underline; color:red}
-->
</style>
<script TYPE="text/javascript"> 
<!-- hide 
function killerrors()
{ 
return true; 
} 
window.onerror = killerrors; 
// --> 
</script>
<style type="text/css">
<!--
.ft0{font-style:normal;font-weight:normal;font-size:16px;font-family:Times New Roman;color:#000000;}
.ft1{font-style:normal;font-weight:normal;font-size:13px;font-family:Times New Roman;color:#010100;}
.ft2{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft3{font-style:normal;font-weight:bold;font-size:18px;font-family:Arial;color:#800000;}
.ft4{font-style:normal;font-weight:bold;font-size:18px;font-family:Times New Roman;color:#800000;}
.ft5{font-style:normal;font-weight:bold;font-size:13px;font-family:Arial;color:#800000;}
-->
</style>
</head>
<body vlink="#FFFFFF" link="#FFFFFF" bgcolor="#ffffff">

<script TYPE="text/javascript">
var currentpos,timer; 
function initialize() 
{ 
timer=setInterval("scrollwindow()",10);
} 
function sc(){
clearInterval(timer); 
}
function scrollwindow() 
{ 
currentpos=document.body.scrollTop; 
window.scroll(0,++currentpos); 
if (currentpos != document.body.scrollTop) 
sc();
} 
document.onmousedown=sc
document.ondblclick=initialize
</script>
<div style="position:absolute;top:0;left:0"><img width="826" height="1169" src="pg_0422.jpg" ALT=""></div>
<div style="position:absolute;top:1102;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1102;left:391"><span class="ft0"> - 422 -</span></div>
<div style="position:absolute;top:84;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:99;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:99;left:113"><span class="ft1">    }  // end change()</span></div>
<div style="position:absolute;top:96;left:288"><span class="ft0"> </span></div>
<div style="position:absolute;top:99;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:103;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:122;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:153;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:138;left:90"><span class="ft2"> This routine first checks that the index given in the first argument is valid, and if so, </span></div>
<div style="position:absolute;top:155;left:90"><span class="ft2">changes the </span></div>
<div style="position:absolute;top:155;left:170"><span class="ft1">iData</span></div>
<div style="position:absolute;top:155;left:211"><span class="ft2"> field of the node at that index to the value specified as the second </span></div>
<div style="position:absolute;top:171;left:90"><span class="ft2">argument.</span></div>
<div style="position:absolute;top:168;left:153"><span class="ft0"> </span></div>
<div style="position:absolute;top:153;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:171;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:190;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:212;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:206;left:90"><span class="ft2"> Then, if the priority has been raised, the node is trickled up; if it's been lowered, the node </span></div>
<div style="position:absolute;top:222;left:90"><span class="ft2">is trickled down.</span></div>
<div style="position:absolute;top:219;left:189"><span class="ft0"> </span></div>
<div style="position:absolute;top:212;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:222;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:242;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:296;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:257;left:90"><span class="ft2"> Actually, the difficult part of changing a node's priority is not shown in this routine: finding </span></div>
<div style="position:absolute;top:274;left:90"><span class="ft2">the node you want to change. In the </span></div>
<div style="position:absolute;top:274;left:315"><span class="ft1">change()</span></div>
<div style="position:absolute;top:274;left:382"><span class="ft2"> method just shown we supply the index </span></div>
<div style="position:absolute;top:291;left:90"><span class="ft2">as an argument, and in the Heap Workshop applet the user simply clicks on the selected </span></div>
<div style="position:absolute;top:307;left:90"><span class="ft2">node. In a real-world application a mechanism would be needed to find the appropriate </span></div>
<div style="position:absolute;top:323;left:90"><span class="ft2">node; as we've seen, the only node to which we normally have convenient access in a </span></div>
<div style="position:absolute;top:339;left:90"><span class="ft2">heap is the one with the largest key.</span></div>
<div style="position:absolute;top:336;left:312"><span class="ft0"> </span></div>
<div style="position:absolute;top:296;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:339;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:358;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:403;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:374;left:90"><span class="ft2"> The problem can be solved in linear O(N) time by searching the array sequentially. Or, a </span></div>
<div style="position:absolute;top:390;left:90"><span class="ft2">separate data structure (perhaps a hash table) could be updated with the new index </span></div>
<div style="position:absolute;top:406;left:90"><span class="ft2">value whenever a node was moved in the priority queue. This would allow quick access </span></div>
<div style="position:absolute;top:422;left:90"><span class="ft2">to any node. Of course, keeping a second structure updated would itself be time-</span></div>
<div style="position:absolute;top:438;left:90"><span class="ft2">consuming.</span></div>
<div style="position:absolute;top:435;left:161"><span class="ft0"> </span></div>
<div style="position:absolute;top:403;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:438;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:457;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:473;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:472;left:90"><span class="ft3"> The Array Size</span></div>
<div style="position:absolute;top:474;left:220"><span class="ft0"> </span></div>
<div style="position:absolute;top:473;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:478;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:497;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:536;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:513;left:90"><span class="ft2"> We should note that the array size, equivalent to the number of nodes in the heap, is a </span></div>
<div style="position:absolute;top:530;left:90"><span class="ft2">vital piece of information about the heap's state and a critical field in the </span></div>
<div style="position:absolute;top:530;left:533"><span class="ft1">Heap</span></div>
<div style="position:absolute;top:530;left:566"><span class="ft2"> class. </span></div>
<div style="position:absolute;top:547;left:90"><span class="ft2">Nodes copied from the last position aren't erased, so the only way for algorithms to know </span></div>
<div style="position:absolute;top:563;left:90"><span class="ft2">the location of the last occupied cell is to refer to the current size of the array.</span></div>
<div style="position:absolute;top:560;left:563"><span class="ft0"> </span></div>
<div style="position:absolute;top:536;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:563;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:582;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:599;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:597;left:90"><span class="ft3"> The </span></div>
<div style="position:absolute;top:597;left:129"><span class="ft4">heap.java</span></div>
<div style="position:absolute;top:597;left:230"><span class="ft3"> Program</span></div>
<div style="position:absolute;top:599;left:312"><span class="ft0"> </span></div>
<div style="position:absolute;top:599;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:605;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:624;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:672;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:641;left:90"><span class="ft2"> The </span></div>
<div style="position:absolute;top:641;left:118"><span class="ft1">heap.java</span></div>
<div style="position:absolute;top:641;left:193"><span class="ft2"> program (see Listing 12.1) uses a </span></div>
<div style="position:absolute;top:641;left:408"><span class="ft1">Node</span></div>
<div style="position:absolute;top:641;left:441"><span class="ft2"> class whose only field is the </span></div>
<div style="position:absolute;top:658;left:90"><span class="ft1">iData</span></div>
<div style="position:absolute;top:658;left:132"><span class="ft2"> variable that serves as the node's key. As usual, this class would hold many other </span></div>
<div style="position:absolute;top:675;left:90"><span class="ft2">fields in a useful program. The </span></div>
<div style="position:absolute;top:675;left:281"><span class="ft1">Heap</span></div>
<div style="position:absolute;top:675;left:314"><span class="ft2"> class contains the methods we discussed, plus </span></div>
<div style="position:absolute;top:692;left:90"><span class="ft1">isEmpty()</span></div>
<div style="position:absolute;top:692;left:165"><span class="ft2"> and </span></div>
<div style="position:absolute;top:692;left:196"><span class="ft1">displayHeap()</span></div>
<div style="position:absolute;top:692;left:304"><span class="ft2">, which outputs a crude but comprehensible character-</span></div>
<div style="position:absolute;top:709;left:90"><span class="ft2">based representation of the heap.</span></div>
<div style="position:absolute;top:706;left:298"><span class="ft0"> </span></div>
<div style="position:absolute;top:672;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:709;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:728;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:743;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:744;left:90"><span class="ft5"> Listing 12.1 The heap.java Program</span></div>
<div style="position:absolute;top:741;left:323"><span class="ft0"> </span></div>
<div style="position:absolute;top:743;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:747;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:766;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:782;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:781;left:113"><span class="ft1"> // heap.java</span></div>
<div style="position:absolute;top:778;left:213"><span class="ft0"> </span></div>
<div style="position:absolute;top:782;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:786;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:801;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:800;left:113"><span class="ft1"> // demonstrates heaps</span></div>
<div style="position:absolute;top:797;left:288"><span class="ft0"> </span></div>
<div style="position:absolute;top:801;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:805;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:820;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:820;left:113"><span class="ft1"> // to run this program: C&gt;java HeapApp</span></div>
<div style="position:absolute;top:817;left:430"><span class="ft0"> </span></div>
<div style="position:absolute;top:820;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:824;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:839;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:839;left:113"><span class="ft1"> import java.io.*;                 // for I/O</span></div>
<div style="position:absolute;top:836;left:480"><span class="ft0"> </span></div>
<div style="position:absolute;top:839;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:843;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:858;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:858;left:113"><span class="ft1"> import java.lang.Integer;         // for parseInt()</span></div>
<div style="position:absolute;top:855;left:538"><span class="ft0"> </span></div>
<div style="position:absolute;top:858;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:862;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:878;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:877;left:110"><span class="ft1"> ////////////////////////////////////////////////////////////////</span></div>
<div style="position:absolute;top:874;left:643"><span class="ft0"> </span></div>
<div style="position:absolute;top:878;left:643"><span class="ft0"> </span></div>
<div style="position:absolute;top:881;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:897;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:896;left:113"><span class="ft1"> class Node</span></div>
<div style="position:absolute;top:893;left:197"><span class="ft0"> </span></div>
<div style="position:absolute;top:897;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:901;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:916;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:915;left:113"><span class="ft1">    {</span></div>
<div style="position:absolute;top:912;left:147"><span class="ft0"> </span></div>
<div style="position:absolute;top:916;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:920;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:935;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:935;left:113"><span class="ft1">    public int iData;              // data item (key)</span></div>
<div style="position:absolute;top:932;left:546"><span class="ft0"> </span></div>
<div style="position:absolute;top:935;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:939;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:954;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:954;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:958;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:973;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:973;left:113"><span class="ft1">    public Node(int key)           // constructor</span></div>
<div style="position:absolute;top:970;left:513"><span class="ft0"> </span></div>
<div style="position:absolute;top:973;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:977;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:993;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:992;left:113"><span class="ft1">       { iData = key; }</span></div>
<div style="position:absolute;top:989;left:297"><span class="ft0"> </span></div>
<div style="position:absolute;top:993;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:996;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1012;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1011;left:113"><span class="ft1">    }  // end class Node</span></div>
<div style="position:absolute;top:1008;left:305"><span class="ft0"> </span></div>
<div style="position:absolute;top:1012;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:1016;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1035;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:1050;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1050;left:110"><span class="ft1"> ////////////////////////////////////////////////////////////////</span></div>
<div style="position:absolute;top:1047;left:643"><span class="ft0"> </span></div>
<div style="position:absolute;top:1050;left:643"><span class="ft0"> </span></div>
<div style="position:absolute;top:1054;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1073;left:80"><span class="ft0"> </span></div>
<script TYPE="text/javascript">
			var currentZoom = parent.ltop.currentZoom;
			if(currentZoom != undefined)
				document.body.style.zoom=currentZoom/100;
			</script>
</body>
</html>