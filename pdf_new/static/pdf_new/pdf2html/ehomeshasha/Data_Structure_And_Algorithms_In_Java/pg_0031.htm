<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0052)http://www.verypdf.com/ -->
<html>
<head>
<title>pg_0031</title>

<style>
<!-- 
select {font-size:12px;}
A:link {text-decoration: none; color: blue}
A:visited {text-decoration: none; color: purple}
A:active {text-decoration: red}
A:hover {text-decoration: underline; color:red}
-->
</style>
<script TYPE="text/javascript"> 
<!-- hide 
function killerrors()
{ 
return true; 
} 
window.onerror = killerrors; 
// --> 
</script>
<style type="text/css">
<!--
.ft0{font-style:normal;font-weight:normal;font-size:16px;font-family:Times New Roman;color:#000000;}
.ft1{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft2{font-style:normal;font-weight:bold;font-size:18px;font-family:Arial;color:#800000;}
.ft3{font-style:normal;font-weight:normal;font-size:13px;font-family:Times New Roman;color:#010100;}
.ft4{font-style:italic;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
-->
</style>
</head>
<body vlink="#FFFFFF" link="#FFFFFF" bgcolor="#ffffff">

<script TYPE="text/javascript">
var currentpos,timer; 
function initialize() 
{ 
timer=setInterval("scrollwindow()",10);
} 
function sc(){
clearInterval(timer); 
}
function scrollwindow() 
{ 
currentpos=document.body.scrollTop; 
window.scroll(0,++currentpos); 
if (currentpos != document.body.scrollTop) 
sc();
} 
document.onmousedown=sc
document.ondblclick=initialize
</script>
<div style="position:absolute;top:0;left:0"><img width="826" height="1169" src="pg_0031.jpg" ALT=""></div>
<div style="position:absolute;top:1102;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1102;left:395"><span class="ft0"> - 31 -</span></div>
<div style="position:absolute;top:81;left:90"><span class="ft1">new item is always inserted in the first vacant cell in the array, and the algorithm knows </span></div>
<div style="position:absolute;top:97;left:90"><span class="ft1">where this is because it knows how many items are already in the array. The new item is </span></div>
<div style="position:absolute;top:112;left:90"><span class="ft1">simply inserted in the next available space. Searching and deletion, however, are not so </span></div>
<div style="position:absolute;top:128;left:90"><span class="ft1">fast.</span></div>
<div style="position:absolute;top:125;left:116"><span class="ft0"> </span></div>
<div style="position:absolute;top:129;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:148;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:177;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:164;left:90"><span class="ft1"> In no-duplicates mode you're on your honor not to insert an item with the same key as an </span></div>
<div style="position:absolute;top:180;left:90"><span class="ft1">existing item. If you do, the applet displays an error message, but it won't prevent the </span></div>
<div style="position:absolute;top:196;left:90"><span class="ft1">insertion. The assumption is that you won't make this mistake.</span></div>
<div style="position:absolute;top:193;left:471"><span class="ft0"> </span></div>
<div style="position:absolute;top:177;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:196;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:215;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:231;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:230;left:90"><span class="ft2"> Searching</span></div>
<div style="position:absolute;top:232;left:181"><span class="ft0"> </span></div>
<div style="position:absolute;top:231;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:236;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:255;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:309;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:271;left:90"><span class="ft1"> Click the Find button. You'll be prompted for the key number of the person you're looking </span></div>
<div style="position:absolute;top:287;left:90"><span class="ft1">for. Pick a number that appears on an item somewhere in the middle of the array. Type in </span></div>
<div style="position:absolute;top:303;left:90"><span class="ft1">the number and repeatedly press the Find button. At each button press, one step in the </span></div>
<div style="position:absolute;top:319;left:90"><span class="ft1">algorithm is carried out. You'll see the red arrow start at cell 0 and move methodically </span></div>
<div style="position:absolute;top:335;left:90"><span class="ft1">down the cells, examining a new one each time you push the button. The index number </span></div>
<div style="position:absolute;top:351;left:90"><span class="ft1">in the message</span></div>
<div style="position:absolute;top:348;left:185"><span class="ft0"> </span></div>
<div style="position:absolute;top:309;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:351;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:370;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:386;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:385;left:113"><span class="ft3"> Checking next cell, index = 2</span></div>
<div style="position:absolute;top:382;left:355"><span class="ft0"> </span></div>
<div style="position:absolute;top:386;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:390;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:409;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:424;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:425;left:90"><span class="ft1"> will change as you go along. When you reach the specified item, you'll see the message</span></div>
<div style="position:absolute;top:422;left:630"><span class="ft0">   </span></div>
<div style="position:absolute;top:428;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:447;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:463;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:462;left:113"><span class="ft3"> Have found item with key 505</span></div>
<div style="position:absolute;top:459;left:347"><span class="ft0"> </span></div>
<div style="position:absolute;top:463;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:466;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:485;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:507;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:501;left:90"><span class="ft1"> or whatever key value you typed in. Assuming duplicates are not allowed, the search will </span></div>
<div style="position:absolute;top:517;left:90"><span class="ft1">terminate as soon as an item with the specified key value is found.</span></div>
<div style="position:absolute;top:514;left:498"><span class="ft0"> </span></div>
<div style="position:absolute;top:507;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:517;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:537;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:558;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:552;left:90"><span class="ft1"> If you have selected a key number that is not in the array, the applet will examine every </span></div>
<div style="position:absolute;top:568;left:90"><span class="ft1">occupied cell in the array before telling you that it can't find that item.</span></div>
<div style="position:absolute;top:565;left:511"><span class="ft0"> </span></div>
<div style="position:absolute;top:558;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:569;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:588;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:641;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:604;left:90"><span class="ft1"> Notice that (again assuming duplicates are not allowed) the search algorithm must look </span></div>
<div style="position:absolute;top:620;left:90"><span class="ft1">through an average of half the data items to find a specified item. Items close to the </span></div>
<div style="position:absolute;top:636;left:90"><span class="ft1">beginning of the array will be found sooner, and those toward the end will be found later. </span></div>
<div style="position:absolute;top:651;left:90"><span class="ft1">If N is the number of items, then the average number of steps needed to find an item is </span></div>
<div style="position:absolute;top:667;left:90"><span class="ft1">N/2. In the worst-case scenario, the specified item is in the last occupied cell, and N </span></div>
<div style="position:absolute;top:683;left:90"><span class="ft1">steps will be required to find it.</span></div>
<div style="position:absolute;top:680;left:277"><span class="ft0"> </span></div>
<div style="position:absolute;top:641;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:684;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:703;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:732;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:719;left:90"><span class="ft1"> As we noted, the time an algorithm takes to execute is proportional to the number of </span></div>
<div style="position:absolute;top:735;left:90"><span class="ft1">steps, so searching takes much longer on the average (N/2 steps) than insertion (one </span></div>
<div style="position:absolute;top:751;left:90"><span class="ft1">step).</span></div>
<div style="position:absolute;top:748;left:125"><span class="ft0"> </span></div>
<div style="position:absolute;top:732;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:751;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:770;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:786;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:785;left:90"><span class="ft2"> Deletion</span></div>
<div style="position:absolute;top:787;left:164"><span class="ft0"> </span></div>
<div style="position:absolute;top:786;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:791;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:810;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:856;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:826;left:90"><span class="ft1"> To delete an item you must first find it. After you type in the number of the item to be </span></div>
<div style="position:absolute;top:842;left:90"><span class="ft1">deleted, repeated button presses will cause the arrow to move, step by step, down the </span></div>
<div style="position:absolute;top:858;left:90"><span class="ft1">array until the item is located. The next button press deletes the item and the cell </span></div>
<div style="position:absolute;top:874;left:90"><span class="ft1">becomes empty. (Strictly speaking, this step isn't necessary because we're going to copy </span></div>
<div style="position:absolute;top:890;left:90"><span class="ft1">over this cell anyway, but deleting the item makes it clearer what's happening.)</span></div>
<div style="position:absolute;top:887;left:573"><span class="ft0"> </span></div>
<div style="position:absolute;top:856;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:890;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:909;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:971;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:925;left:90"><span class="ft1"> Implicit in the deletion algorithm is the assumption that holes are not allowed in the array. </span></div>
<div style="position:absolute;top:941;left:90"><span class="ft1">A hole is one or more empty cells that have filled cells above them (at higher index </span></div>
<div style="position:absolute;top:957;left:90"><span class="ft1">numbers). If holes are allowed, all the algorithms become more complicated because </span></div>
<div style="position:absolute;top:973;left:90"><span class="ft1">they must check to see if a cell is empty before examining its contents. Also, the </span></div>
<div style="position:absolute;top:989;left:90"><span class="ft1">algorithms become less efficient because they must waste time looking at unoccupied </span></div>
<div style="position:absolute;top:1005;left:90"><span class="ft1">cells. For these reasons, occupied cells must be arranged contiguously: no holes </span></div>
<div style="position:absolute;top:1021;left:90"><span class="ft1">allowed.</span></div>
<div style="position:absolute;top:1018;left:141"><span class="ft0"> </span></div>
<div style="position:absolute;top:971;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:1021;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1040;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:1062;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1056;left:90"><span class="ft1"> Therefore, after locating the specified item and deleting it, the applet must shift the </span></div>
<div style="position:absolute;top:1072;left:90"><span class="ft1">contents of each subsequent cell down one space to fill in the hole. Figure 2.2 shows an </span></div>
<div style="position:absolute;top:1062;left:640"><span class="ft0">  </span></div>
<script TYPE="text/javascript">
			var currentZoom = parent.ltop.currentZoom;
			if(currentZoom != undefined)
				document.body.style.zoom=currentZoom/100;
			</script>
</body>
</html>