<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0052)http://www.verypdf.com/ -->
<html>
<head>
<title>pg_0040</title>

<style>
<!-- 
select {font-size:12px;}
A:link {text-decoration: none; color: blue}
A:visited {text-decoration: none; color: purple}
A:active {text-decoration: red}
A:hover {text-decoration: underline; color:red}
-->
</style>
<script TYPE="text/javascript"> 
<!-- hide 
function killerrors()
{ 
return true; 
} 
window.onerror = killerrors; 
// --> 
</script>
<style type="text/css">
<!--
.ft0{font-style:normal;font-weight:normal;font-size:16px;font-family:Times New Roman;color:#000000;}
.ft1{font-style:normal;font-weight:bold;font-size:18px;font-family:Arial;color:#800000;}
.ft2{font-style:normal;font-weight:bold;font-size:18px;font-family:Times New Roman;color:#800000;}
.ft3{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft4{font-style:normal;font-weight:normal;font-size:13px;font-family:Times New Roman;color:#010100;}
.ft5{font-style:italic;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft6{font-style:normal;font-weight:bold;font-size:16px;font-family:Verdana;color:#000000;}
.ft7{font-style:normal;font-weight:bold;font-size:18px;font-family:Arial;color:#000080;}
.ft8{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#000000;}
.ft9{font-style:normal;font-weight:normal;font-size:13px;font-family:Times New Roman;color:#000000;}
-->
</style>
</head>
<body vlink="#FFFFFF" link="#FFFFFF" bgcolor="#ffffff">

<script TYPE="text/javascript">
var currentpos,timer; 
function initialize() 
{ 
timer=setInterval("scrollwindow()",10);
} 
function sc(){
clearInterval(timer); 
}
function scrollwindow() 
{ 
currentpos=document.body.scrollTop; 
window.scroll(0,++currentpos); 
if (currentpos != document.body.scrollTop) 
sc();
} 
document.onmousedown=sc
document.ondblclick=initialize
</script>
<div style="position:absolute;top:0;left:0"><img width="826" height="1169" src="pg_0040.jpg" ALT=""></div>
<div style="position:absolute;top:1102;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1102;left:395"><span class="ft0"> - 40 -</span></div>
<div style="position:absolute;top:84;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:101;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:99;left:90"><span class="ft1"> Classes</span></div>
<div style="position:absolute;top:99;left:161"><span class="ft2"> LowArray</span></div>
<div style="position:absolute;top:99;left:262"><span class="ft1"> and </span></div>
<div style="position:absolute;top:99;left:306"><span class="ft2">LowArrayApp</span></div>
<div style="position:absolute;top:101;left:430"><span class="ft0"> </span></div>
<div style="position:absolute;top:101;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:107;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:126;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:174;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:143;left:90"><span class="ft3"> In </span></div>
<div style="position:absolute;top:143;left:106"><span class="ft4">lowArray.java</span></div>
<div style="position:absolute;top:143;left:214"><span class="ft3">, we essentially wrap the class </span></div>
<div style="position:absolute;top:143;left:405"><span class="ft4">LowArray</span></div>
<div style="position:absolute;top:143;left:471"><span class="ft3"> around an ordinary Java </span></div>
<div style="position:absolute;top:159;left:90"><span class="ft3">array. The array is hidden from the outside world inside the class; it's private, so only </span></div>
<div style="position:absolute;top:176;left:90"><span class="ft4">LowArray</span></div>
<div style="position:absolute;top:176;left:157"><span class="ft3"> class methods can access it. There are three </span></div>
<div style="position:absolute;top:176;left:441"><span class="ft4">LowArray</span></div>
<div style="position:absolute;top:176;left:508"><span class="ft3"> methods: </span></div>
<div style="position:absolute;top:193;left:90"><span class="ft4">setElem()</span></div>
<div style="position:absolute;top:193;left:165"><span class="ft3"> and </span></div>
<div style="position:absolute;top:193;left:196"><span class="ft4">getElem()</span></div>
<div style="position:absolute;top:193;left:271"><span class="ft3">, which insert and retrieve an element, respectively; and a </span></div>
<div style="position:absolute;top:210;left:90"><span class="ft3">constructor, which creates an empty array of a specified size.</span></div>
<div style="position:absolute;top:207;left:466"><span class="ft0"> </span></div>
<div style="position:absolute;top:174;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:210;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:229;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:268;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:245;left:90"><span class="ft3"> Another class, </span></div>
<div style="position:absolute;top:245;left:182"><span class="ft4">LowArrayApp</span></div>
<div style="position:absolute;top:245;left:274"><span class="ft3">, creates an object of the </span></div>
<div style="position:absolute;top:245;left:430"><span class="ft4">LowArray</span></div>
<div style="position:absolute;top:245;left:496"><span class="ft3"> class and uses it to </span></div>
<div style="position:absolute;top:262;left:90"><span class="ft3">store and manipulate data. Think of </span></div>
<div style="position:absolute;top:262;left:312"><span class="ft4">LowArray</span></div>
<div style="position:absolute;top:262;left:378"><span class="ft3"> as a tool, and </span></div>
<div style="position:absolute;top:262;left:470"><span class="ft4">LowArrayApp</span></div>
<div style="position:absolute;top:262;left:565"><span class="ft3"> as a user of </span></div>
<div style="position:absolute;top:279;left:90"><span class="ft3">the tool. We've divided the program into two classes with clearly defined roles. This is a </span></div>
<div style="position:absolute;top:295;left:90"><span class="ft3">valuable first step in making a program object-oriented.</span></div>
<div style="position:absolute;top:292;left:428"><span class="ft0"> </span></div>
<div style="position:absolute;top:268;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:295;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:314;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:353;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:331;left:90"><span class="ft3"> A class used to store data objects, as is </span></div>
<div style="position:absolute;top:331;left:338"><span class="ft4">LowArray</span></div>
<div style="position:absolute;top:331;left:405"><span class="ft3"> in the </span></div>
<div style="position:absolute;top:331;left:447"><span class="ft4">lowArray.java</span></div>
<div style="position:absolute;top:331;left:555"><span class="ft3"> program, is </span></div>
<div style="position:absolute;top:347;left:90"><span class="ft3">sometimes called a container class. Typically, a container class not only stores the data but </span></div>
<div style="position:absolute;top:363;left:90"><span class="ft3">provides methods for accessing the data, and perhaps also sorting it and performing other </span></div>
<div style="position:absolute;top:379;left:90"><span class="ft3">complex actions on it.</span></div>
<div style="position:absolute;top:376;left:224"><span class="ft0"> </span></div>
<div style="position:absolute;top:380;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:396;left:79"><span class="ft6"> </span></div>
<div style="position:absolute;top:416;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:415;left:90"><span class="ft7"> Class Interfaces</span></div>
<div style="position:absolute;top:417;left:234"><span class="ft0"> </span></div>
<div style="position:absolute;top:416;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:421;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:440;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:470;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:456;left:90"><span class="ft3"> We've seen how a program can be divided into separate classes. How do these classes </span></div>
<div style="position:absolute;top:472;left:90"><span class="ft3">interact with each other. Communication between classes, and the division of </span></div>
<div style="position:absolute;top:488;left:90"><span class="ft3">responsibility between them, are important aspects of object-oriented programming.</span></div>
<div style="position:absolute;top:485;left:604"><span class="ft0">   </span></div>
<div style="position:absolute;top:488;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:508;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:554;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:523;left:90"><span class="ft3"> This is especially true when a class may have many different users. Typically a class can </span></div>
<div style="position:absolute;top:539;left:90"><span class="ft3">be used over and over by different users (or the same user) for different purposes. For </span></div>
<div style="position:absolute;top:556;left:90"><span class="ft3">example, it's possible that someone might use the </span></div>
<div style="position:absolute;top:556;left:401"><span class="ft4">LowArray</span></div>
<div style="position:absolute;top:556;left:468"><span class="ft3"> class in some other </span></div>
<div style="position:absolute;top:573;left:90"><span class="ft3">program to store the serial numbers of their traveler's checks. The class can handle this </span></div>
<div style="position:absolute;top:589;left:90"><span class="ft3">j</span></div>
<div style="position:absolute;top:589;left:93"><span class="ft3">ust as well as it can store the numbers of baseball players.</span></div>
<div style="position:absolute;top:586;left:453"><span class="ft0"> </span></div>
<div style="position:absolute;top:554;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:589;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:608;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:678;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:624;left:90"><span class="ft3"> If a class is used by many different programmers, the class should be designed so that </span></div>
<div style="position:absolute;top:640;left:90"><span class="ft3">it's easy to use. The way that a class us er relates to the class is called the class interface. </span></div>
<div style="position:absolute;top:656;left:90"><span class="ft3">Because class fields are typically private, when we talk about the interface we usually </span></div>
<div style="position:absolute;top:672;left:90"><span class="ft3">mean the class methods: what they do and what their arguments are. It's by calling these </span></div>
<div style="position:absolute;top:688;left:90"><span class="ft3">methods that a class user interacts with an object of the class. One of the important </span></div>
<div style="position:absolute;top:704;left:90"><span class="ft3">advantages conferred by object-oriented programming is that a class interface can be </span></div>
<div style="position:absolute;top:720;left:90"><span class="ft3">designed to be as convenient and efficient as possible. Figure 2.3 </span></div>
<div style="position:absolute;top:720;left:497"><span class="ft8">is a fanciful </span></div>
<div style="position:absolute;top:736;left:90"><span class="ft8">interpretation of the </span></div>
<div style="position:absolute;top:736;left:214"><span class="ft9">LowArray</span></div>
<div style="position:absolute;top:736;left:280"><span class="ft8"> interface.</span></div>
<div style="position:absolute;top:733;left:341"><span class="ft0"> </span></div>
<div style="position:absolute;top:678;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:737;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:756;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:773;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:772;left:90"><span class="ft1"> Not So Convenient</span></div>
<div style="position:absolute;top:774;left:258"><span class="ft0"> </span></div>
<div style="position:absolute;top:773;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:778;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:797;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:862;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:813;left:90"><span class="ft3"> The interface to the </span></div>
<div style="position:absolute;top:813;left:214"><span class="ft4">LowArray</span></div>
<div style="position:absolute;top:813;left:280"><span class="ft3"> class in </span></div>
<div style="position:absolute;top:813;left:334"><span class="ft4">lowArray.java</span></div>
<div style="position:absolute;top:813;left:443"><span class="ft3"> is not particularly convenient. </span></div>
<div style="position:absolute;top:830;left:90"><span class="ft3">The methods </span></div>
<div style="position:absolute;top:830;left:175"><span class="ft4">setElem()</span></div>
<div style="position:absolute;top:830;left:250"><span class="ft3"> and </span></div>
<div style="position:absolute;top:830;left:281"><span class="ft4">getElem()</span></div>
<div style="position:absolute;top:830;left:360"><span class="ft3"> operate on a low conceptual level, performing </span></div>
<div style="position:absolute;top:847;left:90"><span class="ft3">exactly the same tasks as the </span></div>
<div style="position:absolute;top:847;left:276"><span class="ft4">[]</span></div>
<div style="position:absolute;top:847;left:293"><span class="ft3"> operator in an ordinary Java array. The class user, </span></div>
<div style="position:absolute;top:865;left:90"><span class="ft3">represented by the </span></div>
<div style="position:absolute;top:865;left:210"><span class="ft4">main()</span></div>
<div style="position:absolute;top:865;left:260"><span class="ft3"> method in the </span></div>
<div style="position:absolute;top:865;left:352"><span class="ft4">LowArrayApp</span></div>
<div style="position:absolute;top:865;left:443"><span class="ft3"> class, ends up having to carry </span></div>
<div style="position:absolute;top:881;left:90"><span class="ft3">out the same low-level operations it did in the non-class version of an array in the </span></div>
<div style="position:absolute;top:898;left:90"><span class="ft4">array.java</span></div>
<div style="position:absolute;top:898;left:174"><span class="ft3"> program. The only difference was that it related to </span></div>
<div style="position:absolute;top:898;left:487"><span class="ft4">setElem()</span></div>
<div style="position:absolute;top:898;left:562"><span class="ft3"> and </span></div>
<div style="position:absolute;top:915;left:90"><span class="ft4">getElem()</span></div>
<div style="position:absolute;top:915;left:165"><span class="ft3"> instead of the </span></div>
<div style="position:absolute;top:915;left:256"><span class="ft4">[]</span></div>
<div style="position:absolute;top:915;left:273"><span class="ft3"> operator. It's not clear that this is an improvement.</span></div>
<div style="position:absolute;top:912;left:585"><span class="ft0"> </span></div>
<div style="position:absolute;top:862;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:916;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:935;left:80"><span class="ft0"> </span></div>
<script TYPE="text/javascript">
			var currentZoom = parent.ltop.currentZoom;
			if(currentZoom != undefined)
				document.body.style.zoom=currentZoom/100;
			</script>
</body>
</html>