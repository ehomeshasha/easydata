<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0052)http://www.verypdf.com/ -->
<html>
<head>
<title>pg_0226</title>

<style>
<!-- 
select {font-size:12px;}
A:link {text-decoration: none; color: blue}
A:visited {text-decoration: none; color: purple}
A:active {text-decoration: red}
A:hover {text-decoration: underline; color:red}
-->
</style>
<script TYPE="text/javascript"> 
<!-- hide 
function killerrors()
{ 
return true; 
} 
window.onerror = killerrors; 
// --> 
</script>
<style type="text/css">
<!--
.ft0{font-style:normal;font-weight:normal;font-size:16px;font-family:Times New Roman;color:#000000;}
.ft1{font-style:normal;font-weight:normal;font-size:13px;font-family:Times New Roman;color:#010100;}
.ft2{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft3{font-style:normal;font-weight:bold;font-size:18px;font-family:Arial;color:#800000;}
-->
</style>
</head>
<body vlink="#FFFFFF" link="#FFFFFF" bgcolor="#ffffff">

<script TYPE="text/javascript">
var currentpos,timer; 
function initialize() 
{ 
timer=setInterval("scrollwindow()",10);
} 
function sc(){
clearInterval(timer); 
}
function scrollwindow() 
{ 
currentpos=document.body.scrollTop; 
window.scroll(0,++currentpos); 
if (currentpos != document.body.scrollTop) 
sc();
} 
document.onmousedown=sc
document.ondblclick=initialize
</script>
<div style="position:absolute;top:0;left:0"><img width="826" height="1169" src="pg_0226.jpg" ALT=""></div>
<div style="position:absolute;top:1102;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1102;left:391"><span class="ft0"> - 226 -</span></div>
<div style="position:absolute;top:84;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:99;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:99;left:113"><span class="ft1">    }  // end class MergeApp</span></div>
<div style="position:absolute;top:96;left:338"><span class="ft0"> </span></div>
<div style="position:absolute;top:99;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:103;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:122;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:154;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:139;left:90"><span class="ft2"> In </span></div>
<div style="position:absolute;top:139;left:106"><span class="ft1">main()</span></div>
<div style="position:absolute;top:139;left:156"><span class="ft2"> the arrays </span></div>
<div style="position:absolute;top:139;left:225"><span class="ft1">arrayA</span></div>
<div style="position:absolute;top:139;left:275"><span class="ft2">, </span></div>
<div style="position:absolute;top:139;left:283"><span class="ft1">arrayB</span></div>
<div style="position:absolute;top:139;left:333"><span class="ft2">, and </span></div>
<div style="position:absolute;top:139;left:368"><span class="ft1">arrayC</span></div>
<div style="position:absolute;top:139;left:418"><span class="ft2"> are created; then the </span></div>
<div style="position:absolute;top:139;left:554"><span class="ft1">merge()</span></div>
<div style="position:absolute;top:139;left:612"><span class="ft2"> </span></div>
<div style="position:absolute;top:156;left:90"><span class="ft2">method is called to merge </span></div>
<div style="position:absolute;top:156;left:253"><span class="ft1">arrayA</span></div>
<div style="position:absolute;top:156;left:303"><span class="ft2"> and </span></div>
<div style="position:absolute;top:156;left:334"><span class="ft1">arrayB</span></div>
<div style="position:absolute;top:156;left:384"><span class="ft2"> into </span></div>
<div style="position:absolute;top:156;left:414"><span class="ft1">arrayC</span></div>
<div style="position:absolute;top:156;left:464"><span class="ft2">, and the resulting contents </span></div>
<div style="position:absolute;top:173;left:90"><span class="ft2">of </span></div>
<div style="position:absolute;top:173;left:106"><span class="ft1">arrayC</span></div>
<div style="position:absolute;top:173;left:156"><span class="ft2"> are displayed. Here's the output:</span></div>
<div style="position:absolute;top:170;left:359"><span class="ft0"> </span></div>
<div style="position:absolute;top:154;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:174;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:193;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:208;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:208;left:113"><span class="ft1"> 7 14 23 39 47 55 62 74 81 95</span></div>
<div style="position:absolute;top:205;left:347"><span class="ft0"> </span></div>
<div style="position:absolute;top:208;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:212;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:231;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:254;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:248;left:90"><span class="ft2"> The </span></div>
<div style="position:absolute;top:248;left:118"><span class="ft1">merge()</span></div>
<div style="position:absolute;top:248;left:176"><span class="ft2"> method has three </span></div>
<div style="position:absolute;top:248;left:292"><span class="ft1">while</span></div>
<div style="position:absolute;top:248;left:334"><span class="ft2"> loops. The first steps along both </span></div>
<div style="position:absolute;top:248;left:539"><span class="ft1">arrayA</span></div>
<div style="position:absolute;top:248;left:589"><span class="ft2"> and </span></div>
<div style="position:absolute;top:265;left:90"><span class="ft1">arrayB</span></div>
<div style="position:absolute;top:265;left:140"><span class="ft2">, comparing elements and copying the smaller of the two into </span></div>
<div style="position:absolute;top:265;left:518"><span class="ft1">arrayC</span></div>
<div style="position:absolute;top:265;left:568"><span class="ft2">.</span></div>
<div style="position:absolute;top:262;left:572"><span class="ft0"> </span></div>
<div style="position:absolute;top:254;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:266;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:285;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:325;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:301;left:90"><span class="ft2"> The second </span></div>
<div style="position:absolute;top:301;left:167"><span class="ft1">while</span></div>
<div style="position:absolute;top:301;left:208"><span class="ft2"> loop deals with the situation when all the elements have been </span></div>
<div style="position:absolute;top:318;left:90"><span class="ft2">transferred out of </span></div>
<div style="position:absolute;top:318;left:200"><span class="ft1">arrayB</span></div>
<div style="position:absolute;top:318;left:250"><span class="ft2">, but </span></div>
<div style="position:absolute;top:318;left:281"><span class="ft1">arrayA</span></div>
<div style="position:absolute;top:318;left:331"><span class="ft2"> still has remaining elements. (This is what </span></div>
<div style="position:absolute;top:336;left:90"><span class="ft2">happens in the example, where 81 and 95 remain in </span></div>
<div style="position:absolute;top:336;left:414"><span class="ft1">arrayA</span></div>
<div style="position:absolute;top:336;left:464"><span class="ft2">.) The loop simply copies </span></div>
<div style="position:absolute;top:353;left:90"><span class="ft2">the remaining elements from </span></div>
<div style="position:absolute;top:353;left:270"><span class="ft1">arrayA</span></div>
<div style="position:absolute;top:353;left:320"><span class="ft2"> into </span></div>
<div style="position:absolute;top:353;left:350"><span class="ft1">arrayC</span></div>
<div style="position:absolute;top:353;left:400"><span class="ft2">.</span></div>
<div style="position:absolute;top:350;left:404"><span class="ft0"> </span></div>
<div style="position:absolute;top:325;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:354;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:373;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:395;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:389;left:90"><span class="ft2"> The third loop handles the similar situation when all the elements have been transferred </span></div>
<div style="position:absolute;top:405;left:90"><span class="ft2">out of </span></div>
<div style="position:absolute;top:405;left:129"><span class="ft1">arrayA</span></div>
<div style="position:absolute;top:405;left:179"><span class="ft2"> but </span></div>
<div style="position:absolute;top:405;left:206"><span class="ft1">arrayB</span></div>
<div style="position:absolute;top:405;left:256"><span class="ft2"> still has remaining elements; they are copied to </span></div>
<div style="position:absolute;top:405;left:553"><span class="ft1">arrayC</span></div>
<div style="position:absolute;top:405;left:603"><span class="ft2">.</span></div>
<div style="position:absolute;top:402;left:607"><span class="ft0">   </span></div>
<div style="position:absolute;top:406;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:425;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:442;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:441;left:90"><span class="ft3"> Sorting by Merging</span></div>
<div style="position:absolute;top:443;left:261"><span class="ft0"> </span></div>
<div style="position:absolute;top:442;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:447;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:466;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:512;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:482;left:90"><span class="ft2"> The idea in the mergesort is to divide an array in half, sort each half, and then use the </span></div>
<div style="position:absolute;top:498;left:90"><span class="ft1">merge()</span></div>
<div style="position:absolute;top:498;left:149"><span class="ft2"> method to merge the two halves into a single sorted array. How do you sort </span></div>
<div style="position:absolute;top:515;left:90"><span class="ft2">each half. This chapter is about recursion, so you probably already know the answer: </span></div>
<div style="position:absolute;top:531;left:90"><span class="ft2">You divide the half into two quarters, sort each of the quarters, and merge them to make </span></div>
<div style="position:absolute;top:547;left:90"><span class="ft2">a sorted half.</span></div>
<div style="position:absolute;top:544;left:171"><span class="ft0"> </span></div>
<div style="position:absolute;top:512;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:547;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:566;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:604;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:582;left:90"><span class="ft2"> Similarly, each pair of 8ths is merged to make a sorted quarter, each pair of 16ths is </span></div>
<div style="position:absolute;top:598;left:90"><span class="ft2">merged to make a sorted 8th, and so on. You divide the array again and again until you </span></div>
<div style="position:absolute;top:614;left:90"><span class="ft2">reach a subarray with only one element. This is the base case; it's assumed an array with </span></div>
<div style="position:absolute;top:630;left:90"><span class="ft2">one element is already sorted.</span></div>
<div style="position:absolute;top:627;left:276"><span class="ft0"> </span></div>
<div style="position:absolute;top:604;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:630;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:649;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:687;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:665;left:90"><span class="ft2"> We've seen that generally something is reduced in size each time a recursive method </span></div>
<div style="position:absolute;top:681;left:90"><span class="ft2">calls itself, and built back up again each time the method returns. In </span></div>
<div style="position:absolute;top:681;left:509"><span class="ft1">mergeSort()</span></div>
<div style="position:absolute;top:681;left:600"><span class="ft2"> the </span></div>
<div style="position:absolute;top:698;left:90"><span class="ft2">range is divided in half each time this method calls itself, and each time it returns it </span></div>
<div style="position:absolute;top:714;left:90"><span class="ft2">merges two smaller ranges into a larger one.</span></div>
<div style="position:absolute;top:711;left:365"><span class="ft0"> </span></div>
<div style="position:absolute;top:687;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:714;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:733;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:780;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:750;left:90"><span class="ft2"> As </span></div>
<div style="position:absolute;top:750;left:110"><span class="ft1">mergeSort()</span></div>
<div style="position:absolute;top:750;left:202"><span class="ft2"> returns from finding 2 arrays of 1 element each, it merges them into a </span></div>
<div style="position:absolute;top:766;left:90"><span class="ft2">sorted array of 2 elements. Each pair of resulting 2-element arrays is then merged into a </span></div>
<div style="position:absolute;top:782;left:90"><span class="ft2">4-element array. This process continues with larger and larger arrays until the entire </span></div>
<div style="position:absolute;top:798;left:90"><span class="ft2">array is sorted. This is easiest to see when the original array size is a power of 2, as </span></div>
<div style="position:absolute;top:814;left:90"><span class="ft2">shown in Figure 6.15.</span></div>
<div style="position:absolute;top:811;left:223"><span class="ft0"> </span></div>
<div style="position:absolute;top:780;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:815;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:834;left:80"><span class="ft0"> </span></div>
<script TYPE="text/javascript">
			var currentZoom = parent.ltop.currentZoom;
			if(currentZoom != undefined)
				document.body.style.zoom=currentZoom/100;
			</script>
</body>
</html>