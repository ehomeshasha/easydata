<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0052)http://www.verypdf.com/ -->
<html>
<head>
<title>pg_0021</title>

<style>
<!-- 
select {font-size:12px;}
A:link {text-decoration: none; color: blue}
A:visited {text-decoration: none; color: purple}
A:active {text-decoration: red}
A:hover {text-decoration: underline; color:red}
-->
</style>
<script TYPE="text/javascript"> 
<!-- hide 
function killerrors()
{ 
return true; 
} 
window.onerror = killerrors; 
// --> 
</script>
<style type="text/css">
<!--
.ft0{font-style:normal;font-weight:normal;font-size:16px;font-family:Times New Roman;color:#000000;}
.ft1{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft2{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#008000;}
.ft3{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#000000;}
.ft4{font-style:normal;font-weight:bold;font-size:16px;font-family:Verdana;color:#000000;}
.ft5{font-style:normal;font-weight:bold;font-size:18px;font-family:Arial;color:#000080;}
.ft6{font-style:normal;font-weight:bold;font-size:18px;font-family:Arial;color:#800000;}
.ft7{font-style:italic;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft8{font-style:normal;font-weight:bold;font-size:16px;font-family:Arial;color:#010100;}
.ft9{font-style:normal;font-weight:normal;font-size:13px;font-family:Times New Roman;color:#010100;}
-->
</style>
</head>
<body vlink="#FFFFFF" link="#FFFFFF" bgcolor="#ffffff">

<script TYPE="text/javascript">
var currentpos,timer; 
function initialize() 
{ 
timer=setInterval("scrollwindow()",10);
} 
function sc(){
clearInterval(timer); 
}
function scrollwindow() 
{ 
currentpos=document.body.scrollTop; 
window.scroll(0,++currentpos); 
if (currentpos != document.body.scrollTop) 
sc();
} 
document.onmousedown=sc
document.ondblclick=initialize
</script>
<div style="position:absolute;top:0;left:0"><img width="826" height="1169" src="pg_0021.jpg" ALT=""></div>
<div style="position:absolute;top:1102;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1102;left:395"><span class="ft0"> - 21 -</span></div>
<div style="position:absolute;top:102;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:81;left:90"><span class="ft1"> In recent years, it has become fashionable to begin a book on data structures and </span></div>
<div style="position:absolute;top:97;left:90"><span class="ft1">algorithms with a chapter on software engineering. We don't follow that approach, but </span></div>
<div style="position:absolute;top:112;left:90"><span class="ft1">let's briefly examine software engineering and see how it fits into the topics we discuss in </span></div>
<div style="position:absolute;top:128;left:90"><span class="ft1">this book.</span></div>
<div style="position:absolute;top:125;left:150"><span class="ft0"> </span></div>
<div style="position:absolute;top:102;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:129;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:148;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:193;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:164;left:90"><span class="ft1"> Software engineering is the study of how to create large and complex computer </span></div>
<div style="position:absolute;top:180;left:90"><span class="ft1">programs, involving many programmers. It focuses on the overall design of the program </span></div>
<div style="position:absolute;top:196;left:90"><span class="ft1">and on the creation of that design from the needs of the end users. Software engineering </span></div>
<div style="position:absolute;top:212;left:90"><span class="ft1">is concerned with life cycle of a software project, which includes specification, design, </span></div>
<div style="position:absolute;top:227;left:90"><span class="ft1">verification, coding, testing, production, and maintenance.</span></div>
<div style="position:absolute;top:224;left:445"><span class="ft0"> </span></div>
<div style="position:absolute;top:193;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:228;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:247;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:292;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:263;left:90"><span class="ft1"> It's not clear that mixing software engineering on one hand, and data structures and </span></div>
<div style="position:absolute;top:279;left:90"><span class="ft1">algorithms on the other, actually helps the student understand either topic. Software </span></div>
<div style="position:absolute;top:295;left:90"><span class="ft1">engineering is rather abstract and is difficult to grasp until you've been involved yourself </span></div>
<div style="position:absolute;top:311;left:90"><span class="ft1">in a large project. Data structures and algorithms, on the other hand, is a nuts-and-bolts </span></div>
<div style="position:absolute;top:326;left:90"><span class="ft1">discipline concerned with the details of coding and data storage.</span></div>
<div style="position:absolute;top:323;left:484"><span class="ft0"> </span></div>
<div style="position:absolute;top:292;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:327;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:346;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:391;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:362;left:90"><span class="ft1"> Accordingly we focus on the nuts-and-bolts aspects of data structures and algorithms. How </span></div>
<div style="position:absolute;top:378;left:90"><span class="ft1">do they really work. What structure or algorithm is best in a particular situation. What do </span></div>
<div style="position:absolute;top:394;left:90"><span class="ft1">they look like translated into Java code. As we noted, our intent is to make the material as </span></div>
<div style="position:absolute;top:410;left:90"><span class="ft1">easy to understand as possible. For further reading, we mention some books on software </span></div>
<div style="position:absolute;top:426;left:90"><span class="ft1">engineering in </span></div>
<div style="position:absolute;top:426;left:181"><span class="ft2">Appendix B</span></div>
<div style="position:absolute;top:426;left:253"><span class="ft3">.</span></div>
<div style="position:absolute;top:423;left:256"><span class="ft0"> </span></div>
<div style="position:absolute;top:426;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:442;left:79"><span class="ft4"> </span></div>
<div style="position:absolute;top:462;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:461;left:90"><span class="ft5"> Java for C++ Programmers</span></div>
<div style="position:absolute;top:463;left:330"><span class="ft0"> </span></div>
<div style="position:absolute;top:462;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:467;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:487;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:508;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:502;left:90"><span class="ft1"> If you're a C++ programmer who has not yet encountered Java, you might want to read </span></div>
<div style="position:absolute;top:518;left:90"><span class="ft1">this section. We'll mention several ways in which Java differs from C++.</span></div>
<div style="position:absolute;top:515;left:529"><span class="ft0"> </span></div>
<div style="position:absolute;top:508;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:519;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:538;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:575;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:554;left:90"><span class="ft1"> This section is not intended to be a primer on Java. We don't even cover all the </span></div>
<div style="position:absolute;top:570;left:90"><span class="ft1">differences between C++ and Java. We're only interested in a few Java features that </span></div>
<div style="position:absolute;top:586;left:90"><span class="ft1">might make it hard for C++ programmers to figure out what's going on in the example </span></div>
<div style="position:absolute;top:601;left:90"><span class="ft1">programs.</span></div>
<div style="position:absolute;top:598;left:153"><span class="ft0"> </span></div>
<div style="position:absolute;top:575;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:602;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:621;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:637;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:636;left:90"><span class="ft6"> No Pointers</span></div>
<div style="position:absolute;top:638;left:195"><span class="ft0"> </span></div>
<div style="position:absolute;top:637;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:642;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:661;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:691;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:677;left:90"><span class="ft1"> The biggest difference between C++ and Java is that Java doesn't use pointers. To a </span></div>
<div style="position:absolute;top:693;left:90"><span class="ft1">C++ programmer this may at first seem quite amazing. How can you get along without </span></div>
<div style="position:absolute;top:709;left:90"><span class="ft1">pointers.</span></div>
<div style="position:absolute;top:706;left:148"><span class="ft0"> </span></div>
<div style="position:absolute;top:691;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:709;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:729;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:750;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:744;left:90"><span class="ft1"> Throughout this book we'll be using pointer-free code to build complex data structures. </span></div>
<div style="position:absolute;top:760;left:90"><span class="ft1">You'll see that it's not only possible, but actually easier than using C++ pointers.</span></div>
<div style="position:absolute;top:757;left:580"><span class="ft0"> </span></div>
<div style="position:absolute;top:750;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:761;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:780;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:809;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:796;left:90"><span class="ft1"> Actually Java only does away with explicit pointers. Pointers, in the form of memory </span></div>
<div style="position:absolute;top:811;left:90"><span class="ft1">addresses, are still there, under the surface. It's sometimes said that in Java, everything </span></div>
<div style="position:absolute;top:827;left:90"><span class="ft1">is a pointer. This is not completely true, but it's close. Let's look at the details.</span></div>
<div style="position:absolute;top:824;left:563"><span class="ft0"> </span></div>
<div style="position:absolute;top:809;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:828;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:847;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:862;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:862;left:90"><span class="ft8"> References</span></div>
<div style="position:absolute;top:862;left:180"><span class="ft0"> </span></div>
<div style="position:absolute;top:862;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:866;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:885;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:907;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:901;left:90"><span class="ft1"> Java treats primitive data types (such as </span></div>
<div style="position:absolute;top:901;left:342"><span class="ft9">int</span></div>
<div style="position:absolute;top:901;left:367"><span class="ft1">, </span></div>
<div style="position:absolute;top:901;left:375"><span class="ft9">float</span></div>
<div style="position:absolute;top:901;left:416"><span class="ft1">, and </span></div>
<div style="position:absolute;top:901;left:451"><span class="ft9">double</span></div>
<div style="position:absolute;top:901;left:501"><span class="ft1">) differently than </span></div>
<div style="position:absolute;top:918;left:90"><span class="ft1">objects. Look at these two statements:</span></div>
<div style="position:absolute;top:915;left:327"><span class="ft0"> </span></div>
<div style="position:absolute;top:907;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:918;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:937;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:953;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:952;left:113"><span class="ft9"> int intVar;       // an int variable called intVar</span></div>
<div style="position:absolute;top:949;left:530"><span class="ft0"> </span></div>
<div style="position:absolute;top:953;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:957;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:972;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:971;left:113"><span class="ft9"> BankAccount bc1;  // reference to a BankAccount object</span></div>
<div style="position:absolute;top:968;left:563"><span class="ft0"> </span></div>
<div style="position:absolute;top:972;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:976;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:995;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:1034;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1011;left:90"><span class="ft1"> In the first statement, a memory location called </span></div>
<div style="position:absolute;top:1011;left:381"><span class="ft9">intVar</span></div>
<div style="position:absolute;top:1011;left:431"><span class="ft1"> actually holds a numerical value </span></div>
<div style="position:absolute;top:1028;left:90"><span class="ft1">such as 127 (assuming such a value has been placed there). However, the memory </span></div>
<div style="position:absolute;top:1044;left:90"><span class="ft1">location </span></div>
<div style="position:absolute;top:1044;left:142"><span class="ft9">bc1</span></div>
<div style="position:absolute;top:1044;left:167"><span class="ft1"> does not hold the data of a </span></div>
<div style="position:absolute;top:1044;left:339"><span class="ft9">BankAccount</span></div>
<div style="position:absolute;top:1044;left:431"><span class="ft1"> object. Instead, it contains the </span></div>
<div style="position:absolute;top:1062;left:90"><span class="ft7">address of a </span></div>
<div style="position:absolute;top:1062;left:171"><span class="ft9">BankAccount</span></div>
<div style="position:absolute;top:1062;left:262"><span class="ft1"> object that is actually stored elsewhere in memory. The </span></div>
<div style="position:absolute;top:1034;left:640"><span class="ft0">  </span></div>
<script TYPE="text/javascript">
			var currentZoom = parent.ltop.currentZoom;
			if(currentZoom != undefined)
				document.body.style.zoom=currentZoom/100;
			</script>
</body>
</html>