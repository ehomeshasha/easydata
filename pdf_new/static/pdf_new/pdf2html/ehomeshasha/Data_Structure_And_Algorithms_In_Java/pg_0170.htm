<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0052)http://www.verypdf.com/ -->
<html>
<head>
<title>pg_0170</title>

<style>
<!-- 
select {font-size:12px;}
A:link {text-decoration: none; color: blue}
A:visited {text-decoration: none; color: purple}
A:active {text-decoration: red}
A:hover {text-decoration: underline; color:red}
-->
</style>
<script TYPE="text/javascript"> 
<!-- hide 
function killerrors()
{ 
return true; 
} 
window.onerror = killerrors; 
// --> 
</script>
<style type="text/css">
<!--
.ft0{font-style:normal;font-weight:normal;font-size:16px;font-family:Times New Roman;color:#000000;}
.ft1{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft2{font-style:normal;font-weight:bold;font-size:18px;font-family:Arial;color:#800000;}
.ft3{font-style:normal;font-weight:bold;font-size:16px;font-family:Verdana;color:#000000;}
.ft4{font-style:normal;font-weight:bold;font-size:18px;font-family:Arial;color:#000080;}
.ft5{font-style:italic;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft6{font-style:normal;font-weight:normal;font-size:13px;font-family:Times New Roman;color:#010100;}
.ft7{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#008000;}
.ft8{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#000000;}
-->
</style>
</head>
<body vlink="#FFFFFF" link="#FFFFFF" bgcolor="#ffffff">

<script TYPE="text/javascript">
var currentpos,timer; 
function initialize() 
{ 
timer=setInterval("scrollwindow()",10);
} 
function sc(){
clearInterval(timer); 
}
function scrollwindow() 
{ 
currentpos=document.body.scrollTop; 
window.scroll(0,++currentpos); 
if (currentpos != document.body.scrollTop) 
sc();
} 
document.onmousedown=sc
document.ondblclick=initialize
</script>
<div style="position:absolute;top:0;left:0"><img width="826" height="1169" src="pg_0170.jpg" ALT=""></div>
<div style="position:absolute;top:1102;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1102;left:391"><span class="ft0"> - 170 -</span></div>
<div style="position:absolute;top:81;left:90"><span class="ft1">is defined by its interface: the specific methods used to interact with it. This interface can </span></div>
<div style="position:absolute;top:97;left:90"><span class="ft1">be implemented by various structures, including arrays and linked lists. The list is an </span></div>
<div style="position:absolute;top:112;left:90"><span class="ft1">abstraction of such data structures.</span></div>
<div style="position:absolute;top:109;left:307"><span class="ft0"> </span></div>
<div style="position:absolute;top:113;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:132;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:148;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:147;left:90"><span class="ft2"> ADTs as a Design Tool</span></div>
<div style="position:absolute;top:149;left:293"><span class="ft0"> </span></div>
<div style="position:absolute;top:148;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:153;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:172;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:226;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:188;left:90"><span class="ft1"> The ADT concept is a useful aid in the software design process. If you need to store data, </span></div>
<div style="position:absolute;top:204;left:90"><span class="ft1">start by considering the operations that need to be performed on that data. Do you need </span></div>
<div style="position:absolute;top:220;left:90"><span class="ft1">access to the last item inserted. The first one. An item with a specified key. An item in a </span></div>
<div style="position:absolute;top:236;left:90"><span class="ft1">certain position. Answering such questions leads to the definition of an ADT. Only after </span></div>
<div style="position:absolute;top:252;left:90"><span class="ft1">the ADT is completely defined should you worry about the details of how to represent the </span></div>
<div style="position:absolute;top:268;left:90"><span class="ft1">data and how to code the methods that access the data.</span></div>
<div style="position:absolute;top:265;left:435"><span class="ft0"> </span></div>
<div style="position:absolute;top:226;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:268;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:287;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:325;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:303;left:90"><span class="ft1"> By decoupling the specification of the ADT from the implementation details, you can </span></div>
<div style="position:absolute;top:319;left:90"><span class="ft1">simplify the design process. You also make it easier to change the implementation at </span></div>
<div style="position:absolute;top:335;left:90"><span class="ft1">some future time. If the users relate only to the ADT interface, you should be able to </span></div>
<div style="position:absolute;top:351;left:90"><span class="ft1">change the implementation without &quot;breaking&quot; the user's code.</span></div>
<div style="position:absolute;top:348;left:473"><span class="ft0"> </span></div>
<div style="position:absolute;top:325;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:351;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:370;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:416;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:386;left:90"><span class="ft1"> Of course, once the ADT has been designed, the underlying data structure must be </span></div>
<div style="position:absolute;top:402;left:90"><span class="ft1">carefully chosen to make the specified operations as efficient as possible. If you need </span></div>
<div style="position:absolute;top:418;left:90"><span class="ft1">random access to element N, for example, then the linked-list representation isn't so </span></div>
<div style="position:absolute;top:434;left:90"><span class="ft1">good because random access isn't an efficient operation for a linked list. You'd be better </span></div>
<div style="position:absolute;top:450;left:90"><span class="ft1">off with an array.</span></div>
<div style="position:absolute;top:447;left:193"><span class="ft0"> </span></div>
<div style="position:absolute;top:416;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:450;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:469;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:486;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:485;left:90"><span class="ft2"> It's All Relative</span></div>
<div style="position:absolute;top:487;left:223"><span class="ft0"> </span></div>
<div style="position:absolute;top:486;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:491;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:510;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:572;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:526;left:90"><span class="ft1"> Remember that the ADT concept is only a conc eptual tool. Data storage structures are not </span></div>
<div style="position:absolute;top:542;left:90"><span class="ft1">divided cleanly into some that are ADTs and some that are used to implement ADTs. A </span></div>
<div style="position:absolute;top:558;left:90"><span class="ft1">linked list, for example, doesn't need to be wrapped in a list interface to be useful; it can act </span></div>
<div style="position:absolute;top:574;left:90"><span class="ft1">as an ADT on its own, or it can be used to implement another data type such as a queue. A </span></div>
<div style="position:absolute;top:590;left:90"><span class="ft1">linked list can be implemented using an array, and an array-type structure can be </span></div>
<div style="position:absolute;top:606;left:90"><span class="ft1">implemented using a linked list. What's an ADT and what's a more basic structure must be </span></div>
<div style="position:absolute;top:622;left:90"><span class="ft1">determined in a given context.</span></div>
<div style="position:absolute;top:619;left:276"><span class="ft0"> </span></div>
<div style="position:absolute;top:622;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:639;left:79"><span class="ft3"> </span></div>
<div style="position:absolute;top:658;left:79"><span class="ft4">Sorted Lists</span></div>
<div style="position:absolute;top:660;left:187"><span class="ft0"> </span></div>
<div style="position:absolute;top:659;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:664;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:683;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:713;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:699;left:90"><span class="ft1"> In linked lists we've seen thus far, there was no requirement that data be stored in order. </span></div>
<div style="position:absolute;top:715;left:90"><span class="ft1">However, for certain applications it's useful to maintain the data in sorted order within the </span></div>
<div style="position:absolute;top:731;left:90"><span class="ft1">list. A list with this characteristic is called a sorted list.</span></div>
<div style="position:absolute;top:728;left:418"><span class="ft0"> </span></div>
<div style="position:absolute;top:713;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:731;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:750;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:788;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:766;left:90"><span class="ft1"> In a sorted list, the items are arranged in sorted order by key value. Deletion is often </span></div>
<div style="position:absolute;top:782;left:90"><span class="ft1">limited to the smallest (or the largest) item in the list, which is at the start of the list, </span></div>
<div style="position:absolute;top:798;left:90"><span class="ft1">although sometimes </span></div>
<div style="position:absolute;top:798;left:219"><span class="ft6">find()</span></div>
<div style="position:absolute;top:798;left:268"><span class="ft1"> and </span></div>
<div style="position:absolute;top:798;left:299"><span class="ft6">delete()</span></div>
<div style="position:absolute;top:798;left:366"><span class="ft1"> methods, which search through the list for </span></div>
<div style="position:absolute;top:815;left:90"><span class="ft1">specified links, are used as well.</span></div>
<div style="position:absolute;top:812;left:289"><span class="ft0"> </span></div>
<div style="position:absolute;top:788;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:815;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:834;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:880;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:850;left:90"><span class="ft1"> In general you can use a sorted list in most situations where you use a sorted array. The </span></div>
<div style="position:absolute;top:866;left:90"><span class="ft1">advantages of a sorted list over a sorted array are speed of insertion (because elements </span></div>
<div style="position:absolute;top:882;left:90"><span class="ft1">don't need to be moved) and the fact that a list can expand to fill available memory, while </span></div>
<div style="position:absolute;top:898;left:90"><span class="ft1">an array is limited to a fixed size. However, a sorted list is somewhat more difficult to </span></div>
<div style="position:absolute;top:914;left:90"><span class="ft1">implement than a sorted array.</span></div>
<div style="position:absolute;top:911;left:279"><span class="ft0"> </span></div>
<div style="position:absolute;top:880;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:914;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:933;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:963;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:949;left:90"><span class="ft1"> Later we'll look at one application for sorted lists: sorting data. A sorted list can also be </span></div>
<div style="position:absolute;top:965;left:90"><span class="ft1">used to implement a priority queue, although a heap (see </span></div>
<div style="position:absolute;top:965;left:445"><span class="ft7">Chapter 12</span></div>
<div style="position:absolute;top:965;left:514"><span class="ft8">) is a more common </span></div>
<div style="position:absolute;top:981;left:90"><span class="ft8">implementation.</span></div>
<div style="position:absolute;top:978;left:188"><span class="ft0"> </span></div>
<div style="position:absolute;top:963;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:981;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1000;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:1017;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1016;left:90"><span class="ft2"> The LinkList WorkShop Applet</span></div>
<div style="position:absolute;top:1018;left:363"><span class="ft0"> </span></div>
<div style="position:absolute;top:1017;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:1022;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1041;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:1063;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1057;left:90"><span class="ft1"> The LinkList Workshop applet introduced at the beginning of this chapter demonstrates </span></div>
<div style="position:absolute;top:1073;left:90"><span class="ft1">sorted as well as unsorted lists. Use the New button to create a new list with about 20 </span></div>
<div style="position:absolute;top:1063;left:640"><span class="ft0">  </span></div>
<script TYPE="text/javascript">
			var currentZoom = parent.ltop.currentZoom;
			if(currentZoom != undefined)
				document.body.style.zoom=currentZoom/100;
			</script>
</body>
</html>