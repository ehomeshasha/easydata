<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0052)http://www.verypdf.com/ -->
<html>
<head>
<title>pg_0022</title>

<style>
<!-- 
select {font-size:12px;}
A:link {text-decoration: none; color: blue}
A:visited {text-decoration: none; color: purple}
A:active {text-decoration: red}
A:hover {text-decoration: underline; color:red}
-->
</style>
<script TYPE="text/javascript"> 
<!-- hide 
function killerrors()
{ 
return true; 
} 
window.onerror = killerrors; 
// --> 
</script>
<style type="text/css">
<!--
.ft0{font-style:normal;font-weight:normal;font-size:16px;font-family:Times New Roman;color:#000000;}
.ft1{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft2{font-style:normal;font-weight:normal;font-size:13px;font-family:Times New Roman;color:#010100;}
.ft3{font-style:italic;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft4{font-style:normal;font-weight:bold;font-size:16px;font-family:Arial;color:#010100;}
.ft5{font-style:normal;font-weight:bold;font-size:16px;font-family:Times New Roman;color:#010100;}
-->
</style>
</head>
<body vlink="#FFFFFF" link="#FFFFFF" bgcolor="#ffffff">

<script TYPE="text/javascript">
var currentpos,timer; 
function initialize() 
{ 
timer=setInterval("scrollwindow()",10);
} 
function sc(){
clearInterval(timer); 
}
function scrollwindow() 
{ 
currentpos=document.body.scrollTop; 
window.scroll(0,++currentpos); 
if (currentpos != document.body.scrollTop) 
sc();
} 
document.onmousedown=sc
document.ondblclick=initialize
</script>
<div style="position:absolute;top:0;left:0"><img width="826" height="1169" src="pg_0022.jpg" ALT=""></div>
<div style="position:absolute;top:1102;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1102;left:395"><span class="ft0"> - 22 -</span></div>
<div style="position:absolute;top:81;left:90"><span class="ft1">name </span></div>
<div style="position:absolute;top:81;left:129"><span class="ft2">bc1</span></div>
<div style="position:absolute;top:81;left:154"><span class="ft1"> is a reference to this object; it's not the object itself.</span></div>
<div style="position:absolute;top:78;left:471"><span class="ft0"> </span></div>
<div style="position:absolute;top:82;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:101;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:148;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:117;left:90"><span class="ft1"> Actually, </span></div>
<div style="position:absolute;top:117;left:147"><span class="ft2">bc1</span></div>
<div style="position:absolute;top:117;left:172"><span class="ft1"> won't hold a reference if it has not been assigned an object at some prior </span></div>
<div style="position:absolute;top:134;left:90"><span class="ft1">point in the program. Before being assigned an object, it holds a reference to a special </span></div>
<div style="position:absolute;top:151;left:90"><span class="ft1">object called </span></div>
<div style="position:absolute;top:151;left:171"><span class="ft2">null</span></div>
<div style="position:absolute;top:151;left:205"><span class="ft1">. In the same way, </span></div>
<div style="position:absolute;top:151;left:321"><span class="ft2">intVar</span></div>
<div style="position:absolute;top:151;left:371"><span class="ft1"> won't hold a numerical value if it's never </span></div>
<div style="position:absolute;top:167;left:90"><span class="ft1">been assigned one. The compiler will complain if you try to use a variable that has never </span></div>
<div style="position:absolute;top:183;left:90"><span class="ft1">been assigned a value.</span></div>
<div style="position:absolute;top:180;left:233"><span class="ft0"> </span></div>
<div style="position:absolute;top:148;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:183;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:202;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:218;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:218;left:90"><span class="ft1"> In C++, the statement</span></div>
<div style="position:absolute;top:215;left:224"><span class="ft0"> </span></div>
<div style="position:absolute;top:218;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:222;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:241;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:256;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:256;left:113"><span class="ft2"> BankAccount bc1;</span></div>
<div style="position:absolute;top:253;left:247"><span class="ft0"> </span></div>
<div style="position:absolute;top:256;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:260;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:279;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:317;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:295;left:90"><span class="ft1"> actually creates an object; it sets aside enough memory to hold all the object's data. In </span></div>
<div style="position:absolute;top:311;left:90"><span class="ft1">Java, all this statement creates is a place to put an object's memory address. You can </span></div>
<div style="position:absolute;top:327;left:90"><span class="ft1">think of a reference as a pointer with the syntax of an ordinary variable. (C++ has </span></div>
<div style="position:absolute;top:343;left:90"><span class="ft1">reference variables, but they must be explicitly specified with the </span></div>
<div style="position:absolute;top:343;left:489"><span class="ft2">&amp;</span></div>
<div style="position:absolute;top:343;left:498"><span class="ft1"> symbol.)</span></div>
<div style="position:absolute;top:340;left:554"><span class="ft0"> </span></div>
<div style="position:absolute;top:317;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:344;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:363;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:379;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:379;left:90"><span class="ft4"> Assignment</span></div>
<div style="position:absolute;top:379;left:186"><span class="ft0"> </span></div>
<div style="position:absolute;top:379;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:383;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:402;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:424;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:418;left:90"><span class="ft1"> It follows that the assignment operator (</span></div>
<div style="position:absolute;top:418;left:333"><span class="ft2">=</span></div>
<div style="position:absolute;top:418;left:342"><span class="ft1">) operates differently with Java objects than with </span></div>
<div style="position:absolute;top:435;left:90"><span class="ft1">C++ objects. In C++, the statement</span></div>
<div style="position:absolute;top:432;left:306"><span class="ft0"> </span></div>
<div style="position:absolute;top:424;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:435;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:454;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:469;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:469;left:113"><span class="ft2"> bc2 = bc1;</span></div>
<div style="position:absolute;top:466;left:197"><span class="ft0"> </span></div>
<div style="position:absolute;top:469;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:473;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:492;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:532;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:509;left:90"><span class="ft1"> copies all the data from an object called </span></div>
<div style="position:absolute;top:509;left:338"><span class="ft2">bc1</span></div>
<div style="position:absolute;top:509;left:363"><span class="ft1"> into a different object called </span></div>
<div style="position:absolute;top:509;left:540"><span class="ft2">bc2</span></div>
<div style="position:absolute;top:509;left:565"><span class="ft1">. Following </span></div>
<div style="position:absolute;top:526;left:90"><span class="ft1">this statement are two objects with the same data. In Java, on the other hand, this same </span></div>
<div style="position:absolute;top:542;left:90"><span class="ft1">assignment statement copies the memory address that </span></div>
<div style="position:absolute;top:542;left:432"><span class="ft2">bc1</span></div>
<div style="position:absolute;top:542;left:457"><span class="ft1"> refers to into </span></div>
<div style="position:absolute;top:542;left:542"><span class="ft2">bc2</span></div>
<div style="position:absolute;top:542;left:567"><span class="ft1">. Both </span></div>
<div style="position:absolute;top:542;left:607"><span class="ft2">bc1</span></div>
<div style="position:absolute;top:542;left:632"><span class="ft1"> </span></div>
<div style="position:absolute;top:559;left:90"><span class="ft1">and </span></div>
<div style="position:absolute;top:559;left:117"><span class="ft2">bc2</span></div>
<div style="position:absolute;top:559;left:142"><span class="ft1"> now refer to exactly the same object; they are references to it.</span></div>
<div style="position:absolute;top:556;left:526"><span class="ft0"> </span></div>
<div style="position:absolute;top:532;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:560;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:579;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:601;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:595;left:90"><span class="ft1"> This can get you into trouble if you're not clear on what the assignment operator does. </span></div>
<div style="position:absolute;top:611;left:90"><span class="ft1">Following the assignment statement shown above, the statement</span></div>
<div style="position:absolute;top:608;left:489"><span class="ft0"> </span></div>
<div style="position:absolute;top:601;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:611;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:630;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:646;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:645;left:113"><span class="ft2"> bc1.withdraw(21.00);</span></div>
<div style="position:absolute;top:642;left:280"><span class="ft0"> </span></div>
<div style="position:absolute;top:646;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:649;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:669;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:684;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:684;left:90"><span class="ft1"> and the statement</span></div>
<div style="position:absolute;top:681;left:202"><span class="ft0"> </span></div>
<div style="position:absolute;top:684;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:688;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:707;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:722;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:722;left:113"><span class="ft2"> bc2.withdraw(21.00);</span></div>
<div style="position:absolute;top:719;left:280"><span class="ft0"> </span></div>
<div style="position:absolute;top:722;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:726;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:745;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:761;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:761;left:90"><span class="ft1"> both withdraw $21 from the same bank account object.</span></div>
<div style="position:absolute;top:758;left:427"><span class="ft0"> </span></div>
<div style="position:absolute;top:761;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:764;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:784;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:813;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:799;left:90"><span class="ft1"> Suppose you actually want to copy data from one object to another. In this case you must </span></div>
<div style="position:absolute;top:815;left:90"><span class="ft1">make sure you have two separate objects to begin with, and then copy each field </span></div>
<div style="position:absolute;top:831;left:90"><span class="ft1">separately. The equal sign won't do the job.</span></div>
<div style="position:absolute;top:828;left:358"><span class="ft0"> </span></div>
<div style="position:absolute;top:813;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:832;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:851;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:867;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:866;left:90"><span class="ft4"> The </span></div>
<div style="position:absolute;top:866;left:124"><span class="ft5">new</span></div>
<div style="position:absolute;top:866;left:154"><span class="ft4"> Operator</span></div>
<div style="position:absolute;top:866;left:229"><span class="ft0"> </span></div>
<div style="position:absolute;top:867;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:871;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:890;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:921;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:907;left:90"><span class="ft1"> Any object in Java must be created using </span></div>
<div style="position:absolute;top:907;left:347"><span class="ft2">new</span></div>
<div style="position:absolute;top:907;left:372"><span class="ft1">. However, in Java, </span></div>
<div style="position:absolute;top:907;left:494"><span class="ft2">new</span></div>
<div style="position:absolute;top:907;left:519"><span class="ft1"> returns a </span></div>
<div style="position:absolute;top:924;left:90"><span class="ft1">reference, not a pointer as in C++. Thus, pointers aren't necessary to use </span></div>
<div style="position:absolute;top:924;left:544"><span class="ft2">new</span></div>
<div style="position:absolute;top:924;left:569"><span class="ft1">. Here's </span></div>
<div style="position:absolute;top:941;left:90"><span class="ft1">one way to create an object:</span></div>
<div style="position:absolute;top:938;left:264"><span class="ft0"> </span></div>
<div style="position:absolute;top:921;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:941;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:960;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:975;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:975;left:113"><span class="ft2"> BankAccount ba1;</span></div>
<div style="position:absolute;top:972;left:247"><span class="ft0"> </span></div>
<div style="position:absolute;top:975;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:979;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:995;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:994;left:113"><span class="ft2"> ba1 = new BankAccount();</span></div>
<div style="position:absolute;top:991;left:313"><span class="ft0"> </span></div>
<div style="position:absolute;top:995;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:998;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1017;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:1048;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1033;left:90"><span class="ft1"> Eliminating pointers makes for a more secure system. As a programmer, you can't find </span></div>
<div style="position:absolute;top:1050;left:90"><span class="ft1">out the actual address of </span></div>
<div style="position:absolute;top:1050;left:246"><span class="ft2">ba1</span></div>
<div style="position:absolute;top:1050;left:271"><span class="ft1">, so you can't accidentally corrupt it. However, you probably </span></div>
<div style="position:absolute;top:1067;left:90"><span class="ft1">don't need to know it unless you're planning something wicked.</span></div>
<div style="position:absolute;top:1064;left:477"><span class="ft0"> </span></div>
<div style="position:absolute;top:1048;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:1067;left:79"><span class="ft0"> </span></div>
<script TYPE="text/javascript">
			var currentZoom = parent.ltop.currentZoom;
			if(currentZoom != undefined)
				document.body.style.zoom=currentZoom/100;
			</script>
</body>
</html>