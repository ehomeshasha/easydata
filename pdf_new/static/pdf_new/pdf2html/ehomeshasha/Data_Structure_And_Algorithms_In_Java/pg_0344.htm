<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0052)http://www.verypdf.com/ -->
<html>
<head>
<title>pg_0344</title>

<style>
<!-- 
select {font-size:12px;}
A:link {text-decoration: none; color: blue}
A:visited {text-decoration: none; color: purple}
A:active {text-decoration: red}
A:hover {text-decoration: underline; color:red}
-->
</style>
<script TYPE="text/javascript"> 
<!-- hide 
function killerrors()
{ 
return true; 
} 
window.onerror = killerrors; 
// --> 
</script>
<style type="text/css">
<!--
.ft0{font-style:normal;font-weight:normal;font-size:16px;font-family:Times New Roman;color:#000000;}
.ft1{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft2{font-style:normal;font-weight:bold;font-size:16px;font-family:Verdana;color:#000000;}
.ft3{font-style:normal;font-weight:bold;font-size:18px;font-family:Arial;color:#000080;}
.ft4{font-style:normal;font-weight:normal;font-size:13px;font-family:Times New Roman;color:#010100;}
.ft5{font-style:normal;font-weight:bold;font-size:18px;font-family:Arial;color:#800000;}
.ft6{font-style:normal;font-weight:bold;font-size:18px;font-family:Times New Roman;color:#800000;}
.ft7{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#008000;}
.ft8{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#000000;}
-->
</style>
</head>
<body vlink="#FFFFFF" link="#FFFFFF" bgcolor="#ffffff">

<script TYPE="text/javascript">
var currentpos,timer; 
function initialize() 
{ 
timer=setInterval("scrollwindow()",10);
} 
function sc(){
clearInterval(timer); 
}
function scrollwindow() 
{ 
currentpos=document.body.scrollTop; 
window.scroll(0,++currentpos); 
if (currentpos != document.body.scrollTop) 
sc();
} 
document.onmousedown=sc
document.ondblclick=initialize
</script>
<div style="position:absolute;top:0;left:0"><img width="826" height="1169" src="pg_0344.jpg" ALT=""></div>
<div style="position:absolute;top:1102;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1102;left:391"><span class="ft0"> - 344 -</span></div>
<div style="position:absolute;top:81;left:90"><span class="ft1">out where the three data items from the split node are going to go. Then press Ins again </span></div>
<div style="position:absolute;top:97;left:90"><span class="ft1">to see if you're right.</span></div>
<div style="position:absolute;top:94;left:215"><span class="ft0"> </span></div>
<div style="position:absolute;top:97;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:116;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:145;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:132;left:90"><span class="ft1"> As the tree gets larger you'll need to move around it to see all the nodes. Click on a node </span></div>
<div style="position:absolute;top:148;left:90"><span class="ft1">to see its children (and their children, and so on). If you lose track of where you are, use </span></div>
<div style="position:absolute;top:164;left:90"><span class="ft1">the Zoom key to see the big picture.</span></div>
<div style="position:absolute;top:161;left:311"><span class="ft0"> </span></div>
<div style="position:absolute;top:145;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:164;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:183;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:237;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:199;left:90"><span class="ft1"> How many data items can you insert in the tree. There's a limit because only four levels </span></div>
<div style="position:absolute;top:215;left:90"><span class="ft1">are allowed. Four levels can potentially contain 1 + 4 + 16 + 64 nodes, for a total of 85 </span></div>
<div style="position:absolute;top:231;left:90"><span class="ft1">nodes (all visible on the zoomed-out display). Assume a full 3 items per node gives 255 </span></div>
<div style="position:absolute;top:247;left:90"><span class="ft1">data items. However, the nodes can't all be full at the same time. Long before they fill up, </span></div>
<div style="position:absolute;top:263;left:90"><span class="ft1">another root split, leading to five levels, would be necessary, and this is impossible </span></div>
<div style="position:absolute;top:279;left:90"><span class="ft1">because the applet supports only four levels.</span></div>
<div style="position:absolute;top:276;left:365"><span class="ft0"> </span></div>
<div style="position:absolute;top:237;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:279;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:298;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:336;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:314;left:90"><span class="ft1"> You can insert the most items by deliberately inserting them into nodes that lie on paths </span></div>
<div style="position:absolute;top:330;left:90"><span class="ft1">with no full nodes, so that no splits are necessary. Of course this is not a reasonable </span></div>
<div style="position:absolute;top:346;left:90"><span class="ft1">procedure with real data. For random data y ou probably can't insert more than about 50 </span></div>
<div style="position:absolute;top:362;left:90"><span class="ft1">items into the applet. The Fill button allows only 45, to minimize the possibility of overflow.</span></div>
<div style="position:absolute;top:359;left:642"><span class="ft0"> </span></div>
<div style="position:absolute;top:362;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:379;left:79"><span class="ft2"> </span></div>
<div style="position:absolute;top:398;left:79"><span class="ft3">Java Code for a 2-3-4 Tree</span></div>
<div style="position:absolute;top:400;left:312"><span class="ft0"> </span></div>
<div style="position:absolute;top:399;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:404;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:423;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:461;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:439;left:90"><span class="ft1"> In this section we'll examine a Java program that models a 2-3-4 tree. We'll show the </span></div>
<div style="position:absolute;top:455;left:90"><span class="ft1">complete </span></div>
<div style="position:absolute;top:455;left:150"><span class="ft4">tree234.java</span></div>
<div style="position:absolute;top:455;left:250"><span class="ft1"> program at the end of the section. This is a relatively complex </span></div>
<div style="position:absolute;top:472;left:90"><span class="ft1">program, and the classes are extensively interrelated, so you'll need to peruse the entire </span></div>
<div style="position:absolute;top:488;left:90"><span class="ft1">listing to see how it works.</span></div>
<div style="position:absolute;top:485;left:252"><span class="ft0"> </span></div>
<div style="position:absolute;top:461;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:488;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:507;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:529;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:523;left:90"><span class="ft1"> There are four classes: </span></div>
<div style="position:absolute;top:523;left:236"><span class="ft4">DataItem</span></div>
<div style="position:absolute;top:523;left:303"><span class="ft1">, </span></div>
<div style="position:absolute;top:523;left:310"><span class="ft4">Node</span></div>
<div style="position:absolute;top:523;left:344"><span class="ft1">, </span></div>
<div style="position:absolute;top:523;left:352"><span class="ft4">Tree234</span></div>
<div style="position:absolute;top:523;left:410"><span class="ft1">, and </span></div>
<div style="position:absolute;top:523;left:445"><span class="ft4">Tree234App</span></div>
<div style="position:absolute;top:523;left:528"><span class="ft1">. We'll discuss </span></div>
<div style="position:absolute;top:540;left:90"><span class="ft1">them in turn.</span></div>
<div style="position:absolute;top:537;left:167"><span class="ft0"> </span></div>
<div style="position:absolute;top:529;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:540;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:559;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:577;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:575;left:90"><span class="ft5"> The </span></div>
<div style="position:absolute;top:575;left:129"><span class="ft6">DataItem</span></div>
<div style="position:absolute;top:575;left:219"><span class="ft5"> Class</span></div>
<div style="position:absolute;top:577;left:274"><span class="ft0"> </span></div>
<div style="position:absolute;top:577;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:583;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:602;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:632;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:618;left:90"><span class="ft1"> Objects of this class represent the data items stored in nodes. In a real-world program </span></div>
<div style="position:absolute;top:634;left:90"><span class="ft1">each object would contain an entire personnel or inventory record; but here there's only </span></div>
<div style="position:absolute;top:650;left:90"><span class="ft1">one piece of data, of type </span></div>
<div style="position:absolute;top:650;left:250"><span class="ft4">double</span></div>
<div style="position:absolute;top:650;left:300"><span class="ft1">, associated with each </span></div>
<div style="position:absolute;top:650;left:441"><span class="ft4">DataItem</span></div>
<div style="position:absolute;top:650;left:507"><span class="ft1"> object.</span></div>
<div style="position:absolute;top:647;left:552"><span class="ft0"> </span></div>
<div style="position:absolute;top:632;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:651;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:670;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:700;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:686;left:90"><span class="ft1"> The only actions that objects of this class can perform are to initialize themselves and </span></div>
<div style="position:absolute;top:702;left:90"><span class="ft1">display themselves. The display is the data value preceded by a slash: /27. (The display </span></div>
<div style="position:absolute;top:718;left:90"><span class="ft1">routine in the </span></div>
<div style="position:absolute;top:718;left:174"><span class="ft4">Node</span></div>
<div style="position:absolute;top:718;left:208"><span class="ft1"> class will call this routine to display all the items in a node.)</span></div>
<div style="position:absolute;top:715;left:573"><span class="ft0"> </span></div>
<div style="position:absolute;top:700;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:719;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:738;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:756;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:754;left:90"><span class="ft5"> The </span></div>
<div style="position:absolute;top:754;left:129"><span class="ft6">Node</span></div>
<div style="position:absolute;top:754;left:174"><span class="ft5"> Class</span></div>
<div style="position:absolute;top:756;left:229"><span class="ft0"> </span></div>
<div style="position:absolute;top:756;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:762;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:781;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:812;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:797;left:90"><span class="ft1"> The </span></div>
<div style="position:absolute;top:797;left:118"><span class="ft4">Node</span></div>
<div style="position:absolute;top:797;left:151"><span class="ft1"> class contains two arrays: </span></div>
<div style="position:absolute;top:797;left:318"><span class="ft4">childArray</span></div>
<div style="position:absolute;top:797;left:401"><span class="ft1"> and </span></div>
<div style="position:absolute;top:797;left:432"><span class="ft4">itemArray</span></div>
<div style="position:absolute;top:797;left:507"><span class="ft1">. The first is four cells </span></div>
<div style="position:absolute;top:814;left:90"><span class="ft1">long and holds references to whatever children the node might have. The second is three </span></div>
<div style="position:absolute;top:830;left:90"><span class="ft1">cells long and holds references to objects of type </span></div>
<div style="position:absolute;top:830;left:394"><span class="ft4">DataItem</span></div>
<div style="position:absolute;top:830;left:461"><span class="ft1"> contained in the node.</span></div>
<div style="position:absolute;top:827;left:602"><span class="ft0">   </span></div>
<div style="position:absolute;top:831;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:850;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:889;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:867;left:90"><span class="ft1"> Note that the data items in </span></div>
<div style="position:absolute;top:867;left:256"><span class="ft4">itemArray</span></div>
<div style="position:absolute;top:867;left:331"><span class="ft1"> comprise an ordered array. New items are </span></div>
<div style="position:absolute;top:883;left:90"><span class="ft1">added, or existing ones removed, in the same way they would be in any ordered array </span></div>
<div style="position:absolute;top:899;left:90"><span class="ft1">(as described in </span></div>
<div style="position:absolute;top:899;left:192"><span class="ft7">Chapter 2, &quot;Arrays&quot;</span></div>
<div style="position:absolute;top:899;left:311"><span class="ft8">). Items may need to be shifted to make room to </span></div>
<div style="position:absolute;top:915;left:90"><span class="ft8">insert a new item in order or to close an empty cell when an item is removed.</span></div>
<div style="position:absolute;top:912;left:562"><span class="ft0"> </span></div>
<div style="position:absolute;top:889;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:915;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:934;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:973;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:951;left:90"><span class="ft1"> We've chosen to store the number of items currently in the node (</span></div>
<div style="position:absolute;top:951;left:492"><span class="ft4">numItems</span></div>
<div style="position:absolute;top:951;left:559"><span class="ft1">) and the </span></div>
<div style="position:absolute;top:968;left:90"><span class="ft1">node's parent (</span></div>
<div style="position:absolute;top:968;left:182"><span class="ft4">parent</span></div>
<div style="position:absolute;top:968;left:232"><span class="ft1">) as fields in this class. Neither of these is strictly necessary, and </span></div>
<div style="position:absolute;top:985;left:90"><span class="ft1">could be eliminated to make the nodes smaller. However, including them clarifies the </span></div>
<div style="position:absolute;top:1001;left:90"><span class="ft1">programming, and only a small price is paid in increased node size.</span></div>
<div style="position:absolute;top:998;left:504"><span class="ft0"> </span></div>
<div style="position:absolute;top:973;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:1001;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1020;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:1051;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1036;left:90"><span class="ft1"> Various small utility routines are provided in the </span></div>
<div style="position:absolute;top:1036;left:385"><span class="ft4">Node</span></div>
<div style="position:absolute;top:1036;left:422"><span class="ft1"> class to manage the connections to </span></div>
<div style="position:absolute;top:1053;left:90"><span class="ft1">child and parent and to check if the node is full and if it is a leaf. However, the major work </span></div>
<div style="position:absolute;top:1070;left:90"><span class="ft1">is done by the </span></div>
<div style="position:absolute;top:1070;left:181"><span class="ft4">findItem()</span></div>
<div style="position:absolute;top:1070;left:264"><span class="ft1">, </span></div>
<div style="position:absolute;top:1070;left:272"><span class="ft4">insertItem()</span></div>
<div style="position:absolute;top:1070;left:372"><span class="ft1">, and </span></div>
<div style="position:absolute;top:1070;left:406"><span class="ft4">removeItem()</span></div>
<div style="position:absolute;top:1070;left:506"><span class="ft1"> routines. These </span></div>
<div style="position:absolute;top:1051;left:640"><span class="ft0">  </span></div>
<script TYPE="text/javascript">
			var currentZoom = parent.ltop.currentZoom;
			if(currentZoom != undefined)
				document.body.style.zoom=currentZoom/100;
			</script>
</body>
</html>