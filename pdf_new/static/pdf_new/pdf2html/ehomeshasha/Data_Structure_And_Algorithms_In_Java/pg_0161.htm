<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0052)http://www.verypdf.com/ -->
<html>
<head>
<title>pg_0161</title>

<style>
<!-- 
select {font-size:12px;}
A:link {text-decoration: none; color: blue}
A:visited {text-decoration: none; color: purple}
A:active {text-decoration: red}
A:hover {text-decoration: underline; color:red}
-->
</style>
<script TYPE="text/javascript"> 
<!-- hide 
function killerrors()
{ 
return true; 
} 
window.onerror = killerrors; 
// --> 
</script>
<style type="text/css">
<!--
.ft0{font-style:normal;font-weight:normal;font-size:16px;font-family:Times New Roman;color:#000000;}
.ft1{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft2{font-style:normal;font-weight:normal;font-size:13px;font-family:Times New Roman;color:#010100;}
.ft3{font-style:normal;font-weight:bold;font-size:16px;font-family:Verdana;color:#000000;}
.ft4{font-style:normal;font-weight:bold;font-size:18px;font-family:Arial;color:#000080;}
.ft5{font-style:normal;font-weight:bold;font-size:18px;font-family:Arial;color:#800000;}
.ft6{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#008000;}
.ft7{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#000000;}
.ft8{font-style:normal;font-weight:normal;font-size:13px;font-family:Times New Roman;color:#000000;}
-->
</style>
</head>
<body vlink="#FFFFFF" link="#FFFFFF" bgcolor="#ffffff">

<script TYPE="text/javascript">
var currentpos,timer; 
function initialize() 
{ 
timer=setInterval("scrollwindow()",10);
} 
function sc(){
clearInterval(timer); 
}
function scrollwindow() 
{ 
currentpos=document.body.scrollTop; 
window.scroll(0,++currentpos); 
if (currentpos != document.body.scrollTop) 
sc();
} 
document.onmousedown=sc
document.ondblclick=initialize
</script>
<div style="position:absolute;top:0;left:0"><img width="826" height="1169" src="pg_0161.jpg" ALT=""></div>
<div style="position:absolute;top:1102;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1102;left:391"><span class="ft0"> - 161 -</span></div>
<div style="position:absolute;top:84;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:131;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:100;left:90"><span class="ft1"> Unfortunately, making a list double-ended doesn't help you to delete the last link, because </span></div>
<div style="position:absolute;top:116;left:90"><span class="ft1">there is still no reference to the next-to-last link, whose </span></div>
<div style="position:absolute;top:116;left:429"><span class="ft2">next</span></div>
<div style="position:absolute;top:116;left:463"><span class="ft1"> field would need to be </span></div>
<div style="position:absolute;top:133;left:90"><span class="ft1">changed to </span></div>
<div style="position:absolute;top:133;left:163"><span class="ft2">null</span></div>
<div style="position:absolute;top:133;left:196"><span class="ft1"> if the last link were deleted. To conveniently delete the last link, you </span></div>
<div style="position:absolute;top:150;left:90"><span class="ft1">would need a doubly linked list, which we'll look at soon. (Of course, you could also </span></div>
<div style="position:absolute;top:166;left:90"><span class="ft1">traverse the entire list to find the last link, but that's not very efficient.)</span></div>
<div style="position:absolute;top:163;left:515"><span class="ft0"> </span></div>
<div style="position:absolute;top:166;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:183;left:79"><span class="ft3"> </span></div>
<div style="position:absolute;top:202;left:79"><span class="ft4">Linked-List Efficiency</span></div>
<div style="position:absolute;top:204;left:273"><span class="ft0"> </span></div>
<div style="position:absolute;top:203;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:208;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:227;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:249;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:243;left:90"><span class="ft1"> Insertion and deletion at the beginning of a linked list are very fast. They involve changing </span></div>
<div style="position:absolute;top:259;left:90"><span class="ft1">only one or two references, which takes O(1) time.</span></div>
<div style="position:absolute;top:256;left:400"><span class="ft0"> </span></div>
<div style="position:absolute;top:249;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:259;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:278;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:324;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:294;left:90"><span class="ft1"> Finding, deleting, or insertion next to a specific item requires searching through, on the </span></div>
<div style="position:absolute;top:310;left:90"><span class="ft1">average, half the items in the list. This requires O(N) comparisons. An array is also O(N) </span></div>
<div style="position:absolute;top:326;left:90"><span class="ft1">for these operations, but the linked list is nevertheless faster because nothing needs to </span></div>
<div style="position:absolute;top:342;left:90"><span class="ft1">be moved when an item is inserted or deleted. The increased efficiency can be </span></div>
<div style="position:absolute;top:358;left:90"><span class="ft1">significant, especially if a copy takes much longer than a comparison.</span></div>
<div style="position:absolute;top:355;left:516"><span class="ft0"> </span></div>
<div style="position:absolute;top:324;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:358;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:377;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:439;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:393;left:90"><span class="ft1"> Of course, another important advantage of linked lists over arrays is that the linked list uses </span></div>
<div style="position:absolute;top:409;left:90"><span class="ft1">exactly as much memory as it needs, and can expand to fill all of the available memory. </span></div>
<div style="position:absolute;top:425;left:90"><span class="ft1">The size of an array is fixed when it's created; this usually leads to inefficiency because the </span></div>
<div style="position:absolute;top:441;left:90"><span class="ft1">array is too large, or to running out of room because the array is too small. Vectors, which </span></div>
<div style="position:absolute;top:457;left:90"><span class="ft1">are expandable arrays, may solve this problem to some extent, but they usually expand in </span></div>
<div style="position:absolute;top:473;left:90"><span class="ft1">fixed-sized increments (such as doubling the size of the array whenever it's about to </span></div>
<div style="position:absolute;top:489;left:90"><span class="ft1">overflow). This is still not as efficient a use of memory as a linked list.</span></div>
<div style="position:absolute;top:486;left:514"><span class="ft0"> </span></div>
<div style="position:absolute;top:489;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:506;left:79"><span class="ft3"> </span></div>
<div style="position:absolute;top:526;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:525;left:90"><span class="ft4"> Abstract Data Types</span></div>
<div style="position:absolute;top:527;left:272"><span class="ft0"> </span></div>
<div style="position:absolute;top:526;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:531;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:550;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:580;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:566;left:90"><span class="ft1"> In this section we'll shift gears and discuss a topic that's more general than linked lists: </span></div>
<div style="position:absolute;top:582;left:90"><span class="ft1">Abstract Data Types (ADTs). What is an ADT. Roughly speaking, it's a way of looking at </span></div>
<div style="position:absolute;top:598;left:90"><span class="ft1">a data structure: focusing on what it does, and ignoring how it does it.</span></div>
<div style="position:absolute;top:595;left:516"><span class="ft0"> </span></div>
<div style="position:absolute;top:580;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:598;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:617;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:663;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:633;left:90"><span class="ft1"> Stacks and queues are examples of ADTs. We've already seen that both stacks and </span></div>
<div style="position:absolute;top:649;left:90"><span class="ft1">queues can be implemented using arrays. Before we return to a discussion of ADTs, let's </span></div>
<div style="position:absolute;top:665;left:90"><span class="ft1">see how stacks and queues can be implemented using linked lists. This will demonstrate </span></div>
<div style="position:absolute;top:681;left:90"><span class="ft1">the &quot;abstract&quot; nature of stacks and queues: how they can be considered separately from </span></div>
<div style="position:absolute;top:697;left:90"><span class="ft1">their implementation.</span></div>
<div style="position:absolute;top:694;left:219"><span class="ft0"> </span></div>
<div style="position:absolute;top:663;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:697;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:716;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:733;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:732;left:90"><span class="ft5"> A Stack Implemented by a Linked List</span></div>
<div style="position:absolute;top:734;left:427"><span class="ft0"> </span></div>
<div style="position:absolute;top:733;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:738;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:757;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:787;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:773;left:90"><span class="ft1"> When we created a stack in the </span></div>
<div style="position:absolute;top:773;left:288"><span class="ft6">last chapter</span></div>
<div style="position:absolute;top:773;left:360"><span class="ft7">, we used an ordinary Java array to hold the </span></div>
<div style="position:absolute;top:789;left:90"><span class="ft7">stack's data. The stack's </span></div>
<div style="position:absolute;top:789;left:245"><span class="ft8">push()</span></div>
<div style="position:absolute;top:789;left:294"><span class="ft7"> and </span></div>
<div style="position:absolute;top:789;left:325"><span class="ft8">pop()</span></div>
<div style="position:absolute;top:789;left:367"><span class="ft7"> operations were actually carried out by </span></div>
<div style="position:absolute;top:806;left:90"><span class="ft7">array operations such as</span></div>
<div style="position:absolute;top:803;left:242"><span class="ft0"> </span></div>
<div style="position:absolute;top:787;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:806;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:825;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:841;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:840;left:113"><span class="ft2"> arr[++top] = data;</span></div>
<div style="position:absolute;top:837;left:263"><span class="ft0"> </span></div>
<div style="position:absolute;top:841;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:844;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:863;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:879;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:879;left:90"><span class="ft1"> and</span></div>
<div style="position:absolute;top:876;left:114"><span class="ft0"> </span></div>
<div style="position:absolute;top:879;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:883;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:902;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:917;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:917;left:113"><span class="ft2"> data = arr[top--];</span></div>
<div style="position:absolute;top:914;left:263"><span class="ft0"> </span></div>
<div style="position:absolute;top:917;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:921;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:940;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:956;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:956;left:90"><span class="ft1"> which insert data into, and take it out of, an array.</span></div>
<div style="position:absolute;top:953;left:394"><span class="ft0"> </span></div>
<div style="position:absolute;top:956;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:959;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:978;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:1001;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:995;left:90"><span class="ft1"> We can also use a linked list to hold a stack's data. In this case the </span></div>
<div style="position:absolute;top:995;left:504"><span class="ft2">push()</span></div>
<div style="position:absolute;top:995;left:554"><span class="ft1"> and </span></div>
<div style="position:absolute;top:995;left:585"><span class="ft2">pop()</span></div>
<div style="position:absolute;top:995;left:627"><span class="ft1"> </span></div>
<div style="position:absolute;top:1012;left:90"><span class="ft1">operations would be carried out by operations like</span></div>
<div style="position:absolute;top:1009;left:396"><span class="ft0"> </span></div>
<div style="position:absolute;top:1001;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:1012;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1031;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:1046;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1046;left:113"><span class="ft2"> theList.insertFirst(data)</span></div>
<div style="position:absolute;top:1043;left:322"><span class="ft0"> </span></div>
<div style="position:absolute;top:1046;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:1050;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1069;left:80"><span class="ft0"> </span></div>
<script TYPE="text/javascript">
			var currentZoom = parent.ltop.currentZoom;
			if(currentZoom != undefined)
				document.body.style.zoom=currentZoom/100;
			</script>
</body>
</html>