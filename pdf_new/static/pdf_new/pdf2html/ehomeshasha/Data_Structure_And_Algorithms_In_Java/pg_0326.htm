<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0052)http://www.verypdf.com/ -->
<html>
<head>
<title>pg_0326</title>

<style>
<!-- 
select {font-size:12px;}
A:link {text-decoration: none; color: blue}
A:visited {text-decoration: none; color: purple}
A:active {text-decoration: red}
A:hover {text-decoration: underline; color:red}
-->
</style>
<script TYPE="text/javascript"> 
<!-- hide 
function killerrors()
{ 
return true; 
} 
window.onerror = killerrors; 
// --> 
</script>
<style type="text/css">
<!--
.ft0{font-style:normal;font-weight:normal;font-size:16px;font-family:Times New Roman;color:#000000;}
.ft1{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft2{font-style:normal;font-weight:bold;font-size:16px;font-family:Arial;color:#010100;}
.ft3{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#008000;}
.ft4{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#000000;}
.ft5{font-style:normal;font-weight:bold;font-size:18px;font-family:Arial;color:#800000;}
.ft6{font-style:normal;font-weight:bold;font-size:13px;font-family:Arial;color:#010100;}
.ft7{font-style:normal;font-weight:normal;font-size:13px;font-family:Times New Roman;color:#000000;}
-->
</style>
</head>
<body vlink="#FFFFFF" link="#FFFFFF" bgcolor="#ffffff">

<script TYPE="text/javascript">
var currentpos,timer; 
function initialize() 
{ 
timer=setInterval("scrollwindow()",10);
} 
function sc(){
clearInterval(timer); 
}
function scrollwindow() 
{ 
currentpos=document.body.scrollTop; 
window.scroll(0,++currentpos); 
if (currentpos != document.body.scrollTop) 
sc();
} 
document.onmousedown=sc
document.ondblclick=initialize
</script>
<div style="position:absolute;top:0;left:0"><img width="826" height="1169" src="pg_0326.jpg" ALT=""></div>
<div style="position:absolute;top:1102;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1102;left:391"><span class="ft0"> - 326 -</span></div>
<div style="position:absolute;top:81;left:90"><span class="ft1">other red-black rules. Clearly there are no red-to-red conflicts, because we've made </span></div>
<div style="position:absolute;top:97;left:90"><span class="ft1">more nodes black and none red. Thus, Rule 3 isn't violated. Also, because the root and </span></div>
<div style="position:absolute;top:112;left:90"><span class="ft1">one or the other of its two children are in every path, the black height of every path is </span></div>
<div style="position:absolute;top:128;left:90"><span class="ft1">increased the same amount; that is, by 1. Thus, Rule 4 isn't violated either.</span></div>
<div style="position:absolute;top:125;left:549"><span class="ft0"> </span></div>
<div style="position:absolute;top:129;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:148;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:163;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:163;left:90"><span class="ft2"> Finally, Just Insert It</span></div>
<div style="position:absolute;top:163;left:251"><span class="ft0"> </span></div>
<div style="position:absolute;top:163;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:167;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:186;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:224;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:202;left:90"><span class="ft1"> Once you've worked your way down to the appropriate place in the tree, performing color </span></div>
<div style="position:absolute;top:218;left:90"><span class="ft1">flips (and rotations) if necessary on the way down, you can then insert the new node as </span></div>
<div style="position:absolute;top:234;left:90"><span class="ft1">described in the</span></div>
<div style="position:absolute;top:234;left:188"><span class="ft3"> last chapter</span></div>
<div style="position:absolute;top:234;left:264"><span class="ft4"> for an ordinary binary search tree. However, that's not the </span></div>
<div style="position:absolute;top:250;left:90"><span class="ft4">end of the story.</span></div>
<div style="position:absolute;top:247;left:190"><span class="ft0"> </span></div>
<div style="position:absolute;top:224;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:250;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:269;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:286;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:285;left:90"><span class="ft5"> Rotations Once the Node is Inserted</span></div>
<div style="position:absolute;top:287;left:413"><span class="ft0"> </span></div>
<div style="position:absolute;top:286;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:291;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:310;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:332;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:326;left:90"><span class="ft1"> The insertion of the new node may cause the red-black rules to be violated. Therefore, </span></div>
<div style="position:absolute;top:342;left:90"><span class="ft1">following the insertion, we must check for rule violations and take appropriate steps.</span></div>
<div style="position:absolute;top:339;left:605"><span class="ft0">   </span></div>
<div style="position:absolute;top:342;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:361;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:391;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:377;left:90"><span class="ft1"> Remember that, as described earlier, the newly inserted node, which we'll call X, is </span></div>
<div style="position:absolute;top:393;left:90"><span class="ft1">always red. X may be located in various positions relative to P and G, as shown in Figure </span></div>
<div style="position:absolute;top:409;left:90"><span class="ft1">9.12.</span></div>
<div style="position:absolute;top:406;left:121"><span class="ft0"> </span></div>
<div style="position:absolute;top:391;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:409;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:428;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:570;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:701;left:319"><span class="ft0">  </span></div>
<div style="position:absolute;top:570;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:701;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:720;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:736;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:736;left:136"><span class="ft6"> Figure 9.12:  Handed variations of node being inserted</span></div>
<div style="position:absolute;top:733;left:475"><span class="ft0"> </span></div>
<div style="position:absolute;top:736;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:758;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:757;left:136"><span class="ft7">  </span></div>
<div style="position:absolute;top:757;left:640"><span class="ft7">  </span></div>
<div style="position:absolute;top:759;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:778;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:815;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:794;left:90"><span class="ft1"> Remember that a node X is an outside grandchild if it's on the same side of its parent P </span></div>
<div style="position:absolute;top:810;left:90"><span class="ft1">that P is of its parent G. That is, X is an outside grandchild if either it's a left child of P and </span></div>
<div style="position:absolute;top:825;left:90"><span class="ft1">P is a left child of G, or it's a right child of  P and P is a right child of G. Conversely, X is an </span></div>
<div style="position:absolute;top:841;left:90"><span class="ft1">inside grandchild if it's on the opposite side of its parent P that P is of its parent G.</span></div>
<div style="position:absolute;top:838;left:592"><span class="ft0"> </span></div>
<div style="position:absolute;top:815;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:842;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:861;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:906;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:877;left:90"><span class="ft1"> If X is an outside grandchild, it may be either the left or right child of P, depending on </span></div>
<div style="position:absolute;top:893;left:90"><span class="ft1">whether P is the left or right child of G. Two similar possibilities exist if X is an inside </span></div>
<div style="position:absolute;top:909;left:90"><span class="ft1">grandchild. It's these four situations that are shown in Figure 9.12. This multiplicity of </span></div>
<div style="position:absolute;top:924;left:90"><span class="ft1">what we might call &quot;handed&quot; (left or right) variations is one reason the red-black insertion </span></div>
<div style="position:absolute;top:940;left:90"><span class="ft1">routine is challenging to program.</span></div>
<div style="position:absolute;top:937;left:296"><span class="ft0"> </span></div>
<div style="position:absolute;top:906;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:941;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:960;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:1021;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:976;left:90"><span class="ft1"> The action we take to restore the red-black rules is determined by the colors and </span></div>
<div style="position:absolute;top:992;left:90"><span class="ft1">configuration of X and its relatives. Perhaps surprisingly, there are only three major ways </span></div>
<div style="position:absolute;top:1008;left:90"><span class="ft1">in which nodes can be arranged (not counting the handed variations already mentioned). </span></div>
<div style="position:absolute;top:1024;left:90"><span class="ft1">Each possibility must be dealt with in a different way to preserve red-black correctness </span></div>
<div style="position:absolute;top:1039;left:90"><span class="ft1">and thereby lead to a balanced tree. We'll list the three possibilities briefly, then discuss </span></div>
<div style="position:absolute;top:1055;left:90"><span class="ft1">each one in detail in its own section. Figure 9.13 </span></div>
<div style="position:absolute;top:1055;left:391"><span class="ft4">shows what they look like. Remember </span></div>
<div style="position:absolute;top:1071;left:90"><span class="ft4">that X is always red.</span></div>
<div style="position:absolute;top:1068;left:215"><span class="ft0"> </span></div>
<div style="position:absolute;top:1021;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:1072;left:79"><span class="ft0"> </span></div>
<script TYPE="text/javascript">
			var currentZoom = parent.ltop.currentZoom;
			if(currentZoom != undefined)
				document.body.style.zoom=currentZoom/100;
			</script>
</body>
</html>