<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0052)http://www.verypdf.com/ -->
<html>
<head>
<title>pg_0283</title>

<style>
<!-- 
select {font-size:12px;}
A:link {text-decoration: none; color: blue}
A:visited {text-decoration: none; color: purple}
A:active {text-decoration: red}
A:hover {text-decoration: underline; color:red}
-->
</style>
<script TYPE="text/javascript"> 
<!-- hide 
function killerrors()
{ 
return true; 
} 
window.onerror = killerrors; 
// --> 
</script>
<style type="text/css">
<!--
.ft0{font-style:normal;font-weight:normal;font-size:16px;font-family:Times New Roman;color:#000000;}
.ft1{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft2{font-style:italic;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft3{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#008000;}
.ft4{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#000000;}
.ft5{font-style:normal;font-weight:bold;font-size:13px;font-family:Arial;color:#010100;}
.ft6{font-style:normal;font-weight:normal;font-size:13px;font-family:Times New Roman;color:#000000;}
.ft7{font-style:italic;font-weight:normal;font-size:13px;font-family:Arial;color:#000000;}
.ft8{font-style:normal;font-weight:bold;font-size:16px;font-family:Verdana;color:#000000;}
.ft9{font-style:normal;font-weight:bold;font-size:18px;font-family:Arial;color:#000080;}
.ft10{font-style:normal;font-weight:normal;font-size:13px;font-family:Times New Roman;color:#010100;}
-->
</style>
</head>
<body vlink="#FFFFFF" link="#FFFFFF" bgcolor="#ffffff">

<script TYPE="text/javascript">
var currentpos,timer; 
function initialize() 
{ 
timer=setInterval("scrollwindow()",10);
} 
function sc(){
clearInterval(timer); 
}
function scrollwindow() 
{ 
currentpos=document.body.scrollTop; 
window.scroll(0,++currentpos); 
if (currentpos != document.body.scrollTop) 
sc();
} 
document.onmousedown=sc
document.ondblclick=initialize
</script>
<div style="position:absolute;top:0;left:0"><img width="826" height="1169" src="pg_0283.jpg" ALT=""></div>
<div style="position:absolute;top:1102;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1102;left:391"><span class="ft0"> - 283 -</span></div>
<div style="position:absolute;top:94;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:81;left:90"><span class="ft1"> A tree consists of nodes connected by edges. Figure 8.1 shows a tree. In such a picture </span></div>
<div style="position:absolute;top:97;left:90"><span class="ft1">of a tree (or in our Workshop applet) the nodes are represented as circles, and the edges </span></div>
<div style="position:absolute;top:112;left:90"><span class="ft1">as lines connecting the circles.</span></div>
<div style="position:absolute;top:109;left:279"><span class="ft0"> </span></div>
<div style="position:absolute;top:94;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:113;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:132;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:169;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:148;left:90"><span class="ft1"> Trees have been studied extensively as abstract mathematical entities, so there's a large </span></div>
<div style="position:absolute;top:164;left:90"><span class="ft1">amount of theoretical knowledge about them. A tree is actually an instance of a more </span></div>
<div style="position:absolute;top:180;left:90"><span class="ft1">general category called a graph, but we don't need to worry about that here. We'll discuss </span></div>
<div style="position:absolute;top:196;left:90"><span class="ft1">graphs in</span></div>
<div style="position:absolute;top:196;left:148"><span class="ft3"> Chapters 13, &quot;Graphs</span></div>
<div style="position:absolute;top:196;left:285"><span class="ft4">,&quot; and</span></div>
<div style="position:absolute;top:196;left:321"><span class="ft3"> 14, &quot;Weighted Graphs.&quot;</span></div>
<div style="position:absolute;top:193;left:470"><span class="ft0"> </span></div>
<div style="position:absolute;top:169;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:196;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:215;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:283;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:340;left:418"><span class="ft0">  </span></div>
<div style="position:absolute;top:283;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:340;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:359;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:374;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:375;left:136"><span class="ft5"> Figure 8.1:  A tree</span></div>
<div style="position:absolute;top:372;left:251"><span class="ft0"> </span></div>
<div style="position:absolute;top:374;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:397;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:396;left:136"><span class="ft6">  </span></div>
<div style="position:absolute;top:396;left:640"><span class="ft6">  </span></div>
<div style="position:absolute;top:397;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:417;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:454;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:432;left:90"><span class="ft1"> In computer programs, nodes often represent such entities as people, car parts, airline </span></div>
<div style="position:absolute;top:448;left:90"><span class="ft1">reservations, and so on; in other words, the typical items we store in any kind of data </span></div>
<div style="position:absolute;top:464;left:90"><span class="ft1">structure. In an OOP language such as Java, these real-world entities are represented by </span></div>
<div style="position:absolute;top:480;left:90"><span class="ft1">objects.</span></div>
<div style="position:absolute;top:477;left:138"><span class="ft0"> </span></div>
<div style="position:absolute;top:454;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:480;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:500;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:545;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:515;left:90"><span class="ft1"> The lines (edges) between the nodes represent the way the nodes are related. Roughly </span></div>
<div style="position:absolute;top:531;left:90"><span class="ft1">speaking, the lines represent convenience: It's easy (and fast) for a program to get from </span></div>
<div style="position:absolute;top:547;left:90"><span class="ft1">one node to another if there is a line connecting them. In fact, the only way to get from </span></div>
<div style="position:absolute;top:563;left:90"><span class="ft1">node to node is to follow a path along the lines. Generally you are restricted to going in </span></div>
<div style="position:absolute;top:579;left:90"><span class="ft1">one direction along edges: from the root downward.</span></div>
<div style="position:absolute;top:576;left:407"><span class="ft0"> </span></div>
<div style="position:absolute;top:545;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:579;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:599;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:620;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:614;left:90"><span class="ft1"> Edges are likely to be represented in a program by references, if the program is written in </span></div>
<div style="position:absolute;top:630;left:90"><span class="ft1">Java (or by pointers if the program is written in C or C++).</span></div>
<div style="position:absolute;top:627;left:444"><span class="ft0"> </span></div>
<div style="position:absolute;top:620;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:631;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:650;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:695;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:666;left:90"><span class="ft1"> Typically there is one node in the top row of a tree, with lines connecting to more nodes </span></div>
<div style="position:absolute;top:682;left:90"><span class="ft1">on the second row, even more on the third, and so on. Thus trees are small on the top </span></div>
<div style="position:absolute;top:698;left:90"><span class="ft1">and large on the bottom. This may seem upside-down compared with real trees, but </span></div>
<div style="position:absolute;top:714;left:90"><span class="ft1">generally a program starts an operation at the small end of the tree, and it's (arguably) </span></div>
<div style="position:absolute;top:729;left:90"><span class="ft1">more natural to think about going from top to bottom, as in reading text.</span></div>
<div style="position:absolute;top:726;left:527"><span class="ft0"> </span></div>
<div style="position:absolute;top:695;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:730;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:749;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:802;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:765;left:90"><span class="ft1"> There are different kinds of trees. The tree shown in</span></div>
<div style="position:absolute;top:765;left:409"><span class="ft3"> Figure 8.1</span></div>
<div style="position:absolute;top:765;left:476"><span class="ft4"> has more than two children </span></div>
<div style="position:absolute;top:781;left:90"><span class="ft4">per node. (We'll see what &quot;children&quot; means in a moment.) However, in this chapter we'll be </span></div>
<div style="position:absolute;top:797;left:90"><span class="ft4">discussing a specialized form of tree called a binary tree. Each node in a binary tree has a </span></div>
<div style="position:absolute;top:813;left:90"><span class="ft4">maximum of two children. More general trees, in which nodes can have more than two </span></div>
<div style="position:absolute;top:829;left:90"><span class="ft4">children, are called multiway trees. We'll see an example in </span></div>
<div style="position:absolute;top:829;left:457"><span class="ft3">Chapter 10, &quot;2-3-4 Tables and </span></div>
<div style="position:absolute;top:844;left:90"><span class="ft3">External Storage,&quot;</span></div>
<div style="position:absolute;top:844;left:203"><span class="ft4"> where we discuss 2-3-4 trees.</span></div>
<div style="position:absolute;top:841;left:391"><span class="ft0"> </span></div>
<div style="position:absolute;top:845;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:861;left:79"><span class="ft8"> </span></div>
<div style="position:absolute;top:880;left:79"><span class="ft9">An Analogy</span></div>
<div style="position:absolute;top:882;left:183"><span class="ft0"> </span></div>
<div style="position:absolute;top:881;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:886;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:906;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:952;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:921;left:90"><span class="ft1"> One commonly encountered tree is the hierarchical file structure in a computer system. </span></div>
<div style="position:absolute;top:938;left:90"><span class="ft1">The root directory of a given device (designated with the backslash, as in </span></div>
<div style="position:absolute;top:938;left:542"><span class="ft10">C:\</span></div>
<div style="position:absolute;top:938;left:567"><span class="ft1">, on many </span></div>
<div style="position:absolute;top:955;left:90"><span class="ft1">systems) is the tree's root. The directories one level below the root directory are its </span></div>
<div style="position:absolute;top:971;left:90"><span class="ft1">children. There may be many levels of subdirectories. Files represent leaves; they have </span></div>
<div style="position:absolute;top:987;left:90"><span class="ft1">no children of their own.</span></div>
<div style="position:absolute;top:984;left:238"><span class="ft0"> </span></div>
<div style="position:absolute;top:952;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:987;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1006;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:1045;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1022;left:90"><span class="ft1"> Clearly a hierarchical file structure is not a binary tree, because a directory may have </span></div>
<div style="position:absolute;top:1038;left:90"><span class="ft1">many children. A complete pathname, such as </span></div>
<div style="position:absolute;top:1054;left:90"><span class="ft10">C:\SALES\EAST\NOVEMBER\SMITH.DAT</span></div>
<div style="position:absolute;top:1054;left:357"><span class="ft1">, corresponds to the path from the root to the </span></div>
<div style="position:absolute;top:1071;left:90"><span class="ft10">SMITH.DAT</span></div>
<div style="position:absolute;top:1071;left:165"><span class="ft1"> leaf. Terms used for the file structure, such as root and path, were borrowed </span></div>
<div style="position:absolute;top:1045;left:640"><span class="ft0"> </span></div>
<script TYPE="text/javascript">
			var currentZoom = parent.ltop.currentZoom;
			if(currentZoom != undefined)
				document.body.style.zoom=currentZoom/100;
			</script>
</body>
</html>