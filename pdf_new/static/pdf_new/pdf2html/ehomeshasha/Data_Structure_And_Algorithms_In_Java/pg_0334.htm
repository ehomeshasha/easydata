<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0052)http://www.verypdf.com/ -->
<html>
<head>
<title>pg_0334</title>

<style>
<!-- 
select {font-size:12px;}
A:link {text-decoration: none; color: blue}
A:visited {text-decoration: none; color: purple}
A:active {text-decoration: red}
A:hover {text-decoration: underline; color:red}
-->
</style>
<script TYPE="text/javascript"> 
<!-- hide 
function killerrors()
{ 
return true; 
} 
window.onerror = killerrors; 
// --> 
</script>
<style type="text/css">
<!--
.ft0{font-style:normal;font-weight:normal;font-size:16px;font-family:Times New Roman;color:#000000;}
.ft1{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft2{font-style:italic;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft3{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#008000;}
.ft4{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#000000;}
.ft5{font-style:normal;font-weight:bold;font-size:16px;font-family:Verdana;color:#000000;}
.ft6{font-style:normal;font-weight:bold;font-size:18px;font-family:Arial;color:#000080;}
-->
</style>
</head>
<body vlink="#FFFFFF" link="#FFFFFF" bgcolor="#ffffff">

<script TYPE="text/javascript">
var currentpos,timer; 
function initialize() 
{ 
timer=setInterval("scrollwindow()",10);
} 
function sc(){
clearInterval(timer); 
}
function scrollwindow() 
{ 
currentpos=document.body.scrollTop; 
window.scroll(0,++currentpos); 
if (currentpos != document.body.scrollTop) 
sc();
} 
document.onmousedown=sc
document.ondblclick=initialize
</script>
<div style="position:absolute;top:0;left:0"><img width="826" height="1169" src="pg_0334.jpg" ALT=""></div>
<div style="position:absolute;top:1102;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1102;left:391"><span class="ft0"> - 334 -</span></div>
<div style="position:absolute;top:81;left:90"><span class="ft1">larger than 1. That is, the height of a node's left subtree may be no more than one level </span></div>
<div style="position:absolute;top:97;left:90"><span class="ft1">different from the height of its right subtree.</span></div>
<div style="position:absolute;top:94;left:355"><span class="ft0"> </span></div>
<div style="position:absolute;top:97;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:116;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:153;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:132;left:90"><span class="ft1"> Following insertion, the root of the lowest subtree into which the new node was inserted </span></div>
<div style="position:absolute;top:148;left:90"><span class="ft1">is checked. If the height of its children differs by more than 1, a single or double rotation </span></div>
<div style="position:absolute;top:164;left:90"><span class="ft1">is performed to equalize their heights. The algorithm then moves up and checks the node </span></div>
<div style="position:absolute;top:180;left:90"><span class="ft1">above, equalizing heights if necessary. This continues all the way back up to the root.</span></div>
<div style="position:absolute;top:177;left:614"><span class="ft0"> </span></div>
<div style="position:absolute;top:153;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:180;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:199;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:237;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:215;left:90"><span class="ft1"> Search times in an AVL tree are O(logN) because the tree is guaranteed to be balanced. </span></div>
<div style="position:absolute;top:231;left:90"><span class="ft1">However, because two passes through the tree are necessary to insert (or delete) a </span></div>
<div style="position:absolute;top:247;left:90"><span class="ft1">node, one down to find the insertion point and one up to rebalance the tree, AVL trees </span></div>
<div style="position:absolute;top:263;left:90"><span class="ft1">are not as efficient as red-black trees and are not used as often.</span></div>
<div style="position:absolute;top:260;left:483"><span class="ft0"> </span></div>
<div style="position:absolute;top:237;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:263;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:282;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:320;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:298;left:90"><span class="ft1"> The other important kind of balanced tree is the multiway tree, in which each node can </span></div>
<div style="position:absolute;top:314;left:90"><span class="ft1">have more than two children. We'll look at one version of multiway trees, the 2-3-4 tree, in </span></div>
<div style="position:absolute;top:330;left:90"><span class="ft1">the </span></div>
<div style="position:absolute;top:330;left:114"><span class="ft3">next chapter</span></div>
<div style="position:absolute;top:330;left:190"><span class="ft4">. One problem with multiway trees is that each node must be larger than </span></div>
<div style="position:absolute;top:346;left:90"><span class="ft4">for a binary tree, because it needs a reference to every one of its children.</span></div>
<div style="position:absolute;top:343;left:544"><span class="ft0"> </span></div>
<div style="position:absolute;top:346;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:363;left:79"><span class="ft5"> </span></div>
<div style="position:absolute;top:383;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:382;left:90"><span class="ft6"> Summary</span></div>
<div style="position:absolute;top:384;left:176"><span class="ft0"> </span></div>
<div style="position:absolute;top:383;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:388;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:407;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:428;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:423;left:90"><span class="ft1"> .</span></div>
<div style="position:absolute;top:420;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:423;left:107"><span class="ft1">It's important to keep a binary search tree balanced to ensure that the time necessary </span></div>
<div style="position:absolute;top:439;left:107"><span class="ft1">to find a given node is kept as short as possible.</span></div>
<div style="position:absolute;top:436;left:403"><span class="ft0"> </span></div>
<div style="position:absolute;top:428;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:439;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:458;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:480;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:474;left:90"><span class="ft1"> .</span></div>
<div style="position:absolute;top:471;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:474;left:107"><span class="ft1">Inserting data that has already been sorted can create a maximally unbalanced tree, </span></div>
<div style="position:absolute;top:490;left:107"><span class="ft1">which will have search times of O(N).</span></div>
<div style="position:absolute;top:487;left:336"><span class="ft0"> </span></div>
<div style="position:absolute;top:480;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:490;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:509;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:531;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:525;left:90"><span class="ft1"> .</span></div>
<div style="position:absolute;top:522;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:525;left:107"><span class="ft1">In the red-black balancing scheme, each node is given a new characteristic: a color </span></div>
<div style="position:absolute;top:541;left:107"><span class="ft1">that can be either red or black.</span></div>
<div style="position:absolute;top:538;left:295"><span class="ft0"> </span></div>
<div style="position:absolute;top:531;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:541;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:560;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:582;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:576;left:90"><span class="ft1"> .</span></div>
<div style="position:absolute;top:573;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:576;left:107"><span class="ft1">A set of rules, called red-black rules, specifies permissible ways that nodes of different </span></div>
<div style="position:absolute;top:592;left:107"><span class="ft1">colors can be arranged.</span></div>
<div style="position:absolute;top:589;left:253"><span class="ft0"> </span></div>
<div style="position:absolute;top:582;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:592;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:611;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:627;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:627;left:90"><span class="ft1"> .</span></div>
<div style="position:absolute;top:624;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:627;left:107"><span class="ft4">These rules are applied while inserting (or deleting) a node.</span></div>
<div style="position:absolute;top:624;left:473"><span class="ft0"> </span></div>
<div style="position:absolute;top:627;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:630;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:649;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:671;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:665;left:90"><span class="ft1"> .</span></div>
<div style="position:absolute;top:662;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:665;left:107"><span class="ft4">A color flip changes a black node with two red children to a red node with two black </span></div>
<div style="position:absolute;top:681;left:107"><span class="ft4">children.</span></div>
<div style="position:absolute;top:678;left:160"><span class="ft0"> </span></div>
<div style="position:absolute;top:671;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:681;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:701;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:716;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:716;left:90"><span class="ft1"> .</span></div>
<div style="position:absolute;top:713;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:716;left:107"><span class="ft4">In a rotation, one node is designated the top node.</span></div>
<div style="position:absolute;top:713;left:417"><span class="ft0"> </span></div>
<div style="position:absolute;top:716;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:720;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:739;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:761;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:755;left:90"><span class="ft1"> .</span></div>
<div style="position:absolute;top:752;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:755;left:107"><span class="ft4">A right rotation moves the top node into the position of its right child, and the top </span></div>
<div style="position:absolute;top:771;left:107"><span class="ft4">node's left child into its position.</span></div>
<div style="position:absolute;top:768;left:302"><span class="ft0"> </span></div>
<div style="position:absolute;top:761;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:771;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:790;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:812;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:806;left:90"><span class="ft1"> .</span></div>
<div style="position:absolute;top:803;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:806;left:107"><span class="ft4">A left rotation moves the top node into the position of its left child, and the top node's </span></div>
<div style="position:absolute;top:822;left:107"><span class="ft4">right child into its position.</span></div>
<div style="position:absolute;top:819;left:266"><span class="ft0"> </span></div>
<div style="position:absolute;top:812;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:822;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:841;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:871;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:857;left:90"><span class="ft1"> .</span></div>
<div style="position:absolute;top:854;left:95"><span class="ft0"> </span></div>
<div style="position:absolute;top:871;left:102"><span class="ft0">  </span></div>
<div style="position:absolute;top:857;left:107"><span class="ft4">Color flips, and sometimes rotations, are applied while searching down the tree to find </span></div>
<div style="position:absolute;top:873;left:107"><span class="ft4">where a new node should be inserted. These flips simplify returning the tree to red-</span></div>
<div style="position:absolute;top:889;left:107"><span class="ft4">black correctness following an insertion.</span></div>
<div style="position:absolute;top:886;left:353"><span class="ft0"> </span></div>
<div style="position:absolute;top:871;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:889;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:908;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:930;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:924;left:90"><span class="ft1"> .</span></div>
<div style="position:absolute;top:921;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:924;left:107"><span class="ft1">After a new node is inserted, red-red conflicts are checked again. If a violation is </span></div>
<div style="position:absolute;top:940;left:107"><span class="ft1">found, appropriate rotations are carried out to make the tree red-black correct.</span></div>
<div style="position:absolute;top:937;left:586"><span class="ft0"> </span></div>
<div style="position:absolute;top:930;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:940;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:959;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:975;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:975;left:90"><span class="ft1"> .</span></div>
<div style="position:absolute;top:972;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:975;left:107"><span class="ft1">These adjustments result in the tree being balanced, or at least almost balanced.</span></div>
<div style="position:absolute;top:972;left:604"><span class="ft0">   </span></div>
<div style="position:absolute;top:979;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:998;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:1019;left:79"><span class="ft0">  </span></div>
<div style="position:absolute;top:1014;left:90"><span class="ft1"> .</span></div>
<div style="position:absolute;top:1011;left:95"><span class="ft0">   </span></div>
<div style="position:absolute;top:1014;left:107"><span class="ft1">Adding red-black balancing to a binary tree has only a small negative effect on average </span></div>
<div style="position:absolute;top:1030;left:107"><span class="ft1">performance, and avoids worst-case performance when the data is already sorted.</span></div>
<div style="position:absolute;top:1027;left:614"><span class="ft0"> </span></div>
<div style="position:absolute;top:1030;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1046;left:79"><span class="ft5"> </span></div>
<script TYPE="text/javascript">
			var currentZoom = parent.ltop.currentZoom;
			if(currentZoom != undefined)
				document.body.style.zoom=currentZoom/100;
			</script>
</body>
</html>