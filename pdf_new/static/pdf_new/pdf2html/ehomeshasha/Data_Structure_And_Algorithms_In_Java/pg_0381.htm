<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0052)http://www.verypdf.com/ -->
<html>
<head>
<title>pg_0381</title>

<style>
<!-- 
select {font-size:12px;}
A:link {text-decoration: none; color: blue}
A:visited {text-decoration: none; color: purple}
A:active {text-decoration: red}
A:hover {text-decoration: underline; color:red}
-->
</style>
<script TYPE="text/javascript"> 
<!-- hide 
function killerrors()
{ 
return true; 
} 
window.onerror = killerrors; 
// --> 
</script>
<style type="text/css">
<!--
.ft0{font-style:normal;font-weight:normal;font-size:16px;font-family:Times New Roman;color:#000000;}
.ft1{font-style:normal;font-weight:normal;font-size:13px;font-family:Times New Roman;color:#000000;}
.ft2{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft3{font-style:normal;font-weight:bold;font-size:13px;font-family:Arial;color:#010100;}
.ft4{font-style:italic;font-weight:normal;font-size:13px;font-family:Arial;color:#010100;}
.ft5{font-style:normal;font-weight:normal;font-size:13px;font-family:Arial;color:#000000;}
-->
</style>
</head>
<body vlink="#FFFFFF" link="#FFFFFF" bgcolor="#ffffff">

<script TYPE="text/javascript">
var currentpos,timer; 
function initialize() 
{ 
timer=setInterval("scrollwindow()",10);
} 
function sc(){
clearInterval(timer); 
}
function scrollwindow() 
{ 
currentpos=document.body.scrollTop; 
window.scroll(0,++currentpos); 
if (currentpos != document.body.scrollTop) 
sc();
} 
document.onmousedown=sc
document.ondblclick=initialize
</script>
<div style="position:absolute;top:0;left:0"><img width="826" height="1169" src="pg_0381.jpg" ALT=""></div>
<div style="position:absolute;top:1102;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1102;left:391"><span class="ft0"> - 381 -</span></div>
<div style="position:absolute;top:84;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:82;left:136"><span class="ft1">  </span></div>
<div style="position:absolute;top:82;left:640"><span class="ft1">  </span></div>
<div style="position:absolute;top:84;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:103;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:141;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:119;left:90"><span class="ft2"> When you use the applet, note that it may take a long time to fill a hash table if you try to </span></div>
<div style="position:absolute;top:135;left:90"><span class="ft2">fill it too full (for example, if you try to put 59 items in a 60-cell table). You may think the </span></div>
<div style="position:absolute;top:151;left:90"><span class="ft2">program has stopped, but be patient. It's extremely inefficient at filling an almost-full </span></div>
<div style="position:absolute;top:167;left:90"><span class="ft2">array.</span></div>
<div style="position:absolute;top:164;left:126"><span class="ft0"> </span></div>
<div style="position:absolute;top:141;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:167;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:186;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:208;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:202;left:90"><span class="ft2"> Also, note that if the hash table becomes completely full the algorithms all stop working; </span></div>
<div style="position:absolute;top:218;left:90"><span class="ft2">in this applet they assume that the table has at least one empty cell.</span></div>
<div style="position:absolute;top:215;left:507"><span class="ft0"> </span></div>
<div style="position:absolute;top:208;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:218;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:237;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:275;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:253;left:90"><span class="ft3"> The Find Button  The Find button starts by applying the hash function to the key value </span></div>
<div style="position:absolute;top:269;left:90"><span class="ft2">you type into the number box. This results in an array index. The cell at this index may be </span></div>
<div style="position:absolute;top:285;left:90"><span class="ft2">the key you're looking for; this is the optimum situation, and success will be reported </span></div>
<div style="position:absolute;top:301;left:90"><span class="ft2">immediately.</span></div>
<div style="position:absolute;top:298;left:168"><span class="ft0"> </span></div>
<div style="position:absolute;top:275;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:301;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:320;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:358;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:336;left:90"><span class="ft2"> However, it's also possible that this cell is  already occupied by a data item with some </span></div>
<div style="position:absolute;top:352;left:90"><span class="ft2">other key. This is a collision; you'll see the red arrow pointing to an occupied cell. </span></div>
<div style="position:absolute;top:368;left:90"><span class="ft2">Following a collision, the search algorithm will look at the next cell in sequence. The </span></div>
<div style="position:absolute;top:384;left:90"><span class="ft2">process of finding an appropriate cell following a collision is called a probe.</span></div>
<div style="position:absolute;top:381;left:549"><span class="ft0"> </span></div>
<div style="position:absolute;top:358;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:384;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:403;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:449;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:419;left:90"><span class="ft2"> Following a collision, the Find algorithm simply steps along the array looking at each cell </span></div>
<div style="position:absolute;top:435;left:90"><span class="ft2">in sequence. If it encounters an empty cell before finding the key it's looking for, it knows </span></div>
<div style="position:absolute;top:451;left:90"><span class="ft2">the search has failed. There's no use looking further, because the insertion algorithm </span></div>
<div style="position:absolute;top:467;left:90"><span class="ft2">would have inserted the item at this cell (if not earlier). Figure 11.7</span></div>
<div style="position:absolute;top:467;left:496"><span class="ft5"> shows successful and </span></div>
<div style="position:absolute;top:483;left:90"><span class="ft5">unsuccessful linear probes.</span></div>
<div style="position:absolute;top:480;left:259"><span class="ft0"> </span></div>
<div style="position:absolute;top:449;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:483;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:502;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:623;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:732;left:360"><span class="ft0">  </span></div>
<div style="position:absolute;top:623;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:732;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:751;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:767;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:767;left:136"><span class="ft3"> Figure 11.7:  Linear probes</span></div>
<div style="position:absolute;top:764;left:307"><span class="ft0"> </span></div>
<div style="position:absolute;top:767;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:790;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:788;left:136"><span class="ft1">  </span></div>
<div style="position:absolute;top:788;left:640"><span class="ft1">  </span></div>
<div style="position:absolute;top:790;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:809;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:847;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:825;left:90"><span class="ft3"> The Ins Button  The Ins button inserts a data item, with a key value that you type into </span></div>
<div style="position:absolute;top:841;left:90"><span class="ft2">the number box, into the hash table. It uses the same algorithm as the Find button to </span></div>
<div style="position:absolute;top:857;left:90"><span class="ft2">locate the appropriate cell. If the original cell is occupied, it will probe linearly for a vacant </span></div>
<div style="position:absolute;top:873;left:90"><span class="ft2">cell. When it finds one, it inserts the item.</span></div>
<div style="position:absolute;top:870;left:343"><span class="ft0"> </span></div>
<div style="position:absolute;top:847;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:873;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:892;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:938;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:908;left:90"><span class="ft2"> Try inserting some new data items. Type in a 3-digit number and watch what happens. </span></div>
<div style="position:absolute;top:924;left:90"><span class="ft2">Most items will go into the first cell they try, but some will suffer collisions, and need to </span></div>
<div style="position:absolute;top:940;left:90"><span class="ft2">step along to find an empty cell. The number of steps they take is the probe length. Most </span></div>
<div style="position:absolute;top:956;left:90"><span class="ft2">probe lengths are only a few cells long. Sometimes, however, you may see probe lengths </span></div>
<div style="position:absolute;top:972;left:90"><span class="ft2">of 4 or 5 cells, or even longer as the array becomes excessively full.</span></div>
<div style="position:absolute;top:969;left:507"><span class="ft0"> </span></div>
<div style="position:absolute;top:938;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:972;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:991;left:80"><span class="ft0"> </span></div>
<div style="position:absolute;top:1021;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1007;left:90"><span class="ft2"> Notice which keys hash to the same index. If the array size is 60, the keys 7, 67, 127, </span></div>
<div style="position:absolute;top:1023;left:90"><span class="ft2">187, 247, and so on up to 967 all hash to index 7. Try inserting this sequence or a similar </span></div>
<div style="position:absolute;top:1039;left:90"><span class="ft2">one. This will demonstrate the linear probe.</span></div>
<div style="position:absolute;top:1036;left:356"><span class="ft0"> </span></div>
<div style="position:absolute;top:1021;left:640"><span class="ft0">  </span></div>
<div style="position:absolute;top:1039;left:79"><span class="ft0"> </span></div>
<div style="position:absolute;top:1058;left:80"><span class="ft0"> </span></div>
<script TYPE="text/javascript">
			var currentZoom = parent.ltop.currentZoom;
			if(currentZoom != undefined)
				document.body.style.zoom=currentZoom/100;
			</script>
</body>
</html>